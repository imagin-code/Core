//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float BlendMode;
//   sampler2D InputA;
//   sampler2D InputB;
//   sampler2D InputC;
//   float Mask;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   BlendMode    c0       1
//   Mask         c1       1
//   InputA       s0       1
//   InputB       s1       1
//   InputC       s2       1
//

    ps_3_0
    def c2, 0.00100000005, 0.5, 2, 4
    def c3, 0, -1, -2, -3
    def c4, 1, 0.333333343, 1.33333337, -0.666666627
    def c5, 0.166666672, 1, 6, 0.666666687
    def c6, 1, -1, -0.333333343, 0.666666627
    def c7, 21, -22, 23, 24
    def c8, -0.166666672, -0.5, -0.666666687, 5
    def c9, 7, 8, 9, 10
    def c10, 2, -1, 11, 12
    def c11, 13, 14, 15, 16
    def c12, 17, 18, 19, 20
    def c13, 25, 26, 0, 0
    dcl_texcoord v0.xy  // xy<0,1>
    dcl_2d s0
    dcl_2d s1
    dcl_2d s2

#line 584 "C:\Users\james\GitHub\Imagin.NET\Apps.Paint\Effects\Blend.fx"
    texld r0, v0, s1  // ::color2<0,1,2,3>
    mov r1, c3
    if_lt -c1.x, r1.x
      texld r2, v0, s2  // ::color3<0,1,2,3>

#line 607
      add r2.xyz, r1.yzww, c1.x

#line 596
      cmp r3, -r2_abs.w, c3.x, r0  // ::color2<0,1,2,3>

#line 601
      cmp r4.x, -r2.w, c3_abs.x, c3_abs.y

#line 612
      cmp r5, -r2.w, r0, c3.x  // ::color2<0,1,2,3>
      cmp r5, -r2_abs.z, r5, r0  // ::color2<0,1,2,3>
      cmp r5, -r2_abs.y, r0, r5  // ::color2<0,1,2,3>
      cmp r2.y, -r2_abs.y, r4.x, c3.x
      cmp r0, -r2_abs.x, r3, r5  // ::color2<0,1,2,3>
      cmp r2.x, -r2_abs.x, c3.x, r2.y
    else
      mov r2.x, c3.x
    endif
    if_ne r2.x, -r2.x
      mov oC0, c3.x  // ::main<0,1,2,3>
    else

#line 583
      texld r2, v0, s0  // ::color1<0,1,2,3>

#line 120
      cmp r0.xyz, -r0_abs, c2.x, r0  // Blend::blendColor<0,1,2>

#line 126
      if_eq c0.x, r1.x

#line 129
        rcp r1.x, r0.w
        mul_sat r0.xyz, r0, r1.x  // Blend::blendColor<0,1,2>

#line 132
        add r3.xyz, r0, r2
        mul r3.xyz, r0.w, r3

#line 135
        add r1.x, -r0.w, -c3.y
        mul r3.xyz, r3, c2.y
        mad oC0.xyz, r1.x, r2, r3  // ::result<0,1,2>
        mov oC0.w, r2.w  // ::result<3>
      else
        if_eq c0.x, -r1.y

#line 141
          rcp r1.x, r0.w
          mul_sat r0.xyz, r0, r1.x  // Blend::blendColor<0,1,2>

#line 145
          add r3.xyz, -r2, -c3.y
          rcp r4.x, r0.x
          rcp r4.y, r0.y
          rcp r4.z, r0.z
          mad_sat r3.xyz, r3, -r4, -c3.y  // ::result<0,1,2>

#line 148
          lrp oC0.xyz, r0.w, r3, r2  // ::result<0,1,2>
          mov oC0.w, r2.w  // ::result<3>
        else
          if_eq c0.x, -r1.z

#line 154
            rcp r1.x, r0.w
            mul_sat r0.xyz, r0, r1.x  // Blend::blendColor<0,1,2>

#line 160
            add r1.xyz, r0, c3.y
            add r3.xyz, -r0, -c3.y
            rcp r3.x, r3.x
            mul r3.x, r2.x, r3.x
            min r4.x, r3.x, -c3.y
            cmp r4.x, r1.x, r0.x, r4.x  // ::result<0>
            rcp r1.x, r3.y
            mul r1.x, r1.x, r2.y
            min r3.x, r1.x, -c3.y
            cmp r4.y, r1.y, r0.y, r3.x  // ::result<1>
            rcp r1.x, r3.z
            mul r1.x, r1.x, r2.z
            min r3.x, r1.x, -c3.y
            cmp r4.z, r1.z, r0.z, r3.x  // ::result<2>

#line 163
            lrp oC0.xyz, r0.w, r4, r2  // ::result<0,1,2>
            mov oC0.w, r2.w  // ::result<3>
          else
            if_eq c0.x, -r1.w

#line 169
              rcp r1.x, r0.w
              mul_sat r0.xyz, r0, r1.x  // Blend::blendColor<0,1,2>

#line 75
              add r1.xyz, -r0.xzyw, r0.zyxw

#line 49
              cmp r3.xy, r1.z, r0.yxzw, r0
              min r1.w, r0.z, r3.x  // ::fmin<0>
              max r4.x, r3.y, r0.z  // ::fmax<0>
              add r3.x, -r1.w, r4.x  // ::delta<0>
              add r1.w, r1.w, r4.x  // ::maxplusmin<0>

#line 67
              add r3.y, r1.w, c3.y
              rcp r3.z, r1.w
              mul r3.z, r3.z, r3.x  // ::hsl<1>
              add r1.w, -r1.w, -c3.z
              rcp r1.w, r1.w
              mul r1.w, r1.w, r3.x  // ::hsl<1>
              cmp r5.x, r3.y, r1.w, r3.z  // ::hsl<1>

#line 74
              add r3.yz, r0.xxyw, -r4.x
              rcp r1.w, r3.x

#line 77
              mul r1.y, r1.w, r1.y  // ::hsl<0>
              mad r1.xz, r1, r1.w, c2.zyww  // ::hsl<0,0>
              cmp r1.x, -r3_abs.z, r1.x, r1.z  // ::hsl<0>
              cmp r1.x, -r3_abs.y, r1.y, r1.x  // ::hsl<0>
              mul r1.y, r1.x, c5.x  // ::hsl<0>

#line 82
              mad r1.z, r1.x, c5.x, c5.y  // ::hsl<0>
              cmp r5.yzw, r1.x, r1.y, r1.z  // ::hsl<0,0,0>
              cmp r1, -r3_abs.x, c3.x, r5  // ::hsl<1,0,0,0>

#line 48
              add r3.x, -r2.y, r2.x
              cmp r3.xy, r3.x, r2.yxzw, r2
              min r4.x, r2.z, r3.x  // ::fmin<0>
              max r4.y, r3.y, r2.z  // ::fmax<0>
              add r3.x, r4.x, r4.y  // ::maxplusmin<0>

#line 54
              mul r3.yzw, r3.x, c2.y  // ::hsl<2,2,2>

#line 92
              if_eq r1.x, c3.x

#line 95
              else

#line 99
                add r4.x, r3.x, c3.y

#line 26
                add r5, r1, c4  // GetHue::temp3<0,0,0>

#line 100
                mul r1.y, r3.w, r5.x  // ::temp2<0>
                mad r1.z, r3.x, c2.y, r1.x
                mad r1.x, r1.x, -r3.w, r1.z  // ::temp2<0>
                cmp r1.x, r4.x, r1.x, r1.y  // ::temp2<0>
                add r1.y, -r1.x, r3.x  // ::temp1<0>

#line 25
                add r1.z, -r5.y, -c3.y
                cmp r1.z, r1.z, r5.y, r5.w  // GetHue::temp3<0>
                cmp r1.z, r5.y, r1.z, r5.z  // GetHue::temp3<0>

#line 31
                add r3.x, -r1.y, r1.x
                mul r4.x, r3.x, c5.z
                mad r4.y, r4.x, r1.z, r1.y  // ::rgbComponent<0>

#line 34
                add r5.xyz, r1.z, c8
                add r1.z, -r1.z, c5.w
                mul r1.z, r1.z, r3.x
                mad r1.z, r1.z, c5.z, r1.y  // ::rgbComponent<0>
                cmp r1.z, r5.z, r1.y, r1.z  // ::rgbComponent<0>
                cmp r1.z, r5.y, r1.z, r1.x  // ::rgbComponent<0>
                cmp r3.y, r5.x, r1.z, r4.y  // ::rgbComponent<0>

#line 25
                add r1.z, -r1.w, -c3.y
                add r5, r1.w, c6  // GetHue::temp3<0,0,0,0>
                cmp r1.z, r1.z, r1.w, r5.y  // GetHue::temp3<0>
                cmp r1.z, r1.w, r1.z, r5.x  // GetHue::temp3<0>

#line 31
                mad r4.y, r4.x, r1.z, r1.y  // ::rgbComponent<0>

#line 34
                add r6.xyz, r1.z, c8
                add r1.z, -r1.z, c5.w
                mul r1.z, r1.z, r3.x
                mad r1.z, r1.z, c5.z, r1.y  // ::rgbComponent<0>
                cmp r1.z, r6.z, r1.y, r1.z  // ::rgbComponent<0>
                cmp r1.z, r6.y, r1.z, r1.x  // ::rgbComponent<0>
                cmp r3.z, r6.x, r1.z, r4.y  // ::rgbComponent<0>

#line 25
                add r1.z, -r5.z, -c3.y
                add r1.w, r1.w, -c4.z  // GetHue::temp3<0>
                cmp r1.z, r1.z, r5.z, r1.w  // GetHue::temp3<0>
                cmp r1.z, r5.z, r1.z, r5.w  // GetHue::temp3<0>

#line 31
                mad r1.w, r4.x, r1.z, r1.y  // ::rgbComponent<0>

#line 34
                add r4.xyz, r1.z, c8
                add r1.z, -r1.z, c5.w
                mul r1.z, r1.z, r3.x
                mad r1.z, r1.z, c5.z, r1.y  // ::rgbComponent<0>
                cmp r1.y, r4.z, r1.y, r1.z  // ::rgbComponent<0>
                cmp r1.x, r4.y, r1.y, r1.x  // ::rgbComponent<0>
                cmp r3.w, r4.x, r1.x, r1.w  // ::rgbComponent<0>

#line 109
              endif

#line 176
              lrp oC0.xyz, r0.w, r3.yzww, r2  // ::result<0,1,2>
              mov oC0.w, r2.w  // ::result<3>
            else
              mov r1.w, c2.w
              if_eq c0.x, r1.w

#line 182
                rcp r1.x, r0.w
                mul_sat r0.xyz, r0, r1.x  // Blend::blendColor<0,1,2>

#line 200
                min r1.xyz, r2, r0  // ::result<0,1,2>

#line 203
                lrp oC0.xyz, r0.w, r1, r2  // ::result<0,1,2>
                mov oC0.w, r2.w  // ::result<3>
              else
                mov r1.w, c8.w
                if_eq c0.x, r1.w

#line 209
                  rcp r1.x, r0.w
                  mul_sat r0.xyz, r0, r1.x  // Blend::blendColor<0,1,2>

#line 213
                  add r1.xyz, -r0, r2

#line 216
                  lrp oC0.xyz, r0.w, r1_abs, r2  // ::result<0,1,2>
                  mov oC0.w, r2.w  // ::result<3>
                else
                  mov r1.z, c5.z
                  if_eq c0.x, r1.z

#line 222
                    rcp r1.x, r0.w
                    mul_sat r0.xyz, r0, r1.x  // Blend::blendColor<0,1,2>

#line 226
                    add r1.xyz, r2, -c2.y
                    add r1.xyz, r1, r1
                    add r3.xyz, r0, -c2.y
                    mad r1.xyz, r1, -r3, c2.y  // ::result<0,1,2>

#line 229
                    lrp oC0.xyz, r0.w, r1, r2  // ::result<0,1,2>
                    mov oC0.w, r2.w  // ::result<3>
                  else
                    mov r1.x, c0.x  // ::BlendMode<0>
                    if_eq r1.x, c9.x

#line 235
                      rcp r1.y, r0.w
                      mul_sat r0.xyz, r0, r1.y  // Blend::blendColor<0,1,2>

#line 240
                      add r1.yzw, r2.xxyz, c3.y
                      mul r3.xyz, r0, r0
                      add r4.xyz, -r2, -c3.y
                      rcp r3.w, r4.x
                      mul r3.x, r3.w, r3.x
                      min r4.x, r3.x, -c3.y
                      cmp r5.x, -r1_abs.y, r2.x, r4.x  // ::result<0>
                      rcp r1.y, r4.y
                      mul r1.y, r1.y, r3.y
                      min r3.x, r1.y, -c3.y
                      cmp r5.y, -r1_abs.z, r2.y, r3.x  // ::result<1>
                      rcp r1.y, r4.z
                      mul r1.y, r1.y, r3.z
                      min r3.x, r1.y, -c3.y
                      cmp r5.z, -r1_abs.w, r2.z, r3.x  // ::result<2>

#line 243
                      lrp oC0.xyz, r0.w, r5, r2  // ::result<0,1,2>
                      mov oC0.w, r2.w  // ::result<3>
                    else
                      if_eq r1.x, c9.y

#line 249
                        rcp r1.y, r0.w
                        mul_sat r0.xyz, r0, r1.y  // Blend::blendColor<0,1,2>

#line 266
                        add r1.yzw, -r0.xxyz, c2.y
                        add r3.xyz, -r2, -c3.y
                        add r4.xyz, r0, -c2.y
                        mad r4.xyz, r4, c3.z, -c3.y
                        mad r3.xyz, r3, -r4, -c3.y  // ::result<0,1,2>

#line 258
                        dp2add r3.w, r2.x, r0.x, c3.x  // ::result<0>
                        cmp r4.x, r1.y, r3.w, r3.x  // ::result<0>

#line 264
                        dp2add r1.y, r2.y, r0.y, c3.x  // ::result<1>
                        cmp r4.y, r1.z, r1.y, r3.y  // ::result<1>

#line 270
                        dp2add r1.y, r2.z, r0.z, c3.x  // ::result<2>
                        cmp r4.z, r1.w, r1.y, r3.z  // ::result<2>

#line 273
                        lrp oC0.xyz, r0.w, r4, r2  // ::result<0,1,2>
                        mov oC0.w, r2.w  // ::result<3>
                      else
                        if_eq r1.x, c9.z

#line 279
                          rcp r1.y, r0.w
                          mul_sat r0.xyz, r0, r1.y  // Blend::blendColor<0,1,2>

#line 284
                          add r1.yzw, r0.xxyz, -c2.y
                          add r3.xyz, r0, r0
                          add r4.xyz, -r2, -c3.y
                          rcp r3.w, r3.x
                          mad r3.w, r4.x, -r3.w, -c3.y
                          max r4.x, r3.w, c3.x
                          cmp r3.x, -r3.x, r3.x, r4.x
                          add r5.xyz, r1.yzww, r1.yzww
                          mad r6.xyz, r1.yzww, c10.x, c10.y
                          mad r7.xyz, r1.yzww, c3.z, -c3.y
                          rcp r3.w, r7.x
                          mul r3.w, r2.x, r3.w
                          min r4.x, r3.w, -c3.y
                          cmp r3.w, r6.x, r5.x, r4.x
                          cmp r1.y, r1.y, r3.w, r3.x
                          add r1.y, r1.y, -c2.y
                          cmp r8.x, r1.y, c3_abs.y, c3_abs.x  // ::result<0>
                          rcp r1.y, r3.y
                          mad r1.y, r4.y, -r1.y, -c3.y
                          max r3.x, r1.y, c3.x
                          cmp r1.y, -r3.y, r3.y, r3.x
                          rcp r3.x, r7.y
                          mul r3.x, r2.y, r3.x
                          min r4.x, r3.x, -c3.y
                          cmp r3.x, r6.y, r5.y, r4.x
                          cmp r1.y, r1.z, r3.x, r1.y
                          add r1.y, r1.y, -c2.y
                          cmp r8.y, r1.y, c3_abs.y, c3_abs.x  // ::result<1>
                          rcp r1.y, r3.z
                          mad r1.y, r4.z, -r1.y, -c3.y
                          max r3.x, r1.y, c3.x
                          cmp r1.y, -r3.z, r3.z, r3.x
                          rcp r1.z, r7.z
                          mul r1.z, r1.z, r2.z
                          min r3.x, r1.z, -c3.y
                          cmp r1.z, r6.z, r5.z, r3.x
                          cmp r1.y, r1.w, r1.z, r1.y
                          add r1.y, r1.y, -c2.y
                          cmp r8.z, r1.y, c3_abs.y, c3_abs.x  // ::result<2>

#line 287
                          lrp oC0.xyz, r0.w, r8, r2  // ::result<0,1,2>
                          mov oC0.w, r2.w  // ::result<3>
                        else
                          if_eq r1.x, c9.w

#line 293
                            rcp r1.y, r0.w
                            mul_sat r0.xyz, r0, r1.y  // Blend::blendColor<0,1,2>

#line 48
                            add r1.y, -r2.y, r2.x
                            cmp r1.yz, r1.y, r2.xyxw, r2.xxyw
                            min r3.x, r2.z, r1.y  // ::fmin<0>
                            max r3.y, r1.z, r2.z  // ::fmax<0>
                            add r1.y, -r3.x, r3.y  // ::delta<0>
                            add r1.z, r3.x, r3.y  // ::maxplusmin<0>

#line 54
                            mul r3.xyz, r1.z, c2.y  // ::hsl<2,2,2>

#line 67
                            add r1.w, r1.z, c3.y
                            rcp r3.w, r1.z
                            mul r3.w, r1.y, r3.w  // ::hsl<1>
                            add r4.x, -r1.z, -c3.z
                            rcp r4.x, r4.x
                            mul r4.x, r1.y, r4.x  // ::hsl<1>
                            cmp r3.w, r1.w, r4.x, r3.w  // ::hsl<1>

#line 83
                            cmp r1.y, -r1_abs.y, c3.x, r3.w  // ::hsl<1>

#line 92
                            if_eq r1.y, c3.x

#line 95
                            else

#line 75
                              add r4.xyz, -r0.xzyw, r0.zyxw

#line 49
                              cmp r5.xy, r4.z, r0.yxzw, r0
                              min r3.w, r0.z, r5.x  // ::fmin<0>
                              max r4.w, r5.y, r0.z  // ::fmax<0>
                              add r3.w, -r3.w, r4.w  // ::delta<0>

#line 74
                              add r5.xy, r0, -r4.w
                              rcp r4.w, r3.w

#line 77
                              mul r4.y, r4.w, r4.y  // ::hsl<0>
                              mad r4.xz, r4, r4.w, c2.zyww  // ::hsl<0,0>
                              cmp r4.x, -r5_abs.y, r4.x, r4.z  // ::hsl<0>
                              cmp r4.x, -r5_abs.x, r4.y, r4.x  // ::hsl<0>
                              mul r4.y, r4.x, c5.x  // ::hsl<0>

#line 82
                              mad r4.z, r4.x, c5.x, c5.y  // ::hsl<0>
                              cmp r4.x, r4.x, r4.y, r4.z  // ::hsl<0>
                              cmp r3.w, -r3_abs.w, c3.x, r4.x  // ::hsl<0>

#line 100
                              add r4.x, r1.y, -c3.y
                              mul r4.x, r3.z, r4.x  // ::temp2<0>
                              mad r4.y, r1.z, c2.y, r1.y
                              mad r1.y, r1.y, -r3.z, r4.y  // ::temp2<0>
                              cmp r1.y, r1.w, r1.y, r4.x  // ::temp2<0>
                              add r1.z, -r1.y, r1.z  // ::temp1<0>

#line 24
                              add r4, r3.w, c4.yzwx  // GetHue::temp3<0,0,0,0>
                              add r1.w, -r4.x, -c3.y
                              cmp r1.w, r1.w, r4.x, r4.z  // GetHue::temp3<0>
                              cmp r1.w, r4.x, r1.w, r4.y  // GetHue::temp3<0>

#line 31
                              add r4.x, -r1.z, r1.y
                              mul r4.y, r4.x, c5.z
                              mad r4.z, r4.y, r1.w, r1.z  // ::rgbComponent<0>

#line 34
                              add r5.xyz, r1.w, c8
                              add r1.w, -r1.w, c5.w
                              mul r1.w, r1.w, r4.x
                              mad r1.w, r1.w, c5.z, r1.z  // ::rgbComponent<0>
                              cmp r1.w, r5.z, r1.z, r1.w  // ::rgbComponent<0>
                              cmp r1.w, r5.y, r1.w, r1.y  // ::rgbComponent<0>
                              cmp r3.x, r5.x, r1.w, r4.z  // ::rgbComponent<0>

#line 25
                              add r1.w, -r3.w, -c3.y
                              add r5, r3.w, -c4.xywz  // GetHue::temp3<0,0,0,0>
                              cmp r1.w, r1.w, r3.w, r5.x  // GetHue::temp3<0>
                              cmp r1.w, r3.w, r1.w, r4.w  // GetHue::temp3<0>

#line 31
                              mad r3.w, r4.y, r1.w, r1.z  // ::rgbComponent<0>

#line 34
                              add r6.xyz, r1.w, c8
                              add r1.w, -r1.w, c5.w
                              mul r1.w, r1.w, r4.x
                              mad r1.w, r1.w, c5.z, r1.z  // ::rgbComponent<0>
                              cmp r1.w, r6.z, r1.z, r1.w  // ::rgbComponent<0>
                              cmp r1.w, r6.y, r1.w, r1.y  // ::rgbComponent<0>
                              cmp r3.y, r6.x, r1.w, r3.w  // ::rgbComponent<0>

#line 25
                              add r1.w, -r5.y, -c3.y
                              cmp r1.w, r1.w, r5.y, r5.w  // GetHue::temp3<0>
                              cmp r1.w, r5.y, r1.w, r5.z  // GetHue::temp3<0>

#line 31
                              mad r3.w, r4.y, r1.w, r1.z  // ::rgbComponent<0>

#line 34
                              add r4.yzw, r1.w, c8.xxyz
                              add r1.w, -r1.w, c5.w
                              mul r1.w, r1.w, r4.x
                              mad r1.w, r1.w, c5.z, r1.z  // ::rgbComponent<0>
                              cmp r1.z, r4.w, r1.z, r1.w  // ::rgbComponent<0>
                              cmp r1.y, r4.z, r1.z, r1.y  // ::rgbComponent<0>
                              cmp r3.z, r4.y, r1.y, r3.w  // ::rgbComponent<0>

#line 109
                            endif

#line 300
                            lrp oC0.xyz, r0.w, r3, r2  // ::result<0,1,2>
                            mov oC0.w, r2.w  // ::result<3>
                          else
                            if_eq r1.x, c10.z

#line 306
                              rcp r1.y, r0.w
                              mul_sat r0.xyz, r0, r1.y  // Blend::blendColor<0,1,2>

#line 325
                              max r1.yzw, r2.xxyz, r0.xxyz  // ::result<0,1,2>

#line 328
                              lrp oC0.xyz, r0.w, r1.yzww, r2  // ::result<0,1,2>
                              mov oC0.w, r2.w  // ::result<3>
                            else
                              if_eq r1.x, c10.w

#line 334
                                rcp r1.y, r0.w
                                mul_sat r0.xyz, r0, r1.y  // Blend::blendColor<0,1,2>

#line 338
                                add r1.yzw, r0.xxyz, r2.xxyz
                                add_sat r1.yzw, r1, c3.y  // ::result<0,1,2>

#line 341
                                lrp oC0.xyz, r0.w, r1.yzww, r2  // ::result<0,1,2>
                                mov oC0.w, r2.w  // ::result<3>
                              else
                                if_eq r1.x, c11.x

#line 347
                                  rcp r1.y, r0.w
                                  mul_sat r0.xyz, r0, r1.y  // Blend::blendColor<0,1,2>

#line 351
                                  add r1.yzw, r0.xxyz, r2.xxyz  // ::result<0,1,2>

#line 354
                                  lrp oC0.xyz, r0.w, r1.yzww, r2  // ::result<0,1,2>
                                  mov oC0.w, r2.w  // ::result<3>
                                else
                                  if_eq r1.x, c11.y

#line 360
                                    rcp r1.y, r0.w
                                    mul_sat r0.xyz, r0, r1.y  // Blend::blendColor<0,1,2>

#line 377
                                    add r1.yzw, -r0.xxyz, c2.y
                                    add r3.xyz, r0, -c2.y
                                    mad r3.xyz, r3, -c3.z, r2  // ::result<0,1,2>
                                    mad r4.xyz, r0, -c3.z, r2
                                    add r4.xyz, r4, c3.y  // ::result<0,1,2>
                                    cmp r1.yzw, r1, r4.xxyz, r3.xxyz  // ::result<0,1,2>

#line 384
                                    lrp oC0.xyz, r0.w, r1.yzww, r2  // ::result<0,1,2>
                                    mov oC0.w, r2.w  // ::result<3>
                                  else
                                    if_eq r1.x, c11.z

#line 390
                                      rcp r1.y, r0.w
                                      mul_sat r0.xyz, r0, r1.y  // Blend::blendColor<0,1,2>

#line 75
                                      add r1.yzw, -r2.xxzy, r2.xzyx

#line 49
                                      cmp r3.xy, r1.w, r2.yxzw, r2
                                      min r4.x, r2.z, r3.x  // ::fmin<0>
                                      max r4.y, r3.y, r2.z  // ::fmax<0>
                                      add r3.x, -r4.x, r4.y  // ::delta<0>
                                      add r3.y, r4.x, r4.y  // ::maxplusmin<0>

#line 67
                                      add r3.z, r3.y, c3.y
                                      rcp r3.w, r3.y
                                      add r3.y, -r3.y, -c3.z
                                      rcp r3.y, r3.y
                                      mul r3.yw, r3, r3.x  // ::hsl<1,1>
                                      cmp r5.x, r3.z, r3.y, r3.w  // ::hsl<1>

#line 74
                                      add r3.yz, r2.xxyw, -r4.y
                                      rcp r3.w, r3.x

#line 77
                                      mul r1.z, r1.z, r3.w  // ::hsl<0>
                                      mad r1.yw, r1, r3.w, c2.xzzw  // ::hsl<0,0>
                                      cmp r1.y, -r3_abs.z, r1.y, r1.w  // ::hsl<0>
                                      cmp r1.y, -r3_abs.y, r1.z, r1.y  // ::hsl<0>
                                      mul r1.z, r1.y, c5.x  // ::hsl<0>

#line 82
                                      mad r1.w, r1.y, c5.x, c5.y  // ::hsl<0>
                                      cmp r5.yzw, r1.y, r1.z, r1.w  // ::hsl<0,0,0>
                                      cmp r3, -r3_abs.x, c3.x, r5  // ::hsl<1,0,0,0>

#line 48
                                      add r1.y, -r0.y, r0.x
                                      cmp r1.yz, r1.y, r0.xyxw, r0.xxyw
                                      min r4.x, r0.z, r1.y  // ::fmin<0>
                                      max r4.y, r1.z, r0.z  // ::fmax<0>
                                      add r1.y, r4.x, r4.y  // ::maxplusmin<0>

#line 54
                                      mul r4.xyz, r1.y, c2.y  // ::hsl<2,2,2>

#line 92
                                      if_eq r3.x, c3.x

#line 95
                                      else

#line 99
                                        add r1.z, r1.y, c3.y

#line 26
                                        add r5, r3, c4  // GetHue::temp3<0,0,0>

#line 100
                                        mul r1.w, r4.z, r5.x  // ::temp2<0>
                                        mad r3.y, r1.y, c2.y, r3.x
                                        mad r3.x, r3.x, -r4.z, r3.y  // ::temp2<0>
                                        cmp r1.z, r1.z, r3.x, r1.w  // ::temp2<0>
                                        add r1.y, -r1.z, r1.y  // ::temp1<0>

#line 25
                                        add r1.w, -r5.y, -c3.y
                                        cmp r1.w, r1.w, r5.y, r5.w  // GetHue::temp3<0>
                                        cmp r1.w, r5.y, r1.w, r5.z  // GetHue::temp3<0>

#line 31
                                        add r3.x, -r1.y, r1.z
                                        mul r3.y, r3.x, c5.z
                                        mad r3.z, r3.y, r1.w, r1.y  // ::rgbComponent<0>

#line 34
                                        add r5.xyz, r1.w, c8
                                        add r1.w, -r1.w, c5.w
                                        mul r1.w, r1.w, r3.x
                                        mad r1.w, r1.w, c5.z, r1.y  // ::rgbComponent<0>
                                        cmp r1.w, r5.z, r1.y, r1.w  // ::rgbComponent<0>
                                        cmp r1.w, r5.y, r1.w, r1.z  // ::rgbComponent<0>
                                        cmp r4.x, r5.x, r1.w, r3.z  // ::rgbComponent<0>

#line 25
                                        add r1.w, -r3.w, -c3.y
                                        add r5, r3.w, c6  // GetHue::temp3<0,0,0,0>
                                        cmp r1.w, r1.w, r3.w, r5.y  // GetHue::temp3<0>
                                        cmp r1.w, r3.w, r1.w, r5.x  // GetHue::temp3<0>

#line 31
                                        mad r3.z, r3.y, r1.w, r1.y  // ::rgbComponent<0>

#line 34
                                        add r6.xyz, r1.w, c8
                                        add r1.w, -r1.w, c5.w
                                        mul r1.w, r1.w, r3.x
                                        mad r1.w, r1.w, c5.z, r1.y  // ::rgbComponent<0>
                                        cmp r1.w, r6.z, r1.y, r1.w  // ::rgbComponent<0>
                                        cmp r1.w, r6.y, r1.w, r1.z  // ::rgbComponent<0>
                                        cmp r4.y, r6.x, r1.w, r3.z  // ::rgbComponent<0>

#line 25
                                        add r1.w, -r5.z, -c3.y
                                        add r3.z, r3.w, -c4.z  // GetHue::temp3<0>
                                        cmp r1.w, r1.w, r5.z, r3.z  // GetHue::temp3<0>
                                        cmp r1.w, r5.z, r1.w, r5.w  // GetHue::temp3<0>

#line 31
                                        mad r3.y, r3.y, r1.w, r1.y  // ::rgbComponent<0>

#line 34
                                        add r5.xyz, r1.w, c8
                                        add r1.w, -r1.w, c5.w
                                        mul r1.w, r1.w, r3.x
                                        mad r1.w, r1.w, c5.z, r1.y  // ::rgbComponent<0>
                                        cmp r1.y, r5.z, r1.y, r1.w  // ::rgbComponent<0>
                                        cmp r1.y, r5.y, r1.y, r1.z  // ::rgbComponent<0>
                                        cmp r4.z, r5.x, r1.y, r3.y  // ::rgbComponent<0>

#line 109
                                      endif

#line 397
                                      lrp oC0.xyz, r0.w, r4, r2  // ::result<0,1,2>
                                      mov oC0.w, r2.w  // ::result<3>
                                    else
                                      if_eq r1.x, c11.w

#line 403
                                        rcp r1.y, r0.w
                                        mul_sat r0.xyz, r0, r1.y  // Blend::blendColor<0,1,2>

#line 407
                                        mul r1.yzw, r2.xxyz, r0.xxyz  // ::result<0,1,2>

#line 410
                                        lrp oC0.xyz, r0.w, r1.yzww, r2  // ::result<0,1,2>
                                        mov oC0.w, r2.w  // ::result<3>
                                      else
                                        if_eq r1.x, c12.x

#line 416
                                          rcp r1.y, r0.w
                                          mul_sat r0.xyz, r0, r1.y  // Blend::blendColor<0,1,2>

#line 419
                                          add r1.yzw, -r2.xxyz, -c3.y
                                          add_sat r1.yzw, -r0.xxyz, r1
                                          add r1.yzw, -r1, -c3.y  // ::result<0,1,2>

#line 422
                                          lrp oC0.xyz, r0.w, r1.yzww, r2  // ::result<0,1,2>
                                          mov oC0.w, r2.w  // ::result<3>
                                        else
                                          if_eq r1.x, c12.y
                                            add r1.y, -r0.w, -c3.y
                                            add r1.z, -r2.w, -c3.y
                                            mad r1.z, r1.y, -r1.z, -c3.y  // ::result<3>

#line 430
                                            mul r3.xyz, r0.w, r0
                                            rcp r1.w, r1.z
                                            mul r4.xyz, r2.w, r2
                                            mul r4.xyz, r1.y, r4
                                            mul r4.xyz, r1.w, r4
                                            mad oC0.xyz, r3, r1.w, r4  // ::result<0,1,2>
                                            mov oC0.w, r1.z  // ::result<3>
                                          else
                                            if_eq r1.x, c12.z

#line 436
                                              rcp r1.y, r0.w
                                              mul_sat r0.xyz, r0, r1.y  // Blend::blendColor<0,1,2>

#line 454
                                              add r1.yzw, -r2.xxyz, c2.y
                                              add r3.xyz, r2, -c2.y
                                              mad r3.xyz, r3, c3.z, -c3.y
                                              add r4.xyz, -r0, -c3.y
                                              mad r3.xyz, r3, -r4, -c3.y  // ::result<0,1,2>

#line 446
                                              dp2add r3.w, r0.x, r2.x, c3.x  // ::result<0>
                                              cmp r4.x, r1.y, r3.w, r3.x  // ::result<0>

#line 452
                                              dp2add r1.y, r0.y, r2.y, c3.x  // ::result<1>
                                              cmp r4.y, r1.z, r1.y, r3.y  // ::result<1>

#line 458
                                              dp2add r1.y, r0.z, r2.z, c3.x  // ::result<2>
                                              cmp r4.z, r1.w, r1.y, r3.z  // ::result<2>

#line 461
                                              lrp oC0.xyz, r0.w, r4, r2  // ::result<0,1,2>
                                            else
                                              if_eq r1.x, c12.w

#line 467
                                                rcp r1.y, r0.w
                                                mul_sat r0.xyz, r0, r1.y  // Blend::blendColor<0,1,2>

#line 470
                                                min r1.yzw, r0.xxyz, r2.xxyz
                                                max r3.xyz, r2, r0
                                                add r1.yzw, r1, -r3.xxyz
                                                add r1.yzw, r1, -c3.y  // ::result<0,1,2>

#line 473
                                                lrp oC0.xyz, r0.w, r1.yzww, r2  // ::result<0,1,2>
                                              else
                                                if_eq r1.x, c7.x

#line 479
                                                  rcp r1.y, r0.w
                                                  mul_sat r0.xyz, r0, r1.y  // Blend::blendColor<0,1,2>

#line 496
                                                  add r1.yzw, -r0.xxyz, c2.y
                                                  add r3.xyz, r0, -c2.y
                                                  add r3.xyz, r3, r3
                                                  max r4.xyz, r2, r3  // ::result<0,1,2>
                                                  add r3.xyz, r0, r0
                                                  min r5.xyz, r3, r2  // ::result<0,1,2>
                                                  cmp r1.yzw, r1, r5.xxyz, r4.xxyz  // ::result<0,1,2>

#line 503
                                                  lrp oC0.xyz, r0.w, r1.yzww, r2  // ::result<0,1,2>
                                                else
                                                  add r1.x, r1.x, c7.y

#line 509
                                                  rcp r1.y, r0.w
                                                  mul_sat r1.yzw, r0.xxyz, r1.y  // Blend::blendColor<0,1,2>

#line 514
                                                  add r3.xyz, r1.yzww, c3.y
                                                  mul r4.xyz, r2, r2
                                                  add r5.xyz, -r1.yzww, -c3.y
                                                  rcp r3.w, r5.x
                                                  mul r3.w, r3.w, r4.x
                                                  min r4.x, r3.w, -c3.y
                                                  cmp r6.x, r3.x, r1.y, r4.x  // ::result<0>
                                                  rcp r3.x, r5.y
                                                  mul r3.x, r3.x, r4.y
                                                  min r4.x, r3.x, -c3.y
                                                  cmp r6.y, r3.y, r1.z, r4.x  // ::result<1>
                                                  rcp r3.x, r5.z
                                                  mul r3.x, r3.x, r4.z
                                                  min r4.x, r3.x, -c3.y
                                                  cmp r6.z, r3.z, r1.w, r4.x  // ::result<2>

#line 517
                                                  lrp oC0.xyz, r0.w, r6, r2  // ::result<0,1,2>
                                                  cmp r0.xyz, -r1_abs.x, r1.yzww, r0  // Blend::blendColor<0,1,2>
                                                endif
                                              endif
                                            endif
                                            mov oC0.w, r2.w  // ::result<3>
                                          endif
                                        endif
                                      endif
                                    endif
                                  endif
                                endif
                              endif
                            endif
                          endif
                        endif
                      endif
                    endif
                  endif
                endif
              endif
            endif
          endif
        endif
      endif

#line 523
      mov r1.x, c0.x  // ::BlendMode<0>
      if_eq r1.x, c7.z

#line 526
        rcp r1.y, r0.w
        mul_sat r1.yzw, r0.xxyz, r1.y  // Blend::blendColor<0,1,2>

#line 48
        add r2.w, -r2.y, r2.x
        cmp r3.xy, r2.w, r2.yxzw, r2
        min r4.x, r2.z, r3.x  // ::fmin<0>
        max r4.y, r3.y, r2.z  // ::fmax<0>
        add r3.x, r4.x, r4.y  // ::maxplusmin<0>

#line 54
        mul r3.yzw, r3.x, c2.y  // ::hsl<2,2,2>

#line 48
        add r4.z, -r1.z, r1.y
        cmp r1.yz, r4.z, r1.xzyw, r1
        min r4.z, r1.w, r1.y  // ::fmin<0>
        max r4.w, r1.z, r1.w  // ::fmax<0>
        add r1.y, -r4.z, r4.w  // ::delta<0>
        add r1.z, r4.z, r4.w  // ::maxplusmin<0>

#line 67
        add r1.w, r1.z, c3.y
        rcp r4.z, r1.z
        mul r4.z, r1.y, r4.z  // ::hsl<1>
        add r1.z, -r1.z, -c3.z
        rcp r1.z, r1.z
        mul r1.z, r1.z, r1.y  // ::hsl<1>
        cmp r1.z, r1.w, r1.z, r4.z  // ::hsl<1>

#line 83
        cmp r1.y, -r1_abs.y, c3.x, r1.z  // ::hsl<1>

#line 92
        if_eq r1.y, c3.x

#line 95
        else

#line 50
          add r1.z, -r4.x, r4.y  // ::delta<0>

#line 74
          add r4.xy, r2, -r4.y
          add r1.w, -r2.z, r2.y
          rcp r4.z, r1.z
          mul r1.w, r1.w, r4.z  // ::hsl<0>
          add r4.w, -r2.x, r2.z
          mad r4.w, r4.w, r4.z, -c3.z  // ::hsl<0>
          mad r2.w, r2.w, r4.z, c2.w  // ::hsl<0>
          cmp r2.w, -r4_abs.y, r4.w, r2.w  // ::hsl<0>
          cmp r1.w, -r4_abs.x, r1.w, r2.w  // ::hsl<0>
          mul r2.w, r1.w, c5.x  // ::hsl<0>

#line 82
          mad r4.x, r1.w, c5.x, c5.y  // ::hsl<0>
          cmp r1.w, r1.w, r2.w, r4.x  // ::hsl<0>
          cmp r1.z, -r1_abs.z, c3.x, r1.w  // ::hsl<0>

#line 99
          add r1.w, r3.x, c3.y
          add r2.w, r1.y, -c3.y
          mul r2.w, r2.w, r3.w  // ::temp2<0>
          mad r4.x, r3.x, c2.y, r1.y
          mad r1.y, r1.y, -r3.w, r4.x  // ::temp2<0>
          cmp r1.y, r1.w, r1.y, r2.w  // ::temp2<0>
          add r1.w, -r1.y, r3.x  // ::temp1<0>

#line 24
          add r4, r1.z, c4.yzwx  // GetHue::temp3<0,0,0,0>
          add r2.w, -r4.x, -c3.y
          cmp r2.w, r2.w, r4.x, r4.z  // GetHue::temp3<0>
          cmp r2.w, r4.x, r2.w, r4.y  // GetHue::temp3<0>

#line 31
          add r3.x, -r1.w, r1.y
          mul r4.x, r3.x, c5.z
          mad r4.y, r4.x, r2.w, r1.w  // ::rgbComponent<0>

#line 34
          add r5.xyz, r2.w, c8
          add r2.w, -r2.w, c5.w
          mul r2.w, r2.w, r3.x
          mad r2.w, r2.w, c5.z, r1.w  // ::rgbComponent<0>
          cmp r2.w, r5.z, r1.w, r2.w  // ::rgbComponent<0>
          cmp r2.w, r5.y, r2.w, r1.y  // ::rgbComponent<0>
          cmp r3.y, r5.x, r2.w, r4.y  // ::rgbComponent<0>

#line 25
          add r2.w, -r1.z, -c3.y
          add r5, r1.z, -c4.xywz  // GetHue::temp3<0,0,0,0>
          cmp r2.w, r2.w, r1.z, r5.x  // GetHue::temp3<0>
          cmp r1.z, r1.z, r2.w, r4.w  // GetHue::temp3<0>

#line 31
          mad r2.w, r4.x, r1.z, r1.w  // ::rgbComponent<0>

#line 34
          add r4.yzw, r1.z, c8.xxyz
          add r1.z, -r1.z, c5.w
          mul r1.z, r1.z, r3.x
          mad r1.z, r1.z, c5.z, r1.w  // ::rgbComponent<0>
          cmp r1.z, r4.w, r1.w, r1.z  // ::rgbComponent<0>
          cmp r1.z, r4.z, r1.z, r1.y  // ::rgbComponent<0>
          cmp r3.z, r4.y, r1.z, r2.w  // ::rgbComponent<0>

#line 25
          add r1.z, -r5.y, -c3.y
          cmp r1.z, r1.z, r5.y, r5.w  // GetHue::temp3<0>
          cmp r1.z, r5.y, r1.z, r5.z  // GetHue::temp3<0>

#line 31
          mad r2.w, r4.x, r1.z, r1.w  // ::rgbComponent<0>

#line 34
          add r4.xyz, r1.z, c8
          add r1.z, -r1.z, c5.w
          mul r1.z, r1.z, r3.x
          mad r1.z, r1.z, c5.z, r1.w  // ::rgbComponent<0>
          cmp r1.z, r4.z, r1.w, r1.z  // ::rgbComponent<0>
          cmp r1.y, r4.y, r1.z, r1.y  // ::rgbComponent<0>
          cmp r3.w, r4.x, r1.y, r2.w  // ::rgbComponent<0>

#line 109
        endif

#line 533
        lrp oC0.xyz, r0.w, r3.yzww, r2  // ::result<0,1,2>
      else
        if_eq r1.x, c7.w

#line 539
          rcp r1.y, r0.w
          mul_sat r1.yzw, r0.xxyz, r1.y  // Blend::blendColor<0,1,2>

#line 543
          add r3.xyz, -r2, -c3.y
          add r1.yzw, -r1, -c3.y
          mad r1.yzw, r3.xxyz, -r1, -c3.y  // ::result<0,1,2>

#line 546
          lrp oC0.xyz, r0.w, r1.yzww, r2  // ::result<0,1,2>
        else
          if_eq r1.x, c13.x

#line 552
            rcp r1.y, r0.w
            mul_sat r1.yzw, r0.xxyz, r1.y  // Blend::blendColor<0,1,2>

#line 557
            add r3.xyz, r1.yzww, -c2.y
            add r4.xyz, r2, r2
            mul r5.xyz, r2, r2
            mad r6.xyz, r1.yzww, c3.z, -c3.y
            mul r5.xyz, r5, r6
            mad r5.xyz, r4, r1.yzww, r5
            rsq r2.w, r2.x
            rcp r2.w, r2.w
            mad r6.xyz, r1.yzww, c10.x, c10.y
            add r1.yzw, -r1, -c3.y
            mul r1.yzw, r1, r4.xxyz
            mad r1.y, r2.w, r6.x, r1.y
            cmp r4.x, r3.x, r1.y, r5.x  // ::result<0>
            rsq r1.y, r2.y
            rcp r1.y, r1.y
            mad r1.y, r1.y, r6.y, r1.z
            cmp r4.y, r3.y, r1.y, r5.y  // ::result<1>
            rsq r1.y, r2.z
            rcp r1.y, r1.y
            mad r1.y, r1.y, r6.z, r1.w
            cmp r4.z, r3.z, r1.y, r5.z  // ::result<2>

#line 560
            lrp oC0.xyz, r0.w, r4, r2  // ::result<0,1,2>
          else
            if_eq r1.x, c13.y

#line 566
              rcp r1.x, r0.w
              mul_sat r0.xyz, r0, r1.x  // Blend::blendColor<0,1,2>

#line 571
              add r1.xyz, r0, -c2.y
              add r0.xyz, r0, r0
              add r3.xyz, -r2, -c3.y
              rcp r1.w, r0.x
              mad r1.w, r3.x, -r1.w, -c3.y
              max r2.w, r1.w, c3.x
              cmp r0.x, -r0.x, r0.x, r2.w
              add r4.xyz, r1, r1
              mad r5.xyz, r1, c10.x, c10.y
              mad r6.xyz, r1, c3.z, -c3.y
              rcp r1.w, r6.x
              mul r1.w, r1.w, r2.x
              min r2.w, r1.w, -c3.y
              cmp r1.w, r5.x, r4.x, r2.w
              cmp r7.x, r1.x, r1.w, r0.x  // ::result<0>
              rcp r0.x, r0.y
              mad r0.x, r3.y, -r0.x, -c3.y
              max r1.x, r0.x, c3.x
              cmp r0.x, -r0.y, r0.y, r1.x
              rcp r0.y, r6.y
              mul r0.y, r0.y, r2.y
              min r1.x, r0.y, -c3.y
              cmp r0.y, r5.y, r4.y, r1.x
              cmp r7.y, r1.y, r0.y, r0.x  // ::result<1>
              rcp r0.x, r0.z
              mad r0.x, r3.z, -r0.x, -c3.y
              max r1.x, r0.x, c3.x
              cmp r0.x, -r0.z, r0.z, r1.x
              rcp r0.y, r6.z
              mul r0.y, r0.y, r2.z
              min r1.x, r0.y, -c3.y
              cmp r0.y, r5.z, r4.z, r1.x
              cmp r7.z, r1.z, r0.y, r0.x  // ::result<2>

#line 574
              lrp oC0.xyz, r0.w, r7, r2  // ::result<0,1,2>
            endif
          endif
        endif
      endif

#line 616
    endif

// approximately 793 instruction slots used (3 texture, 790 arithmetic)
