//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float Angle;
//   float BlendMode;
//   float4 Color1;
//   float4 Color10;
//   float4 Color11;
//   float4 Color12;
//   float4 Color13;
//   float4 Color14;
//   float4 Color15;
//   float4 Color16;
//   float4 Color2;
//   float4 Color3;
//   float4 Color4;
//   float4 Color5;
//   float4 Color6;
//   float4 Color7;
//   float4 Color8;
//   float4 Color9;
//   float Length;
//   float Offset1;
//   float Offset10;
//   float Offset11;
//   float Offset12;
//   float Offset13;
//   float Offset14;
//   float Offset15;
//   float Offset16;
//   float Offset2;
//   float Offset3;
//   float Offset4;
//   float Offset5;
//   float Offset6;
//   float Offset7;
//   float Offset8;
//   float Offset9;
//   float Opacity;
//   float Scale;
//   float TypeIndex;
//   sampler2D input;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   BlendMode    c0       1
//   Opacity      c1       1
//   Angle        c2       1
//   Scale        c7       1
//   TypeIndex    c8       1
//   Color1       c9       1
//   Offset1      c10      1
//   Color2       c11      1
//   Offset2      c12      1
//   Color3       c13      1
//   Offset3      c14      1
//   Color4       c15      1
//   Offset4      c16      1
//   Color5       c17      1
//   Offset5      c18      1
//   Color6       c19      1
//   Offset6      c20      1
//   Color7       c21      1
//   Offset7      c22      1
//   Color8       c23      1
//   Offset8      c24      1
//   Color9       c25      1
//   Offset9      c26      1
//   Color10      c27      1
//   Offset10     c28      1
//   Color11      c29      1
//   Offset11     c30      1
//   Color12      c31      1
//   Offset12     c32      1
//   Color13      c33      1
//   Offset13     c34      1
//   Color14      c35      1
//   Offset14     c36      1
//   Color15      c37      1
//   Offset15     c38      1
//   Color16      c39      1
//   Offset16     c40      1
//   Length       c41      1
//   input        s0       1
//

    ps_3_0
    def c3, 0, -0.5, 0.0208350997, -0.0851330012
    def c4, 0.180141002, -0.330299497, 0.999866009, 0.0174532942
    def c5, 0, 1, -2, 1.57079637
    def c6, -0, -3.14159274, 3.14159274, 6.28318548
    def c42, 0.159154937, 0.00100000005, 3, 0.166666672
    def c43, 2, 4, 0.166666672, 1
    def c44, 1, 0.333333343, 1.33333337, -0.666666627
    def c45, 6, -0.166666672, -0.5, -0.666666687
    def c46, 26, 1.41421354, 0.5, 1
    def c47, 18, -19, 20, 21
    def c48, 1, -1, -0.333333343, 0.666666627
    def c49, 5, 7, 8, 9
    def c50, 10, 11, 12, 13
    def c51, 14, 15, 16, 17
    def c52, 22, 23, 24, 25
    dcl_texcoord v0.xy  // uv<0,1>
    dcl_2d s0

#line 879 "C:\Users\james\GitHub\Imagin.NET\Apps.Paint\Effects\Image\Blend\GradientOverlay.fx"
    texld r0, v0, s0  // ::color1<0,1,2,3>
    if_lt -r0.w, c3.x

#line 884
      mov r1.x, c3.x
      if_eq c8.x, r1.x

#line 816
        add r1.yz, c3.y, v0.xxyw
        add r2.xy, -r1_abs.yzzw, r1_abs.zyzw
        cmp r2.xz, r2.x, r1_abs.yyzw, r1_abs.zyyw
        rcp r1.w, r2.z
        mul r1.w, r1.w, r2.x
        mul r2.x, r1.w, r1.w
        mad r2.z, r2.x, c3.z, c3.w
        mad r2.z, r2.x, r2.z, c4.x
        mad r2.z, r2.x, r2.z, c4.y
        mad r2.x, r2.x, r2.z, c4.z
        mul r1.w, r1.w, r2.x
        cmp r2.x, r2.y, c5.x, c5.y
        mad r2.y, r1.w, c5.z, c5.w
        mad r1.w, r2.y, r2.x, r1.w
        cmp r2.x, r1.y, c6.x, c6.y
        add r1.w, r1.w, r2.x
        add r2.x, -r1.y, r1.z
        cmp r1.yz, r2.x, r1, r1.xzyw
        cmp r1.z, r1.z, c5.y, c5.x
        cmp r1.y, r1.y, c3.x, r1.z
        add r1.z, r1.w, r1.w
        mad r1.y, r1.y, -r1.z, r1.w
        mov r1.w, c4.w
        mad r1.y, c2.x, r1.w, r1.y  // ::t<0>

#line 819
        add r1.yz, r1.y, c6.xzyw  // ::t<0,0>
        add r1.w, -r1.y, c6.w
        cmp r1.y, r1.w, r1.y, r1.z  // ::t<0>
        mul r1.y, r1.y, c42.x  // ::t<0>

#line 683
        mov r2.yz, c5
        add r1.z, r2.y, -c7.x

#line 696
        if_eq c41.x, r1.x

#line 703
          mov r3, c3.x  // ::color1<0,1,2,3>
          mov r4.xyz, c3.x  // ::color2<0,1,2>
          mov r2.x, c3.x  // ::offset1<0>
          mov r2.w, c5.y  // ::offset2<0>
        else
          if_eq c41.x, r2.y

#line 711
            mov r3, c9  // ::color1<0,1,2,3>
            mov r4.xyz, c9  // ::color2<0,1,2>
            mov r2.x, c3.x  // ::offset1<0>
            mov r2.w, c5.y  // ::offset2<0>
          else
            if_eq c41.x, -r2.z

#line 719
              mov r3, c9  // ::color1<0,1,2,3>
              mov r4.xyz, c11  // ::color2<0,1,2>
              mov r2.x, c3.x  // ::offset1<0>
              mov r2.w, c5.y  // ::offset2<0>
            else

#line 722
              mad r1.w, r1.y, r1.z, -c10.x
              mad r4.w, r1.y, r1.z, -c12.x
              cmp r5.x, r4.w, c5.x, c5.y
              cmp r1.w, r1.w, r5.x, c3.x
              if_ne r1.w, -r1.w

#line 726
                mov r3, c9  // ::color1<0,1,2,3>
                mov r4.xyz, c11  // ::color2<0,1,2>
                mov r2.x, c10.x  // ::offset1<0>
                mov r2.w, c12.x  // ::offset2<0>
              else
                mad r1.w, r1.y, r1.z, -c14.x
                cmp r5.x, r1.w, c5.x, c5.y
                cmp r4.w, r4.w, r5.x, c3.x
                if_ne r4.w, -r4.w

#line 731
                  mov r3, c11  // ::color1<0,1,2,3>
                  mov r4.xyz, c13  // ::color2<0,1,2>
                  mov r2.x, c12.x  // ::offset1<0>
                  mov r2.w, c14.x  // ::offset2<0>
                else
                  mad r4.w, r1.y, r1.z, -c16.x
                  cmp r5.x, r4.w, c5.x, c5.y
                  cmp r1.w, r1.w, r5.x, c3.x
                  if_ne r1.w, -r1.w

#line 736
                    mov r3, c13  // ::color1<0,1,2,3>
                    mov r4.xyz, c15  // ::color2<0,1,2>
                    mov r2.x, c14.x  // ::offset1<0>
                    mov r2.w, c16.x  // ::offset2<0>
                  else
                    mad r1.w, r1.y, r1.z, -c18.x
                    cmp r5.x, r1.w, c5.x, c5.y
                    cmp r4.w, r4.w, r5.x, c3.x
                    if_ne r4.w, -r4.w

#line 741
                      mov r3, c15  // ::color1<0,1,2,3>
                      mov r4.xyz, c17  // ::color2<0,1,2>
                      mov r2.x, c16.x  // ::offset1<0>
                      mov r2.w, c18.x  // ::offset2<0>
                    else
                      mad r4.w, r1.y, r1.z, -c20.x
                      cmp r5.x, r4.w, c5.x, c5.y
                      cmp r1.w, r1.w, r5.x, c3.x
                      if_ne r1.w, -r1.w

#line 746
                        mov r3, c17  // ::color1<0,1,2,3>
                        mov r4.xyz, c19  // ::color2<0,1,2>
                        mov r2.x, c18.x  // ::offset1<0>
                        mov r2.w, c20.x  // ::offset2<0>
                      else
                        mad r1.w, r1.y, r1.z, -c22.x
                        cmp r5.x, r1.w, c5.x, c5.y
                        cmp r4.w, r4.w, r5.x, c3.x
                        if_ne r4.w, -r4.w

#line 751
                          mov r3, c19  // ::color1<0,1,2,3>
                          mov r4.xyz, c21  // ::color2<0,1,2>
                          mov r2.x, c20.x  // ::offset1<0>
                          mov r2.w, c22.x  // ::offset2<0>
                        else
                          mad r4.w, r1.y, r1.z, -c24.x
                          cmp r5.x, r4.w, c5.x, c5.y
                          cmp r1.w, r1.w, r5.x, c3.x
                          if_ne r1.w, -r1.w

#line 756
                            mov r3, c21  // ::color1<0,1,2,3>
                            mov r4.xyz, c23  // ::color2<0,1,2>
                            mov r2.x, c22.x  // ::offset1<0>
                            mov r2.w, c24.x  // ::offset2<0>
                          else
                            mad r1.w, r1.y, r1.z, -c26.x

#line 762
                            mad r5.x, r1.y, r1.z, -c28.x

#line 767
                            mad r5.y, r1.y, r1.z, -c30.x

#line 772
                            mad r5.z, r1.y, r1.z, -c32.x

#line 777
                            mad r5.w, r1.y, r1.z, -c34.x

#line 782
                            mad r6.x, r1.y, r1.z, -c36.x

#line 787
                            mad r6.y, r1.y, r1.z, -c38.x

#line 796
                            cmp r6.y, r6.y, -c5.x, -c5.y
                            cmp r6.y, r6.x, r6.y, c3.x
                            mov r7, c37  // ::Color15<0,1,2,3>
                            cmp r8, r6.y, r7, c35  // ::color1<0,1,2,3>
                            cmp r7.xyz, r6.y, c39, r7  // ::color2<0,1,2>
                            mov r9.y, c40.x
                            mov r9.z, c36.x
                            mov r9.xw, c38.x
                            cmp r6.yz, r6.y, r9.xxyw, r9.xzww  // ::offset1<0>, ::offset2<0>
                            cmp r6.x, r6.x, -c5.x, -c5.y
                            cmp r6.x, r5.w, r6.x, c3.x
                            cmp r8, r6.x, r8, c33  // ::color1<0,1,2,3>
                            cmp r7.xyz, r6.x, r7, c35  // ::color2<0,1,2>
                            mov r9.xw, c34.x
                            mov r9.y, c36.x
                            cmp r6.xy, r6.x, r6.yzzw, r9  // ::offset1<0>, ::offset2<0>
                            cmp r5.w, r5.w, -c5.x, -c5.y
                            cmp r5.w, r5.z, r5.w, c3.x
                            cmp r8, r5.w, r8, c31  // ::color1<0,1,2,3>
                            cmp r7.xyz, r5.w, r7, c33  // ::color2<0,1,2>
                            mov r9.yz, c32.x
                            cmp r6.xy, r5.w, r6, r9.zwzw  // ::offset1<0>, ::offset2<0>
                            cmp r5.z, r5.z, -c5.x, -c5.y
                            cmp r5.z, r5.y, r5.z, c3.x
                            cmp r8, r5.z, r8, c29  // ::color1<0,1,2,3>
                            cmp r7.xyz, r5.z, r7, c31  // ::color2<0,1,2>
                            mov r9.xw, c30.x
                            cmp r5.zw, r5.z, r6.xyxy, r9.xyxy  // ::offset1<0>, ::offset2<0>
                            cmp r5.y, r5.y, -c5.x, -c5.y
                            cmp r5.y, r5.x, r5.y, c3.x
                            cmp r6, r5.y, r8, c27  // ::color1<0,1,2,3>
                            cmp r7.xyz, r5.y, r7, c29  // ::color2<0,1,2>
                            mov r9.z, c28.x
                            cmp r5.yz, r5.y, r5.xzww, r9.xzww  // ::offset1<0>, ::offset2<0>
                            cmp r5.x, r5.x, -c5.x, -c5.y
                            cmp r5.x, r1.w, r5.x, c3.x
                            cmp r6, r5.x, r6, c25  // ::color1<0,1,2,3>
                            cmp r7.xyz, r5.x, r7, c27  // ::color2<0,1,2>
                            mov r8.xw, c26.x
                            mov r8.y, c28.x
                            cmp r5.xy, r5.x, r5.yzzw, r8  // ::offset1<0>, ::offset2<0>
                            cmp r1.w, r1.w, -c5.x, -c5.y
                            cmp r1.w, r4.w, r1.w, c3.x
                            cmp r3, r1.w, r6, c23  // ::color1<0,1,2,3>
                            cmp r4.xyz, r1.w, r7, c25  // ::color2<0,1,2>
                            mov r8.z, c24.x
                            cmp r2.xw, r1.w, r5.xyzy, r8.zyzw  // ::offset1<0>, ::offset2<0>
                          endif
                        endif
                      endif
                    endif
                  endif
                endif
              endif
            endif
          endif
        endif
        add r1.w, -r2.x, r2.w  // ::q<0>
        mad r1.y, r1.y, r1.z, -r2.x
        rcp r1.z, r1.w
        mul r1.y, r1.z, r1.y
        cmp r1.y, -r1_abs.w, c3.x, r1.y  // ::p<0>

#line 218
        cmp r5.xyz, -r4_abs, c42.y, r4  // Blend::blendColor<0,1,2>

#line 226
        if_eq c0.x, r1.x

#line 229
          rcp r1.z, r1.y
          mul_sat r5.xyz, r1.z, r5  // Blend::blendColor<0,1,2>

#line 232
          add r4.xyz, r3, r5
          mul r4.xyz, r1.y, r4

#line 235
          add r1.z, -r1.y, c5.y
          mul r4.xyz, r4, -c3.y
          mad r4.xyz, r1.z, r3, r4  // ::result<0,1,2>
        else
          if_eq c0.x, r2.y

#line 241
            rcp r1.z, r1.y
            mul_sat r5.xyz, r1.z, r5  // Blend::blendColor<0,1,2>

#line 245
            add r2.xyw, -r3.xyzz, c5.y
            rcp r6.x, r5.x
            rcp r6.y, r5.y
            rcp r6.z, r5.z
            mad_sat r2.xyw, r2, -r6.xyzz, c5.y  // ::result<0,1,2>

#line 248
            lrp r4.xyz, r1.y, r2.xyww, r3  // ::result<0,1,2>
          else
            if_eq c0.x, -r2.z

#line 254
              rcp r1.z, r1.y
              mul_sat r5.xyz, r1.z, r5  // Blend::blendColor<0,1,2>

#line 260
              add r2.xyz, r5, -c5.y
              add r6.xyz, -r5, c5.y
              rcp r1.z, r6.x
              mul r1.z, r1.z, r3.x
              min r2.w, r1.z, c5.y
              cmp r7.x, r2.x, r5.x, r2.w  // ::result<0>
              rcp r1.z, r6.y
              mul r1.z, r1.z, r3.y
              min r2.x, r1.z, c5.y
              cmp r7.y, r2.y, r5.y, r2.x  // ::result<1>
              rcp r1.z, r6.z
              mul r1.z, r1.z, r3.z
              min r2.x, r1.z, c5.y
              cmp r7.z, r2.z, r5.z, r2.x  // ::result<2>

#line 263
              lrp r4.xyz, r1.y, r7, r3  // ::result<0,1,2>
            else
              mov r2.x, c0.x  // ::BlendMode<0>
              if_eq r2.x, c42.z

#line 269
                rcp r1.z, r1.y
                mul_sat r5.xyz, r1.z, r5  // Blend::blendColor<0,1,2>

#line 175
                add r2.yzw, -r5.xxzy, r5.xzyx

#line 149
                cmp r1.zw, r2.w, r5.xyyx, r5.xyxy
                min r4.w, r5.z, r1.z  // ::fmin<0>
                max r6.x, r1.w, r5.z  // ::fmax<0>
                add r1.z, -r4.w, r6.x  // ::delta<0>
                add r1.w, r4.w, r6.x  // ::maxplusmin<0>

#line 167
                add r4.w, r1.w, -c5.y
                rcp r5.w, r1.w
                mul r5.w, r1.z, r5.w  // ::hsl<1>
                add r1.w, -r1.w, -c5.z
                rcp r1.w, r1.w
                mul r1.w, r1.w, r1.z  // ::hsl<1>
                cmp r7.x, r4.w, r1.w, r5.w  // ::hsl<1>

#line 174
                add r6.xy, r5, -r6.x
                rcp r1.w, r1.z

#line 177
                mul r2.z, r1.w, r2.z  // ::hsl<0>
                mad r2.yw, r2, r1.w, c43.xxzy  // ::hsl<0,0>
                cmp r1.w, -r6_abs.y, r2.y, r2.w  // ::hsl<0>
                cmp r1.w, -r6_abs.x, r2.z, r1.w  // ::hsl<0>
                mul r2.y, r1.w, c42.w  // ::hsl<0>

#line 182
                mad r2.z, r1.w, c43.z, c43.w  // ::hsl<0>
                cmp r7.yzw, r1.w, r2.y, r2.z  // ::hsl<0,0,0>
                cmp r6, -r1_abs.z, c3.x, r7  // ::hsl<1,0,0,0>

#line 148
                add r1.z, -r3.y, r3.x
                cmp r1.zw, r1.z, r3.xyyx, r3.xyxy
                min r2.y, r3.z, r1.z  // ::fmin<0>
                max r2.z, r1.w, r3.z  // ::fmax<0>
                add r1.z, r2.y, r2.z  // ::maxplusmin<0>

#line 154
                mul r2.yzw, r1.z, -c3.y  // ::hsl<2,2,2>

#line 192
                if_eq r6.x, c3.x

#line 195
                else

#line 199
                  add r1.w, r1.z, -c5.y

#line 126
                  add r7, r6, c44  // GetHue::temp3<0,0,0>

#line 200
                  mul r4.w, r2.w, r7.x  // ::temp2<0>
                  mad r5.w, r1.z, -c3.y, r6.x
                  mad r5.w, r6.x, -r2.w, r5.w  // ::temp2<0>
                  cmp r1.w, r1.w, r5.w, r4.w  // ::temp2<0>
                  add r1.z, -r1.w, r1.z  // ::temp1<0>

#line 125
                  add r4.w, -r7.y, c5.y
                  cmp r4.w, r4.w, r7.y, r7.w  // GetHue::temp3<0>
                  cmp r4.w, r7.y, r4.w, r7.z  // GetHue::temp3<0>

#line 131
                  add r5.w, -r1.z, r1.w
                  mul r6.x, r5.w, c45.x
                  mad r6.y, r6.x, r4.w, r1.z  // ::rgbComponent<0>

#line 134
                  add r7.xyz, r4.w, c45.yzww
                  add r4.w, -r4.w, -c45.w
                  mul r4.w, r4.w, r5.w
                  mad r4.w, r4.w, c45.x, r1.z  // ::rgbComponent<0>
                  cmp r4.w, r7.z, r1.z, r4.w  // ::rgbComponent<0>
                  cmp r4.w, r7.y, r4.w, r1.w  // ::rgbComponent<0>
                  cmp r2.y, r7.x, r4.w, r6.y  // ::rgbComponent<0>

#line 125
                  add r4.w, -r6.w, c5.y
                  add r7, r6.w, c48  // GetHue::temp3<0,0,0,0>
                  cmp r4.w, r4.w, r6.w, r7.y  // GetHue::temp3<0>
                  cmp r4.w, r6.w, r4.w, r7.x  // GetHue::temp3<0>

#line 131
                  mad r6.y, r6.x, r4.w, r1.z  // ::rgbComponent<0>

#line 134
                  add r8.xyz, r4.w, c45.yzww
                  add r4.w, -r4.w, -c45.w
                  mul r4.w, r4.w, r5.w
                  mad r4.w, r4.w, c45.x, r1.z  // ::rgbComponent<0>
                  cmp r4.w, r8.z, r1.z, r4.w  // ::rgbComponent<0>
                  cmp r4.w, r8.y, r4.w, r1.w  // ::rgbComponent<0>
                  cmp r2.z, r8.x, r4.w, r6.y  // ::rgbComponent<0>

#line 125
                  add r4.w, -r7.z, c5.y
                  add r6.y, r6.w, -c44.z  // GetHue::temp3<0>
                  cmp r4.w, r4.w, r7.z, r6.y  // GetHue::temp3<0>
                  cmp r4.w, r7.z, r4.w, r7.w  // GetHue::temp3<0>

#line 131
                  mad r6.x, r6.x, r4.w, r1.z  // ::rgbComponent<0>

#line 134
                  add r6.yzw, r4.w, c45
                  add r4.w, -r4.w, -c45.w
                  mul r4.w, r4.w, r5.w
                  mad r4.w, r4.w, c45.x, r1.z  // ::rgbComponent<0>
                  cmp r1.z, r6.w, r1.z, r4.w  // ::rgbComponent<0>
                  cmp r1.z, r6.z, r1.z, r1.w  // ::rgbComponent<0>
                  cmp r2.w, r6.y, r1.z, r6.x  // ::rgbComponent<0>

#line 209
                endif

#line 276
                lrp r4.xyz, r1.y, r2.yzww, r3  // ::result<0,1,2>
              else
                if_eq r2.x, c43.y

#line 282
                  rcp r1.z, r1.y
                  mul_sat r5.xyz, r1.z, r5  // Blend::blendColor<0,1,2>

#line 300
                  min r2.yzw, r3.xxyz, r5.xxyz  // ::result<0,1,2>

#line 303
                  lrp r4.xyz, r1.y, r2.yzww, r3  // ::result<0,1,2>
                else
                  if_eq r2.x, c49.x

#line 309
                    rcp r1.z, r1.y
                    mul_sat r5.xyz, r1.z, r5  // Blend::blendColor<0,1,2>

#line 313
                    add r2.yzw, r3.xxyz, -r5.xxyz

#line 316
                    lrp r4.xyz, r1.y, r2_abs.yzww, r3  // ::result<0,1,2>
                  else
                    if_eq r2.x, c45.x

#line 322
                      rcp r1.z, r1.y
                      mul_sat r5.xyz, r1.z, r5  // Blend::blendColor<0,1,2>

#line 326
                      add r2.yzw, r3.xxyz, c3.y
                      add r2.yzw, r2, r2
                      add r6.xyz, r5, c3.y
                      mad r2.yzw, r2, -r6.xxyz, -c3.y  // ::result<0,1,2>

#line 329
                      lrp r4.xyz, r1.y, r2.yzww, r3  // ::result<0,1,2>
                    else
                      if_eq r2.x, c49.y

#line 335
                        rcp r1.z, r1.y
                        mul_sat r5.xyz, r1.z, r5  // Blend::blendColor<0,1,2>

#line 340
                        add r2.yzw, r3.xxyz, -c5.y
                        mul r6.xyz, r5, r5
                        add r7.xyz, -r3, c5.y
                        rcp r1.z, r7.x
                        mul r1.z, r1.z, r6.x
                        min r4.w, r1.z, c5.y
                        cmp r8.x, -r2_abs.y, r3.x, r4.w  // ::result<0>
                        rcp r1.z, r7.y
                        mul r1.z, r1.z, r6.y
                        min r2.y, r1.z, c5.y
                        cmp r8.y, -r2_abs.z, r3.y, r2.y  // ::result<1>
                        rcp r1.z, r7.z
                        mul r1.z, r1.z, r6.z
                        min r2.y, r1.z, c5.y
                        cmp r8.z, -r2_abs.w, r3.z, r2.y  // ::result<2>

#line 343
                        lrp r4.xyz, r1.y, r8, r3  // ::result<0,1,2>
                      else
                        if_eq r2.x, c49.z

#line 349
                          rcp r1.z, r1.y
                          mul_sat r5.xyz, r1.z, r5  // Blend::blendColor<0,1,2>

#line 366
                          add r2.yzw, -r5.xxyz, -c3.y
                          add r6.xyz, -r3, c5.y
                          add r7.xyz, r5, c3.y
                          mad r7.xyz, r7, -c5_abs.z, c5_abs.y
                          mad r6.xyz, r6, -r7, c5.y  // ::result<0,1,2>

#line 358
                          dp2add r1.z, r3.x, r5.x, c3.x  // ::result<0>
                          cmp r7.x, r2.y, r1.z, r6.x  // ::result<0>

#line 364
                          dp2add r1.z, r3.y, r5.y, c3.x  // ::result<1>
                          cmp r7.y, r2.z, r1.z, r6.y  // ::result<1>

#line 370
                          dp2add r1.z, r3.z, r5.z, c3.x  // ::result<2>
                          cmp r7.z, r2.w, r1.z, r6.z  // ::result<2>

#line 373
                          lrp r4.xyz, r1.y, r7, r3  // ::result<0,1,2>
                        else
                          if_eq r2.x, c49.w

#line 379
                            rcp r1.z, r1.y
                            mul_sat r5.xyz, r1.z, r5  // Blend::blendColor<0,1,2>

#line 384
                            add r2.yzw, r5.xxyz, c3.y
                            add r6.xyz, r5, r5
                            add r7.xyz, -r3, c5.y
                            rcp r1.z, r6.x
                            mad r1.z, r7.x, -r1.z, c5.y
                            max r4.w, r1.z, c3.x
                            cmp r1.z, -r6.x, r6.x, r4.w
                            add r8.xyz, r2.yzww, r2.yzww
                            mad r9.xyz, r2.yzww, -c5.z, -c5.y
                            mad r10.xyz, r2.yzww, -c5_abs.z, c5_abs.y
                            rcp r1.w, r10.x
                            mul r1.w, r1.w, r3.x
                            min r4.w, r1.w, c5.y
                            cmp r1.w, r9.x, r8.x, r4.w
                            cmp r1.z, r2.y, r1.w, r1.z
                            add r1.z, r1.z, c3.y
                            cmp r11.x, r1.z, c5.y, c5.x  // ::result<0>
                            rcp r1.z, r6.y
                            mad r1.z, r7.y, -r1.z, c5.y
                            max r2.y, r1.z, c3.x
                            cmp r1.z, -r6.y, r6.y, r2.y
                            rcp r1.w, r10.y
                            mul r1.w, r1.w, r3.y
                            min r2.y, r1.w, c5.y
                            cmp r1.w, r9.y, r8.y, r2.y
                            cmp r1.z, r2.z, r1.w, r1.z
                            add r1.z, r1.z, c3.y
                            cmp r11.y, r1.z, c5.y, c5.x  // ::result<1>
                            rcp r1.z, r6.z
                            mad r1.z, r7.z, -r1.z, c5.y
                            max r2.y, r1.z, c3.x
                            cmp r1.z, -r6.z, r6.z, r2.y
                            rcp r1.w, r10.z
                            mul r1.w, r1.w, r3.z
                            min r2.y, r1.w, c5.y
                            cmp r1.w, r9.z, r8.z, r2.y
                            cmp r1.z, r2.w, r1.w, r1.z
                            add r1.z, r1.z, c3.y
                            cmp r11.z, r1.z, c5.y, c5.x  // ::result<2>

#line 387
                            lrp r4.xyz, r1.y, r11, r3  // ::result<0,1,2>
                          else
                            if_eq r2.x, c50.x

#line 393
                              rcp r1.z, r1.y
                              mul_sat r5.xyz, r1.z, r5  // Blend::blendColor<0,1,2>

#line 148
                              add r1.z, -r3.y, r3.x
                              cmp r1.zw, r1.z, r3.xyyx, r3.xyxy
                              min r2.y, r3.z, r1.z  // ::fmin<0>
                              max r2.z, r1.w, r3.z  // ::fmax<0>
                              add r1.z, -r2.y, r2.z  // ::delta<0>
                              add r1.w, r2.y, r2.z  // ::maxplusmin<0>

#line 154
                              mul r2.yzw, r1.w, -c3.y  // ::hsl<2,2,2>

#line 167
                              add r4.w, r1.w, -c5.y
                              rcp r5.w, r1.w
                              mul r5.w, r1.z, r5.w  // ::hsl<1>
                              add r6.x, -r1.w, -c5.z
                              rcp r6.x, r6.x
                              mul r6.x, r1.z, r6.x  // ::hsl<1>
                              cmp r5.w, r4.w, r6.x, r5.w  // ::hsl<1>

#line 183
                              cmp r1.z, -r1_abs.z, c3.x, r5.w  // ::hsl<1>

#line 192
                              if_eq r1.z, c3.x

#line 195
                              else

#line 175
                                add r6.xyz, -r5.xzyw, r5.zyxw

#line 149
                                cmp r7.xy, r6.z, r5.yxzw, r5
                                min r6.w, r5.z, r7.x  // ::fmin<0>
                                max r8.x, r7.y, r5.z  // ::fmax<0>
                                add r5.w, -r6.w, r8.x  // ::delta<0>

#line 174
                                add r7.xy, r5, -r8.x
                                rcp r6.w, r5.w

#line 177
                                mul r6.y, r6.w, r6.y  // ::hsl<0>
                                mad r6.xz, r6, r6.w, c43.xyyw  // ::hsl<0,0>
                                cmp r6.x, -r7_abs.y, r6.x, r6.z  // ::hsl<0>
                                cmp r6.x, -r7_abs.x, r6.y, r6.x  // ::hsl<0>
                                mul r6.y, r6.x, c42.w  // ::hsl<0>

#line 182
                                mad r6.z, r6.x, c43.z, c43.w  // ::hsl<0>
                                cmp r6.x, r6.x, r6.y, r6.z  // ::hsl<0>
                                cmp r5.w, -r5_abs.w, c3.x, r6.x  // ::hsl<0>

#line 200
                                add r6.x, r1.z, c5.y
                                mul r6.x, r2.w, r6.x  // ::temp2<0>
                                mad r6.y, r1.w, -c3.y, r1.z
                                mad r1.z, r1.z, -r2.w, r6.y  // ::temp2<0>
                                cmp r1.z, r4.w, r1.z, r6.x  // ::temp2<0>
                                add r1.w, -r1.z, r1.w  // ::temp1<0>

#line 124
                                add r6, r5.w, c44.yzwx  // GetHue::temp3<0,0,0,0>
                                add r4.w, -r6.x, c5.y
                                cmp r4.w, r4.w, r6.x, r6.z  // GetHue::temp3<0>
                                cmp r4.w, r6.x, r4.w, r6.y  // GetHue::temp3<0>

#line 131
                                add r6.x, -r1.w, r1.z
                                mul r6.y, r6.x, c45.x
                                mad r6.z, r6.y, r4.w, r1.w  // ::rgbComponent<0>

#line 134
                                add r7.xyz, r4.w, c45.yzww
                                add r4.w, -r4.w, -c45.w
                                mul r4.w, r4.w, r6.x
                                mad r4.w, r4.w, c45.x, r1.w  // ::rgbComponent<0>
                                cmp r4.w, r7.z, r1.w, r4.w  // ::rgbComponent<0>
                                cmp r4.w, r7.y, r4.w, r1.z  // ::rgbComponent<0>
                                cmp r2.y, r7.x, r4.w, r6.z  // ::rgbComponent<0>

#line 125
                                add r4.w, -r5.w, c5.y
                                add r7, r5.w, -c44.xywz  // GetHue::temp3<0,0,0,0>
                                cmp r4.w, r4.w, r5.w, r7.x  // GetHue::temp3<0>
                                cmp r4.w, r5.w, r4.w, r6.w  // GetHue::temp3<0>

#line 131
                                mad r5.w, r6.y, r4.w, r1.w  // ::rgbComponent<0>

#line 134
                                add r8.xyz, r4.w, c45.yzww
                                add r4.w, -r4.w, -c45.w
                                mul r4.w, r4.w, r6.x
                                mad r4.w, r4.w, c45.x, r1.w  // ::rgbComponent<0>
                                cmp r4.w, r8.z, r1.w, r4.w  // ::rgbComponent<0>
                                cmp r4.w, r8.y, r4.w, r1.z  // ::rgbComponent<0>
                                cmp r2.z, r8.x, r4.w, r5.w  // ::rgbComponent<0>

#line 125
                                add r4.w, -r7.y, c5.y
                                cmp r4.w, r4.w, r7.y, r7.w  // GetHue::temp3<0>
                                cmp r4.w, r7.y, r4.w, r7.z  // GetHue::temp3<0>

#line 131
                                mad r5.w, r6.y, r4.w, r1.w  // ::rgbComponent<0>

#line 134
                                add r6.yzw, r4.w, c45
                                add r4.w, -r4.w, -c45.w
                                mul r4.w, r4.w, r6.x
                                mad r4.w, r4.w, c45.x, r1.w  // ::rgbComponent<0>
                                cmp r1.w, r6.w, r1.w, r4.w  // ::rgbComponent<0>
                                cmp r1.z, r6.z, r1.w, r1.z  // ::rgbComponent<0>
                                cmp r2.w, r6.y, r1.z, r5.w  // ::rgbComponent<0>

#line 209
                              endif

#line 400
                              lrp r4.xyz, r1.y, r2.yzww, r3  // ::result<0,1,2>
                            else
                              if_eq r2.x, c50.y

#line 406
                                rcp r1.z, r1.y
                                mul_sat r5.xyz, r1.z, r5  // Blend::blendColor<0,1,2>

#line 425
                                max r2.yzw, r3.xxyz, r5.xxyz  // ::result<0,1,2>

#line 428
                                lrp r4.xyz, r1.y, r2.yzww, r3  // ::result<0,1,2>
                              else
                                if_eq r2.x, c50.z

#line 434
                                  rcp r1.z, r1.y
                                  mul_sat r5.xyz, r1.z, r5  // Blend::blendColor<0,1,2>

#line 438
                                  add r2.yzw, r3.xxyz, r5.xxyz
                                  add_sat r2.yzw, r2, -c5.y  // ::result<0,1,2>

#line 441
                                  lrp r4.xyz, r1.y, r2.yzww, r3  // ::result<0,1,2>
                                else
                                  if_eq r2.x, c50.w

#line 447
                                    rcp r1.z, r1.y
                                    mul_sat r5.xyz, r1.z, r5  // Blend::blendColor<0,1,2>

#line 451
                                    add r2.yzw, r3.xxyz, r5.xxyz  // ::result<0,1,2>

#line 454
                                    lrp r4.xyz, r1.y, r2.yzww, r3  // ::result<0,1,2>
                                  else
                                    if_eq r2.x, c51.x

#line 460
                                      rcp r1.z, r1.y
                                      mul_sat r5.xyz, r1.z, r5  // Blend::blendColor<0,1,2>

#line 477
                                      add r2.yzw, -r5.xxyz, -c3.y
                                      add r6.xyz, r5, c3.y
                                      mad r6.xyz, r6, -c5.z, r3  // ::result<0,1,2>
                                      mad r7.xyz, r5, -c5.z, r3
                                      add r7.xyz, r7, -c5.y  // ::result<0,1,2>
                                      cmp r2.yzw, r2, r7.xxyz, r6.xxyz  // ::result<0,1,2>

#line 484
                                      lrp r4.xyz, r1.y, r2.yzww, r3  // ::result<0,1,2>
                                    else
                                      if_eq r2.x, c51.y

#line 490
                                        rcp r1.z, r1.y
                                        mul_sat r5.xyz, r1.z, r5  // Blend::blendColor<0,1,2>

#line 175
                                        add r2.yzw, -r3.xxzy, r3.xzyx

#line 149
                                        cmp r1.zw, r2.w, r3.xyyx, r3.xyxy
                                        min r4.w, r3.z, r1.z  // ::fmin<0>
                                        max r5.w, r1.w, r3.z  // ::fmax<0>
                                        add r1.z, -r4.w, r5.w  // ::delta<0>
                                        add r1.w, r4.w, r5.w  // ::maxplusmin<0>

#line 167
                                        add r4.w, r1.w, -c5.y
                                        rcp r6.x, r1.w
                                        mul r6.x, r1.z, r6.x  // ::hsl<1>
                                        add r1.w, -r1.w, -c5.z
                                        rcp r1.w, r1.w
                                        mul r1.w, r1.w, r1.z  // ::hsl<1>
                                        cmp r6.x, r4.w, r1.w, r6.x  // ::hsl<1>

#line 174
                                        add r7.xy, r3, -r5.w
                                        rcp r1.w, r1.z

#line 177
                                        mul r2.z, r1.w, r2.z  // ::hsl<0>
                                        mad r2.yw, r2, r1.w, c43.xxzy  // ::hsl<0,0>
                                        cmp r1.w, -r7_abs.y, r2.y, r2.w  // ::hsl<0>
                                        cmp r1.w, -r7_abs.x, r2.z, r1.w  // ::hsl<0>
                                        mul r2.y, r1.w, c42.w  // ::hsl<0>

#line 182
                                        mad r2.z, r1.w, c43.z, c43.w  // ::hsl<0>
                                        cmp r6.yzw, r1.w, r2.y, r2.z  // ::hsl<0,0,0>
                                        cmp r6, -r1_abs.z, c3.x, r6  // ::hsl<1,0,0,0>

#line 148
                                        add r1.z, -r5.y, r5.x
                                        cmp r1.zw, r1.z, r5.xyyx, r5.xyxy
                                        min r2.y, r5.z, r1.z  // ::fmin<0>
                                        max r2.z, r1.w, r5.z  // ::fmax<0>
                                        add r1.z, r2.y, r2.z  // ::maxplusmin<0>

#line 154
                                        mul r2.yzw, r1.z, -c3.y  // ::hsl<2,2,2>

#line 192
                                        if_eq r6.x, c3.x

#line 195
                                        else

#line 199
                                          add r1.w, r1.z, -c5.y

#line 126
                                          add r7, r6, c44  // GetHue::temp3<0,0,0>

#line 200
                                          mul r4.w, r2.w, r7.x  // ::temp2<0>
                                          mad r5.w, r1.z, -c3.y, r6.x
                                          mad r5.w, r6.x, -r2.w, r5.w  // ::temp2<0>
                                          cmp r1.w, r1.w, r5.w, r4.w  // ::temp2<0>
                                          add r1.z, -r1.w, r1.z  // ::temp1<0>

#line 125
                                          add r4.w, -r7.y, c5.y
                                          cmp r4.w, r4.w, r7.y, r7.w  // GetHue::temp3<0>
                                          cmp r4.w, r7.y, r4.w, r7.z  // GetHue::temp3<0>

#line 131
                                          add r5.w, -r1.z, r1.w
                                          mul r6.x, r5.w, c45.x
                                          mad r6.y, r6.x, r4.w, r1.z  // ::rgbComponent<0>

#line 134
                                          add r7.xyz, r4.w, c45.yzww
                                          add r4.w, -r4.w, -c45.w
                                          mul r4.w, r4.w, r5.w
                                          mad r4.w, r4.w, c45.x, r1.z  // ::rgbComponent<0>
                                          cmp r4.w, r7.z, r1.z, r4.w  // ::rgbComponent<0>
                                          cmp r4.w, r7.y, r4.w, r1.w  // ::rgbComponent<0>
                                          cmp r2.y, r7.x, r4.w, r6.y  // ::rgbComponent<0>

#line 125
                                          add r4.w, -r6.w, c5.y
                                          add r7, r6.w, c48  // GetHue::temp3<0,0,0,0>
                                          cmp r4.w, r4.w, r6.w, r7.y  // GetHue::temp3<0>
                                          cmp r4.w, r6.w, r4.w, r7.x  // GetHue::temp3<0>

#line 131
                                          mad r6.y, r6.x, r4.w, r1.z  // ::rgbComponent<0>

#line 134
                                          add r8.xyz, r4.w, c45.yzww
                                          add r4.w, -r4.w, -c45.w
                                          mul r4.w, r4.w, r5.w
                                          mad r4.w, r4.w, c45.x, r1.z  // ::rgbComponent<0>
                                          cmp r4.w, r8.z, r1.z, r4.w  // ::rgbComponent<0>
                                          cmp r4.w, r8.y, r4.w, r1.w  // ::rgbComponent<0>
                                          cmp r2.z, r8.x, r4.w, r6.y  // ::rgbComponent<0>

#line 125
                                          add r4.w, -r7.z, c5.y
                                          add r6.y, r6.w, -c44.z  // GetHue::temp3<0>
                                          cmp r4.w, r4.w, r7.z, r6.y  // GetHue::temp3<0>
                                          cmp r4.w, r7.z, r4.w, r7.w  // GetHue::temp3<0>

#line 131
                                          mad r6.x, r6.x, r4.w, r1.z  // ::rgbComponent<0>

#line 134
                                          add r6.yzw, r4.w, c45
                                          add r4.w, -r4.w, -c45.w
                                          mul r4.w, r4.w, r5.w
                                          mad r4.w, r4.w, c45.x, r1.z  // ::rgbComponent<0>
                                          cmp r1.z, r6.w, r1.z, r4.w  // ::rgbComponent<0>
                                          cmp r1.z, r6.z, r1.z, r1.w  // ::rgbComponent<0>
                                          cmp r2.w, r6.y, r1.z, r6.x  // ::rgbComponent<0>

#line 209
                                        endif

#line 497
                                        lrp r4.xyz, r1.y, r2.yzww, r3  // ::result<0,1,2>
                                      else
                                        if_eq r2.x, c51.z

#line 503
                                          rcp r1.z, r1.y
                                          mul_sat r5.xyz, r1.z, r5  // Blend::blendColor<0,1,2>

#line 507
                                          mul r2.yzw, r3.xxyz, r5.xxyz  // ::result<0,1,2>

#line 510
                                          lrp r4.xyz, r1.y, r2.yzww, r3  // ::result<0,1,2>
                                        else
                                          if_eq r2.x, c51.w

#line 516
                                            rcp r1.z, r1.y
                                            mul_sat r5.xyz, r1.z, r5  // Blend::blendColor<0,1,2>

#line 519
                                            add r2.yzw, -r3.xxyz, c5.y
                                            add r2.yzw, -r5.xxyz, r2
                                            add r2.yzw, -r2_abs, c5.y  // ::result<0,1,2>

#line 522
                                            lrp r4.xyz, r1.y, r2.yzww, r3  // ::result<0,1,2>
                                          else
                                            if_eq r2.x, c47.x
                                              add r1.z, -r1.y, c5.y
                                              add r1.w, -r3.w, c5.y
                                              mad r1.w, r1.z, -r1.w, c5.y  // ::result<3>

#line 530
                                              mul r2.yzw, r1.y, r5.xxyz
                                              rcp r1.w, r1.w
                                              mul r6.xyz, r3.w, r3
                                              mul r6.xyz, r1.z, r6
                                              mul r6.xyz, r1.w, r6
                                              mad r4.xyz, r2.yzww, r1.w, r6  // ::result<0,1,2>
                                            else
                                              add r1.z, r2.x, c47.y

#line 536
                                              rcp r1.w, r1.y
                                              mul_sat r2.xyz, r1.w, r5  // Blend::blendColor<0,1,2>

#line 554
                                              add r6.xyz, -r3, -c3.y
                                              add r7.xyz, r3, c3.y
                                              mad r7.xyz, r7, -c5_abs.z, c5_abs.y
                                              add r8.xyz, -r2, c5.y
                                              mad r7.xyz, r7, -r8, c5.y  // ::result<0,1,2>

#line 546
                                              dp2add r1.w, r2.x, r3.x, c3.x  // ::result<0>
                                              cmp r8.x, r6.x, r1.w, r7.x  // ::result<0>

#line 552
                                              dp2add r1.w, r2.y, r3.y, c3.x  // ::result<1>
                                              cmp r8.y, r6.y, r1.w, r7.y  // ::result<1>

#line 558
                                              dp2add r1.w, r2.z, r3.z, c3.x  // ::result<2>
                                              cmp r8.z, r6.z, r1.w, r7.z  // ::result<2>

#line 561
                                              lrp r4.xyz, r1.y, r8, r3  // ::result<0,1,2>
                                              cmp r5.xyz, -r1_abs.z, r2, r5  // Blend::blendColor<0,1,2>
                                            endif
                                          endif
                                        endif
                                      endif
                                    endif
                                  endif
                                endif
                              endif
                            endif
                          endif
                        endif
                      endif
                    endif
                  endif
                endif
              endif
            endif
          endif
        endif
        mov r2.x, c0.x  // ::BlendMode<0>
        if_eq r2.x, c47.z

#line 567
          rcp r1.z, r1.y
          mul_sat r2.yzw, r1.z, r5.xxyz  // Blend::blendColor<0,1,2>

#line 570
          min r6.xyz, r2.yzww, r3
          max r7.xyz, r3, r2.yzww
          add r2.yzw, r6.xxyz, -r7.xxyz
          add r2.yzw, r2, c5.y  // ::result<0,1,2>

#line 573
          lrp r4.xyz, r1.y, r2.yzww, r3  // ::result<0,1,2>
        else
          if_eq r2.x, c47.w

#line 579
            rcp r1.z, r1.y
            mul_sat r2.yzw, r1.z, r5.xxyz  // Blend::blendColor<0,1,2>

#line 596
            add r6.xyz, -r2.yzww, -c3.y
            add r7.xyz, r2.yzww, c3.y
            add r7.xyz, r7, r7
            max r8.xyz, r3, r7  // ::result<0,1,2>
            add r2.yzw, r2, r2
            min r7.xyz, r2.yzww, r3  // ::result<0,1,2>
            cmp r2.yzw, r6.xxyz, r7.xxyz, r8.xxyz  // ::result<0,1,2>

#line 603
            lrp r4.xyz, r1.y, r2.yzww, r3  // ::result<0,1,2>
          else
            if_eq r2.x, c52.x

#line 609
              rcp r1.z, r1.y
              mul_sat r2.yzw, r1.z, r5.xxyz  // Blend::blendColor<0,1,2>

#line 614
              add r6.xyz, r2.yzww, -c5.y
              mul r7.xyz, r3, r3
              add r8.xyz, -r2.yzww, c5.y
              rcp r1.z, r8.x
              mul r1.z, r1.z, r7.x
              min r3.w, r1.z, c5.y
              cmp r9.x, r6.x, r2.y, r3.w  // ::result<0>
              rcp r1.z, r8.y
              mul r1.z, r1.z, r7.y
              min r2.y, r1.z, c5.y
              cmp r9.y, r6.y, r2.z, r2.y  // ::result<1>
              rcp r1.z, r8.z
              mul r1.z, r1.z, r7.z
              min r2.y, r1.z, c5.y
              cmp r9.z, r6.z, r2.w, r2.y  // ::result<2>

#line 617
              lrp r4.xyz, r1.y, r9, r3  // ::result<0,1,2>
            else

#line 623
              if_eq r2.x, c52.y

#line 626
                rcp r1.z, r1.y
                mul_sat r2.yzw, r1.z, r5.xxyz  // Blend::blendColor<0,1,2>

#line 148
                add r1.z, -r3.y, r3.x
                cmp r6.xy, r1.z, r3.yxzw, r3
                min r1.w, r3.z, r6.x  // ::fmin<0>
                max r4.w, r6.y, r3.z  // ::fmax<0>
                add r3.w, r1.w, r4.w  // ::maxplusmin<0>

#line 154
                mul r6.xyz, r3.w, -c3.y  // ::hsl<2,2,2>

#line 148
                add r5.w, -r2.z, r2.y
                cmp r2.yz, r5.w, r2.xzyw, r2
                min r5.w, r2.w, r2.y  // ::fmin<0>
                max r6.w, r2.z, r2.w  // ::fmax<0>
                add r2.y, -r5.w, r6.w  // ::delta<0>
                add r2.z, r5.w, r6.w  // ::maxplusmin<0>

#line 167
                add r2.w, r2.z, -c5.y
                rcp r5.w, r2.z
                mul r5.w, r2.y, r5.w  // ::hsl<1>
                add r2.z, -r2.z, -c5.z
                rcp r2.z, r2.z
                mul r2.z, r2.z, r2.y  // ::hsl<1>
                cmp r2.z, r2.w, r2.z, r5.w  // ::hsl<1>

#line 183
                cmp r2.y, -r2_abs.y, c3.x, r2.z  // ::hsl<1>

#line 192
                if_eq r2.y, c3.x

#line 195
                else

#line 150
                  add r1.w, -r1.w, r4.w  // ::delta<0>

#line 174
                  add r2.zw, r3.xyxy, -r4.w
                  add r4.w, -r3.z, r3.y
                  rcp r5.w, r1.w
                  mul r4.w, r4.w, r5.w  // ::hsl<0>
                  add r6.w, -r3.x, r3.z
                  mad r6.w, r6.w, r5.w, -c5.z  // ::hsl<0>
                  mad r1.z, r1.z, r5.w, c43.y  // ::hsl<0>
                  cmp r1.z, -r2_abs.w, r6.w, r1.z  // ::hsl<0>
                  cmp r1.z, -r2_abs.z, r4.w, r1.z  // ::hsl<0>
                  mul r2.z, r1.z, c42.w  // ::hsl<0>

#line 182
                  mad r2.w, r1.z, c43.z, c43.w  // ::hsl<0>
                  cmp r1.z, r1.z, r2.z, r2.w  // ::hsl<0>
                  cmp r1.z, -r1_abs.w, c3.x, r1.z  // ::hsl<0>

#line 199
                  add r1.w, r3.w, -c5.y
                  add r2.z, r2.y, c5.y
                  mul r2.z, r2.z, r6.z  // ::temp2<0>
                  mad r2.w, r3.w, -c3.y, r2.y
                  mad r2.y, r2.y, -r6.z, r2.w  // ::temp2<0>
                  cmp r1.w, r1.w, r2.y, r2.z  // ::temp2<0>
                  add r2.y, -r1.w, r3.w  // ::temp1<0>

#line 124
                  add r7, r1.z, c44.yzwx  // GetHue::temp3<0,0,0,0>
                  add r2.z, -r7.x, c5.y
                  cmp r2.z, r2.z, r7.x, r7.z  // GetHue::temp3<0>
                  cmp r2.z, r7.x, r2.z, r7.y  // GetHue::temp3<0>

#line 131
                  add r2.w, r1.w, -r2.y
                  mul r3.w, r2.w, c45.x
                  mad r4.w, r3.w, r2.z, r2.y  // ::rgbComponent<0>

#line 134
                  add r7.xyz, r2.z, c45.yzww
                  add r2.z, -r2.z, -c45.w
                  mul r2.z, r2.z, r2.w
                  mad r2.z, r2.z, c45.x, r2.y  // ::rgbComponent<0>
                  cmp r2.z, r7.z, r2.y, r2.z  // ::rgbComponent<0>
                  cmp r2.z, r7.y, r2.z, r1.w  // ::rgbComponent<0>
                  cmp r6.x, r7.x, r2.z, r4.w  // ::rgbComponent<0>

#line 125
                  add r2.z, -r1.z, c5.y
                  add r8, r1.z, -c44.xywz  // GetHue::temp3<0,0,0,0>
                  cmp r2.z, r2.z, r1.z, r8.x  // GetHue::temp3<0>
                  cmp r1.z, r1.z, r2.z, r7.w  // GetHue::temp3<0>

#line 131
                  mad r2.z, r3.w, r1.z, r2.y  // ::rgbComponent<0>

#line 134
                  add r7.xyz, r1.z, c45.yzww
                  add r1.z, -r1.z, -c45.w
                  mul r1.z, r1.z, r2.w
                  mad r1.z, r1.z, c45.x, r2.y  // ::rgbComponent<0>
                  cmp r1.z, r7.z, r2.y, r1.z  // ::rgbComponent<0>
                  cmp r1.z, r7.y, r1.z, r1.w  // ::rgbComponent<0>
                  cmp r6.y, r7.x, r1.z, r2.z  // ::rgbComponent<0>

#line 125
                  add r1.z, -r8.y, c5.y
                  cmp r1.z, r1.z, r8.y, r8.w  // GetHue::temp3<0>
                  cmp r1.z, r8.y, r1.z, r8.z  // GetHue::temp3<0>

#line 131
                  mad r2.z, r3.w, r1.z, r2.y  // ::rgbComponent<0>

#line 134
                  add r7.xyz, r1.z, c45.yzww
                  add r1.z, -r1.z, -c45.w
                  mul r1.z, r1.z, r2.w
                  mad r1.z, r1.z, c45.x, r2.y  // ::rgbComponent<0>
                  cmp r1.z, r7.z, r2.y, r1.z  // ::rgbComponent<0>
                  cmp r1.z, r7.y, r1.z, r1.w  // ::rgbComponent<0>
                  cmp r6.z, r7.x, r1.z, r2.z  // ::rgbComponent<0>

#line 209
                endif

#line 633
                lrp r4.xyz, r1.y, r6, r3  // ::result<0,1,2>
              else
                if_eq r2.x, c52.z

#line 639
                  rcp r1.z, r1.y
                  mul_sat r2.yzw, r1.z, r5.xxyz  // Blend::blendColor<0,1,2>

#line 643
                  add r6.xyz, -r3, c5.y
                  add r2.yzw, -r2, c5.y
                  mad r2.yzw, r6.xxyz, -r2, c5.y  // ::result<0,1,2>

#line 646
                  lrp r4.xyz, r1.y, r2.yzww, r3  // ::result<0,1,2>
                else
                  if_eq r2.x, c52.w

#line 652
                    rcp r1.z, r1.y
                    mul_sat r2.yzw, r1.z, r5.xxyz  // Blend::blendColor<0,1,2>

#line 657
                    add r6.xyz, r2.yzww, c3.y
                    add r7.xyz, r3, r3
                    mul r8.xyz, r3, r3
                    mad r9.xyz, r2.yzww, -c5_abs.z, c5_abs.y
                    mul r8.xyz, r8, r9
                    mad r8.xyz, r7, r2.yzww, r8
                    rsq r1.z, r3.x
                    rcp r1.z, r1.z
                    mad r9.xyz, r2.yzww, -c5.z, -c5.y
                    add r2.yzw, -r2, c5.y
                    mul r2.yzw, r2, r7.xxyz
                    mad r1.z, r1.z, r9.x, r2.y
                    cmp r7.x, r6.x, r1.z, r8.x  // ::result<0>
                    rsq r1.z, r3.y
                    rcp r1.z, r1.z
                    mad r1.z, r1.z, r9.y, r2.z
                    cmp r7.y, r6.y, r1.z, r8.y  // ::result<1>
                    rsq r1.z, r3.z
                    rcp r1.z, r1.z
                    mad r1.z, r1.z, r9.z, r2.w
                    cmp r7.z, r6.z, r1.z, r8.z  // ::result<2>

#line 660
                    lrp r4.xyz, r1.y, r7, r3  // ::result<0,1,2>
                  else
                    if_eq r2.x, c46.x

#line 666
                      rcp r1.z, r1.y
                      mul_sat r2.xyz, r1.z, r5  // Blend::blendColor<0,1,2>

#line 671
                      add r5.xyz, r2, c3.y
                      add r2.xyz, r2, r2
                      add r6.xyz, -r3, c5.y
                      rcp r1.z, r2.x
                      mad r1.z, r6.x, -r1.z, c5.y
                      max r2.w, r1.z, c3.x
                      cmp r1.z, -r2.x, r2.x, r2.w
                      add r7.xyz, r5, r5
                      mad r8.xyz, r5, -c5.z, -c5.y
                      mad r9.xyz, r5, -c5_abs.z, c5_abs.y
                      rcp r1.w, r9.x
                      mul r1.w, r1.w, r3.x
                      min r2.x, r1.w, c5.y
                      cmp r1.w, r8.x, r7.x, r2.x
                      cmp r10.x, r5.x, r1.w, r1.z  // ::result<0>
                      rcp r1.z, r2.y
                      mad r1.z, r6.y, -r1.z, c5.y
                      max r2.x, r1.z, c3.x
                      cmp r1.z, -r2.y, r2.y, r2.x
                      rcp r1.w, r9.y
                      mul r1.w, r1.w, r3.y
                      min r2.x, r1.w, c5.y
                      cmp r1.w, r8.y, r7.y, r2.x
                      cmp r10.y, r5.y, r1.w, r1.z  // ::result<1>
                      rcp r1.z, r2.z
                      mad r1.z, r6.z, -r1.z, c5.y
                      max r2.x, r1.z, c3.x
                      cmp r1.z, -r2.z, r2.z, r2.x
                      rcp r1.w, r9.z
                      mul r1.w, r1.w, r3.z
                      min r2.x, r1.w, c5.y
                      cmp r1.w, r8.z, r7.z, r2.x
                      cmp r10.z, r5.z, r1.w, r1.z  // ::result<2>

#line 674
                      lrp r4.xyz, r1.y, r10, r3  // ::result<0,1,2>
                    endif
                  endif
                endif
              endif
            endif
          endif
        endif

#line 885
      else
        mov r1.yz, c5
        if_eq c8.x, r1.y

#line 102
          add r2.xy, -c3.y, -v0
          mul r2.xy, r2_abs, r2_abs
          add r1.w, r2.y, r2.x
          rsq r1.w, r1.w
          rcp r1.w, r1.w  // ::GetDistance<0>

#line 828
          mul_sat r1.w, r1.w, c46.y  // ::nd<0>

#line 683
          add r2.x, r1.y, -c7.x

#line 696
          if_eq c41.x, r1.x

#line 703
            mov r3, c3.x  // ::color1<0,1,2,3>
            mov r2.yzw, c3.x  // ::color2<0,1,2>
            mov r5.x, c3.x  // ::offset1<0>
            mov r5.y, c5.y  // ::offset2<0>
          else
            if_eq c41.x, r1.y

#line 711
              mov r3, c9  // ::color1<0,1,2,3>
              mov r2.yzw, c9.xxyz  // ::color2<0,1,2>
              mov r5.x, c3.x  // ::offset1<0>
              mov r5.y, c5.y  // ::offset2<0>
            else
              if_eq c41.x, -r1.z

#line 719
                mov r3, c9  // ::color1<0,1,2,3>
                mov r2.yzw, c11.xxyz  // ::color2<0,1,2>
                mov r5.x, c3.x  // ::offset1<0>
                mov r5.y, c5.y  // ::offset2<0>
              else

#line 722
                mad r4.w, r1.w, r2.x, -c10.x
                mad r5.z, r1.w, r2.x, -c12.x
                cmp r5.w, r5.z, c5.x, c5.y
                cmp r4.w, r4.w, r5.w, c3.x
                if_ne r4.w, -r4.w

#line 726
                  mov r3, c9  // ::color1<0,1,2,3>
                  mov r2.yzw, c11.xxyz  // ::color2<0,1,2>
                  mov r5.x, c10.x  // ::offset1<0>
                  mov r5.y, c12.x  // ::offset2<0>
                else
                  mad r4.w, r1.w, r2.x, -c14.x
                  cmp r5.w, r4.w, c5.x, c5.y
                  cmp r5.z, r5.z, r5.w, c3.x
                  if_ne r5.z, -r5.z

#line 731
                    mov r3, c11  // ::color1<0,1,2,3>
                    mov r2.yzw, c13.xxyz  // ::color2<0,1,2>
                    mov r5.x, c12.x  // ::offset1<0>
                    mov r5.y, c14.x  // ::offset2<0>
                  else
                    mad r5.z, r1.w, r2.x, -c16.x
                    cmp r5.w, r5.z, c5.x, c5.y
                    cmp r4.w, r4.w, r5.w, c3.x
                    if_ne r4.w, -r4.w

#line 736
                      mov r3, c13  // ::color1<0,1,2,3>
                      mov r2.yzw, c15.xxyz  // ::color2<0,1,2>
                      mov r5.x, c14.x  // ::offset1<0>
                      mov r5.y, c16.x  // ::offset2<0>
                    else
                      mad r4.w, r1.w, r2.x, -c18.x
                      cmp r5.w, r4.w, c5.x, c5.y
                      cmp r5.z, r5.z, r5.w, c3.x
                      if_ne r5.z, -r5.z

#line 741
                        mov r3, c15  // ::color1<0,1,2,3>
                        mov r2.yzw, c17.xxyz  // ::color2<0,1,2>
                        mov r5.x, c16.x  // ::offset1<0>
                        mov r5.y, c18.x  // ::offset2<0>
                      else
                        mad r5.z, r1.w, r2.x, -c20.x
                        cmp r5.w, r5.z, c5.x, c5.y
                        cmp r4.w, r4.w, r5.w, c3.x
                        if_ne r4.w, -r4.w

#line 746
                          mov r3, c17  // ::color1<0,1,2,3>
                          mov r2.yzw, c19.xxyz  // ::color2<0,1,2>
                          mov r5.x, c18.x  // ::offset1<0>
                          mov r5.y, c20.x  // ::offset2<0>
                        else
                          mad r4.w, r1.w, r2.x, -c22.x
                          cmp r5.w, r4.w, c5.x, c5.y
                          cmp r5.z, r5.z, r5.w, c3.x
                          if_ne r5.z, -r5.z

#line 751
                            mov r3, c19  // ::color1<0,1,2,3>
                            mov r2.yzw, c21.xxyz  // ::color2<0,1,2>
                            mov r5.x, c20.x  // ::offset1<0>
                            mov r5.y, c22.x  // ::offset2<0>
                          else
                            mad r5.z, r1.w, r2.x, -c24.x
                            cmp r5.w, r5.z, c5.x, c5.y
                            cmp r4.w, r4.w, r5.w, c3.x
                            if_ne r4.w, -r4.w

#line 756
                              mov r3, c21  // ::color1<0,1,2,3>
                              mov r2.yzw, c23.xxyz  // ::color2<0,1,2>
                              mov r5.x, c22.x  // ::offset1<0>
                              mov r5.y, c24.x  // ::offset2<0>
                            else
                              mad r4.w, r1.w, r2.x, -c26.x

#line 762
                              mad r5.w, r1.w, r2.x, -c28.x

#line 767
                              mad r6.x, r1.w, r2.x, -c30.x

#line 772
                              mad r6.y, r1.w, r2.x, -c32.x

#line 777
                              mad r6.z, r1.w, r2.x, -c34.x

#line 782
                              mad r6.w, r1.w, r2.x, -c36.x

#line 787
                              mad r7.x, r1.w, r2.x, -c38.x

#line 796
                              cmp r7.x, r7.x, -c5.x, -c5.y
                              cmp r7.x, r6.w, r7.x, c3.x
                              mov r8, c37  // ::Color15<0,1,2,3>
                              cmp r9, r7.x, r8, c35  // ::color1<0,1,2,3>
                              cmp r7.yzw, r7.x, c39.xxyz, r8.xxyz  // ::color2<0,1,2>
                              mov r8.y, c40.x
                              mov r8.z, c36.x
                              mov r8.xw, c38.x
                              cmp r8.xy, r7.x, r8, r8.zwzw  // ::offset1<0>, ::offset2<0>
                              cmp r6.w, r6.w, -c5.x, -c5.y
                              cmp r6.w, r6.z, r6.w, c3.x
                              cmp r9, r6.w, r9, c33  // ::color1<0,1,2,3>
                              cmp r7.xyz, r6.w, r7.yzww, c35  // ::color2<0,1,2>
                              mov r10.xw, c34.x
                              mov r10.y, c36.x
                              cmp r8.xy, r6.w, r8, r10  // ::offset1<0>, ::offset2<0>
                              cmp r6.z, r6.z, -c5.x, -c5.y
                              cmp r6.z, r6.y, r6.z, c3.x
                              cmp r9, r6.z, r9, c31  // ::color1<0,1,2,3>
                              cmp r7.xyz, r6.z, r7, c33  // ::color2<0,1,2>
                              mov r10.z, c32.x
                              cmp r6.zw, r6.z, r8.xyxy, r10  // ::offset1<0>, ::offset2<0>
                              cmp r6.y, r6.y, -c5.x, -c5.y
                              cmp r6.y, r6.x, r6.y, c3.x
                              cmp r8, r6.y, r9, c29  // ::color1<0,1,2,3>
                              cmp r7.xyz, r6.y, r7, c31  // ::color2<0,1,2>
                              mov r9.xw, c30.x
                              mov r9.y, c32.x
                              cmp r6.yz, r6.y, r6.xzww, r9.xxyw  // ::offset1<0>, ::offset2<0>
                              cmp r6.x, r6.x, -c5.x, -c5.y
                              cmp r6.x, r5.w, r6.x, c3.x
                              cmp r8, r6.x, r8, c27  // ::color1<0,1,2,3>
                              cmp r7.xyz, r6.x, r7, c29  // ::color2<0,1,2>
                              mov r9.yz, c28.x
                              cmp r6.xy, r6.x, r6.yzzw, r9.zwzw  // ::offset1<0>, ::offset2<0>
                              cmp r5.w, r5.w, -c5.x, -c5.y
                              cmp r5.w, r4.w, r5.w, c3.x
                              cmp r8, r5.w, r8, c25  // ::color1<0,1,2,3>
                              cmp r7.xyz, r5.w, r7, c27  // ::color2<0,1,2>
                              mov r9.xw, c26.x
                              cmp r6.xy, r5.w, r6, r9  // ::offset1<0>, ::offset2<0>
                              cmp r4.w, r4.w, -c5.x, -c5.y
                              cmp r4.w, r5.z, r4.w, c3.x
                              cmp r3, r4.w, r8, c23  // ::color1<0,1,2,3>
                              cmp r2.yzw, r4.w, r7.xxyz, c25.xxyz  // ::color2<0,1,2>
                              mov r9.z, c24.x
                              cmp r5.xy, r4.w, r6, r9.zwzw  // ::offset1<0>, ::offset2<0>
                            endif
                          endif
                        endif
                      endif
                    endif
                  endif
                endif
              endif
            endif
          endif
          add r4.w, -r5.x, r5.y  // ::q<0>
          mad r1.w, r1.w, r2.x, -r5.x
          rcp r2.x, r4.w
          mul r1.w, r1.w, r2.x
          cmp r1.w, -r4_abs.w, c3.x, r1.w  // ::p<0>

#line 218
          cmp r5.xyz, -r2_abs.yzww, c42.y, r2.yzww  // Blend::blendColor<0,1,2>

#line 226
          if_eq c0.x, r1.x

#line 229
            rcp r2.x, r1.w
            mul_sat r5.xyz, r2.x, r5  // Blend::blendColor<0,1,2>

#line 232
            add r2.xyz, r3, r5
            mul r2.xyz, r1.w, r2

#line 235
            add r2.w, -r1.w, c5.y
            mul r2.xyz, r2, -c3.y
            mad r4.xyz, r2.w, r3, r2  // ::result<0,1,2>
          else
            if_eq c0.x, r1.y

#line 241
              rcp r2.x, r1.w
              mul_sat r5.xyz, r2.x, r5  // Blend::blendColor<0,1,2>

#line 245
              add r2.xyz, -r3, c5.y
              rcp r6.x, r5.x
              rcp r6.y, r5.y
              rcp r6.z, r5.z
              mad_sat r2.xyz, r2, -r6, c5.y  // ::result<0,1,2>

#line 248
              lrp r4.xyz, r1.w, r2, r3  // ::result<0,1,2>
            else
              if_eq c0.x, -r1.z

#line 254
                rcp r2.x, r1.w
                mul_sat r5.xyz, r2.x, r5  // Blend::blendColor<0,1,2>

#line 260
                add r2.xyz, r5, -c5.y
                add r6.xyz, -r5, c5.y
                rcp r2.w, r6.x
                mul r2.w, r2.w, r3.x
                min r4.w, r2.w, c5.y
                cmp r7.x, r2.x, r5.x, r4.w  // ::result<0>
                rcp r2.x, r6.y
                mul r2.x, r2.x, r3.y
                min r4.w, r2.x, c5.y
                cmp r7.y, r2.y, r5.y, r4.w  // ::result<1>
                rcp r2.x, r6.z
                mul r2.x, r2.x, r3.z
                min r4.w, r2.x, c5.y
                cmp r7.z, r2.z, r5.z, r4.w  // ::result<2>

#line 263
                lrp r4.xyz, r1.w, r7, r3  // ::result<0,1,2>
              else
                mov r2.x, c0.x  // ::BlendMode<0>
                if_eq r2.x, c42.z

#line 269
                  rcp r2.y, r1.w
                  mul_sat r5.xyz, r2.y, r5  // Blend::blendColor<0,1,2>

#line 175
                  add r2.yzw, -r5.xxzy, r5.xzyx

#line 149
                  cmp r6.xy, r2.w, r5.yxzw, r5
                  min r4.w, r5.z, r6.x  // ::fmin<0>
                  max r7.x, r6.y, r5.z  // ::fmax<0>
                  add r5.w, -r4.w, r7.x  // ::delta<0>
                  add r4.w, r4.w, r7.x  // ::maxplusmin<0>

#line 167
                  add r6.x, r4.w, -c5.y
                  rcp r6.y, r4.w
                  mul r6.y, r5.w, r6.y  // ::hsl<1>
                  add r4.w, -r4.w, -c5.z
                  rcp r4.w, r4.w
                  mul r4.w, r4.w, r5.w  // ::hsl<1>
                  cmp r6.x, r6.x, r4.w, r6.y  // ::hsl<1>

#line 174
                  add r7.xy, r5, -r7.x
                  rcp r4.w, r5.w

#line 177
                  mul r2.z, r2.z, r4.w  // ::hsl<0>
                  mad r2.yw, r2, r4.w, c43.xxzy  // ::hsl<0,0>
                  cmp r2.y, -r7_abs.y, r2.y, r2.w  // ::hsl<0>
                  cmp r2.y, -r7_abs.x, r2.z, r2.y  // ::hsl<0>
                  mul r2.z, r2.y, c42.w  // ::hsl<0>

#line 182
                  mad r2.w, r2.y, c43.z, c43.w  // ::hsl<0>
                  cmp r6.yzw, r2.y, r2.z, r2.w  // ::hsl<0,0,0>
                  cmp r6, -r5_abs.w, c3.x, r6  // ::hsl<1,0,0,0>

#line 148
                  add r2.y, -r3.y, r3.x
                  cmp r2.yz, r2.y, r3.xyxw, r3.xxyw
                  min r4.w, r3.z, r2.y  // ::fmin<0>
                  max r5.w, r2.z, r3.z  // ::fmax<0>
                  add r2.y, r4.w, r5.w  // ::maxplusmin<0>

#line 154
                  mul r7.xyz, r2.y, -c3.y  // ::hsl<2,2,2>

#line 192
                  if_eq r6.x, c3.x

#line 195
                  else

#line 199
                    add r2.z, r2.y, -c5.y

#line 126
                    add r8, r6, c44  // GetHue::temp3<0,0,0>

#line 200
                    mul r2.w, r7.z, r8.x  // ::temp2<0>
                    mad r4.w, r2.y, -c3.y, r6.x
                    mad r4.w, r6.x, -r7.z, r4.w  // ::temp2<0>
                    cmp r2.z, r2.z, r4.w, r2.w  // ::temp2<0>
                    add r2.y, -r2.z, r2.y  // ::temp1<0>

#line 125
                    add r2.w, -r8.y, c5.y
                    cmp r2.w, r2.w, r8.y, r8.w  // GetHue::temp3<0>
                    cmp r2.w, r8.y, r2.w, r8.z  // GetHue::temp3<0>

#line 131
                    add r4.w, -r2.y, r2.z
                    mul r5.w, r4.w, c45.x
                    mad r6.x, r5.w, r2.w, r2.y  // ::rgbComponent<0>

#line 134
                    add r8.xyz, r2.w, c45.yzww
                    add r2.w, -r2.w, -c45.w
                    mul r2.w, r2.w, r4.w
                    mad r2.w, r2.w, c45.x, r2.y  // ::rgbComponent<0>
                    cmp r2.w, r8.z, r2.y, r2.w  // ::rgbComponent<0>
                    cmp r2.w, r8.y, r2.w, r2.z  // ::rgbComponent<0>
                    cmp r7.x, r8.x, r2.w, r6.x  // ::rgbComponent<0>

#line 125
                    add r2.w, -r6.w, c5.y
                    add r8, r6.w, c48  // GetHue::temp3<0,0,0,0>
                    cmp r2.w, r2.w, r6.w, r8.y  // GetHue::temp3<0>
                    cmp r2.w, r6.w, r2.w, r8.x  // GetHue::temp3<0>

#line 131
                    mad r6.x, r5.w, r2.w, r2.y  // ::rgbComponent<0>

#line 134
                    add r9.xyz, r2.w, c45.yzww
                    add r2.w, -r2.w, -c45.w
                    mul r2.w, r2.w, r4.w
                    mad r2.w, r2.w, c45.x, r2.y  // ::rgbComponent<0>
                    cmp r2.w, r9.z, r2.y, r2.w  // ::rgbComponent<0>
                    cmp r2.w, r9.y, r2.w, r2.z  // ::rgbComponent<0>
                    cmp r7.y, r9.x, r2.w, r6.x  // ::rgbComponent<0>

#line 125
                    add r2.w, -r8.z, c5.y
                    add r6.x, r6.w, -c44.z  // GetHue::temp3<0>
                    cmp r2.w, r2.w, r8.z, r6.x  // GetHue::temp3<0>
                    cmp r2.w, r8.z, r2.w, r8.w  // GetHue::temp3<0>

#line 131
                    mad r5.w, r5.w, r2.w, r2.y  // ::rgbComponent<0>

#line 134
                    add r6.xyz, r2.w, c45.yzww
                    add r2.w, -r2.w, -c45.w
                    mul r2.w, r2.w, r4.w
                    mad r2.w, r2.w, c45.x, r2.y  // ::rgbComponent<0>
                    cmp r2.y, r6.z, r2.y, r2.w  // ::rgbComponent<0>
                    cmp r2.y, r6.y, r2.y, r2.z  // ::rgbComponent<0>
                    cmp r7.z, r6.x, r2.y, r5.w  // ::rgbComponent<0>

#line 209
                  endif

#line 276
                  lrp r4.xyz, r1.w, r7, r3  // ::result<0,1,2>
                else
                  if_eq r2.x, c43.y

#line 282
                    rcp r2.y, r1.w
                    mul_sat r5.xyz, r2.y, r5  // Blend::blendColor<0,1,2>

#line 300
                    min r2.yzw, r3.xxyz, r5.xxyz  // ::result<0,1,2>

#line 303
                    lrp r4.xyz, r1.w, r2.yzww, r3  // ::result<0,1,2>
                  else
                    if_eq r2.x, c49.x

#line 309
                      rcp r2.y, r1.w
                      mul_sat r5.xyz, r2.y, r5  // Blend::blendColor<0,1,2>

#line 313
                      add r2.yzw, r3.xxyz, -r5.xxyz

#line 316
                      lrp r4.xyz, r1.w, r2_abs.yzww, r3  // ::result<0,1,2>
                    else
                      if_eq r2.x, c45.x

#line 322
                        rcp r2.y, r1.w
                        mul_sat r5.xyz, r2.y, r5  // Blend::blendColor<0,1,2>

#line 326
                        add r2.yzw, r3.xxyz, c3.y
                        add r2.yzw, r2, r2
                        add r6.xyz, r5, c3.y
                        mad r2.yzw, r2, -r6.xxyz, -c3.y  // ::result<0,1,2>

#line 329
                        lrp r4.xyz, r1.w, r2.yzww, r3  // ::result<0,1,2>
                      else
                        if_eq r2.x, c49.y

#line 335
                          rcp r2.y, r1.w
                          mul_sat r5.xyz, r2.y, r5  // Blend::blendColor<0,1,2>

#line 340
                          add r2.yzw, r3.xxyz, -c5.y
                          mul r6.xyz, r5, r5
                          add r7.xyz, -r3, c5.y
                          rcp r4.w, r7.x
                          mul r4.w, r4.w, r6.x
                          min r5.w, r4.w, c5.y
                          cmp r8.x, -r2_abs.y, r3.x, r5.w  // ::result<0>
                          rcp r2.y, r7.y
                          mul r2.y, r2.y, r6.y
                          min r4.w, r2.y, c5.y
                          cmp r8.y, -r2_abs.z, r3.y, r4.w  // ::result<1>
                          rcp r2.y, r7.z
                          mul r2.y, r2.y, r6.z
                          min r4.w, r2.y, c5.y
                          cmp r8.z, -r2_abs.w, r3.z, r4.w  // ::result<2>

#line 343
                          lrp r4.xyz, r1.w, r8, r3  // ::result<0,1,2>
                        else
                          if_eq r2.x, c49.z

#line 349
                            rcp r2.y, r1.w
                            mul_sat r5.xyz, r2.y, r5  // Blend::blendColor<0,1,2>

#line 366
                            add r2.yzw, -r5.xxyz, -c3.y
                            add r6.xyz, -r3, c5.y
                            add r7.xyz, r5, c3.y
                            mad r7.xyz, r7, -c5_abs.z, c5_abs.y
                            mad r6.xyz, r6, -r7, c5.y  // ::result<0,1,2>

#line 358
                            dp2add r4.w, r3.x, r5.x, c3.x  // ::result<0>
                            cmp r7.x, r2.y, r4.w, r6.x  // ::result<0>

#line 364
                            dp2add r2.y, r3.y, r5.y, c3.x  // ::result<1>
                            cmp r7.y, r2.z, r2.y, r6.y  // ::result<1>

#line 370
                            dp2add r2.y, r3.z, r5.z, c3.x  // ::result<2>
                            cmp r7.z, r2.w, r2.y, r6.z  // ::result<2>

#line 373
                            lrp r4.xyz, r1.w, r7, r3  // ::result<0,1,2>
                          else
                            if_eq r2.x, c49.w

#line 379
                              rcp r2.y, r1.w
                              mul_sat r5.xyz, r2.y, r5  // Blend::blendColor<0,1,2>

#line 384
                              add r2.yzw, r5.xxyz, c3.y
                              add r6.xyz, r5, r5
                              add r7.xyz, -r3, c5.y
                              rcp r4.w, r6.x
                              mad r4.w, r7.x, -r4.w, c5.y
                              max r5.w, r4.w, c3.x
                              cmp r4.w, -r6.x, r6.x, r5.w
                              add r8.xyz, r2.yzww, r2.yzww
                              mad r9.xyz, r2.yzww, -c5.z, -c5.y
                              mad r10.xyz, r2.yzww, -c5_abs.z, c5_abs.y
                              rcp r5.w, r10.x
                              mul r5.w, r3.x, r5.w
                              min r6.x, r5.w, c5.y
                              cmp r5.w, r9.x, r8.x, r6.x
                              cmp r2.y, r2.y, r5.w, r4.w
                              add r2.y, r2.y, c3.y
                              cmp r11.x, r2.y, c5.y, c5.x  // ::result<0>
                              rcp r2.y, r6.y
                              mad r2.y, r7.y, -r2.y, c5.y
                              max r4.w, r2.y, c3.x
                              cmp r2.y, -r6.y, r6.y, r4.w
                              rcp r4.w, r10.y
                              mul r4.w, r3.y, r4.w
                              min r5.w, r4.w, c5.y
                              cmp r4.w, r9.y, r8.y, r5.w
                              cmp r2.y, r2.z, r4.w, r2.y
                              add r2.y, r2.y, c3.y
                              cmp r11.y, r2.y, c5.y, c5.x  // ::result<1>
                              rcp r2.y, r6.z
                              mad r2.y, r7.z, -r2.y, c5.y
                              max r4.w, r2.y, c3.x
                              cmp r2.y, -r6.z, r6.z, r4.w
                              rcp r2.z, r10.z
                              mul r2.z, r2.z, r3.z
                              min r4.w, r2.z, c5.y
                              cmp r2.z, r9.z, r8.z, r4.w
                              cmp r2.y, r2.w, r2.z, r2.y
                              add r2.y, r2.y, c3.y
                              cmp r11.z, r2.y, c5.y, c5.x  // ::result<2>

#line 387
                              lrp r4.xyz, r1.w, r11, r3  // ::result<0,1,2>
                            else
                              if_eq r2.x, c50.x

#line 393
                                rcp r2.y, r1.w
                                mul_sat r5.xyz, r2.y, r5  // Blend::blendColor<0,1,2>

#line 148
                                add r2.y, -r3.y, r3.x
                                cmp r2.yz, r2.y, r3.xyxw, r3.xxyw
                                min r4.w, r3.z, r2.y  // ::fmin<0>
                                max r5.w, r2.z, r3.z  // ::fmax<0>
                                add r2.y, -r4.w, r5.w  // ::delta<0>
                                add r2.z, r4.w, r5.w  // ::maxplusmin<0>

#line 154
                                mul r6.xyz, r2.z, -c3.y  // ::hsl<2,2,2>

#line 167
                                add r2.w, r2.z, -c5.y
                                rcp r4.w, r2.z
                                mul r4.w, r2.y, r4.w  // ::hsl<1>
                                add r5.w, -r2.z, -c5.z
                                rcp r5.w, r5.w
                                mul r5.w, r2.y, r5.w  // ::hsl<1>
                                cmp r4.w, r2.w, r5.w, r4.w  // ::hsl<1>

#line 183
                                cmp r2.y, -r2_abs.y, c3.x, r4.w  // ::hsl<1>

#line 192
                                if_eq r2.y, c3.x

#line 195
                                else

#line 175
                                  add r7.xyz, -r5.xzyw, r5.zyxw

#line 149
                                  cmp r8.xy, r7.z, r5.yxzw, r5
                                  min r4.w, r5.z, r8.x  // ::fmin<0>
                                  max r6.w, r8.y, r5.z  // ::fmax<0>
                                  add r4.w, -r4.w, r6.w  // ::delta<0>

#line 174
                                  add r8.xy, r5, -r6.w
                                  rcp r5.w, r4.w

#line 177
                                  mul r6.w, r5.w, r7.y  // ::hsl<0>
                                  mad r7.xy, r7.xzzw, r5.w, c43  // ::hsl<0,0>
                                  cmp r5.w, -r8_abs.y, r7.x, r7.y  // ::hsl<0>
                                  cmp r5.w, -r8_abs.x, r6.w, r5.w  // ::hsl<0>
                                  mul r6.w, r5.w, c42.w  // ::hsl<0>

#line 182
                                  mad r7.x, r5.w, c43.z, c43.w  // ::hsl<0>
                                  cmp r5.w, r5.w, r6.w, r7.x  // ::hsl<0>
                                  cmp r4.w, -r4_abs.w, c3.x, r5.w  // ::hsl<0>

#line 200
                                  add r5.w, r2.y, c5.y
                                  mul r5.w, r5.w, r6.z  // ::temp2<0>
                                  mad r6.w, r2.z, -c3.y, r2.y
                                  mad r2.y, r2.y, -r6.z, r6.w  // ::temp2<0>
                                  cmp r2.y, r2.w, r2.y, r5.w  // ::temp2<0>
                                  add r2.z, -r2.y, r2.z  // ::temp1<0>

#line 124
                                  add r7, r4.w, c44.yzwx  // GetHue::temp3<0,0,0,0>
                                  add r2.w, -r7.x, c5.y
                                  cmp r2.w, r2.w, r7.x, r7.z  // GetHue::temp3<0>
                                  cmp r2.w, r7.x, r2.w, r7.y  // GetHue::temp3<0>

#line 131
                                  add r5.w, -r2.z, r2.y
                                  mul r6.w, r5.w, c45.x
                                  mad r7.x, r6.w, r2.w, r2.z  // ::rgbComponent<0>

#line 134
                                  add r8.xyz, r2.w, c45.yzww
                                  add r2.w, -r2.w, -c45.w
                                  mul r2.w, r2.w, r5.w
                                  mad r2.w, r2.w, c45.x, r2.z  // ::rgbComponent<0>
                                  cmp r2.w, r8.z, r2.z, r2.w  // ::rgbComponent<0>
                                  cmp r2.w, r8.y, r2.w, r2.y  // ::rgbComponent<0>
                                  cmp r6.x, r8.x, r2.w, r7.x  // ::rgbComponent<0>

#line 125
                                  add r2.w, -r4.w, c5.y
                                  add r8, r4.w, -c44.xywz  // GetHue::temp3<0,0,0,0>
                                  cmp r2.w, r2.w, r4.w, r8.x  // GetHue::temp3<0>
                                  cmp r2.w, r4.w, r2.w, r7.w  // GetHue::temp3<0>

#line 131
                                  mad r4.w, r6.w, r2.w, r2.z  // ::rgbComponent<0>

#line 134
                                  add r7.xyz, r2.w, c45.yzww
                                  add r2.w, -r2.w, -c45.w
                                  mul r2.w, r2.w, r5.w
                                  mad r2.w, r2.w, c45.x, r2.z  // ::rgbComponent<0>
                                  cmp r2.w, r7.z, r2.z, r2.w  // ::rgbComponent<0>
                                  cmp r2.w, r7.y, r2.w, r2.y  // ::rgbComponent<0>
                                  cmp r6.y, r7.x, r2.w, r4.w  // ::rgbComponent<0>

#line 125
                                  add r2.w, -r8.y, c5.y
                                  cmp r2.w, r2.w, r8.y, r8.w  // GetHue::temp3<0>
                                  cmp r2.w, r8.y, r2.w, r8.z  // GetHue::temp3<0>

#line 131
                                  mad r4.w, r6.w, r2.w, r2.z  // ::rgbComponent<0>

#line 134
                                  add r7.xyz, r2.w, c45.yzww
                                  add r2.w, -r2.w, -c45.w
                                  mul r2.w, r2.w, r5.w
                                  mad r2.w, r2.w, c45.x, r2.z  // ::rgbComponent<0>
                                  cmp r2.z, r7.z, r2.z, r2.w  // ::rgbComponent<0>
                                  cmp r2.y, r7.y, r2.z, r2.y  // ::rgbComponent<0>
                                  cmp r6.z, r7.x, r2.y, r4.w  // ::rgbComponent<0>

#line 209
                                endif

#line 400
                                lrp r4.xyz, r1.w, r6, r3  // ::result<0,1,2>
                              else
                                if_eq r2.x, c50.y

#line 406
                                  rcp r2.y, r1.w
                                  mul_sat r5.xyz, r2.y, r5  // Blend::blendColor<0,1,2>

#line 425
                                  max r2.yzw, r3.xxyz, r5.xxyz  // ::result<0,1,2>

#line 428
                                  lrp r4.xyz, r1.w, r2.yzww, r3  // ::result<0,1,2>
                                else
                                  if_eq r2.x, c50.z

#line 434
                                    rcp r2.y, r1.w
                                    mul_sat r5.xyz, r2.y, r5  // Blend::blendColor<0,1,2>

#line 438
                                    add r2.yzw, r3.xxyz, r5.xxyz
                                    add_sat r2.yzw, r2, -c5.y  // ::result<0,1,2>

#line 441
                                    lrp r4.xyz, r1.w, r2.yzww, r3  // ::result<0,1,2>
                                  else
                                    if_eq r2.x, c50.w

#line 447
                                      rcp r2.y, r1.w
                                      mul_sat r5.xyz, r2.y, r5  // Blend::blendColor<0,1,2>

#line 451
                                      add r2.yzw, r3.xxyz, r5.xxyz  // ::result<0,1,2>

#line 454
                                      lrp r4.xyz, r1.w, r2.yzww, r3  // ::result<0,1,2>
                                    else
                                      if_eq r2.x, c51.x

#line 460
                                        rcp r2.y, r1.w
                                        mul_sat r5.xyz, r2.y, r5  // Blend::blendColor<0,1,2>

#line 477
                                        add r2.yzw, -r5.xxyz, -c3.y
                                        add r6.xyz, r5, c3.y
                                        mad r6.xyz, r6, -c5.z, r3  // ::result<0,1,2>
                                        mad r7.xyz, r5, -c5.z, r3
                                        add r7.xyz, r7, -c5.y  // ::result<0,1,2>
                                        cmp r2.yzw, r2, r7.xxyz, r6.xxyz  // ::result<0,1,2>

#line 484
                                        lrp r4.xyz, r1.w, r2.yzww, r3  // ::result<0,1,2>
                                      else
                                        if_eq r2.x, c51.y

#line 490
                                          rcp r2.y, r1.w
                                          mul_sat r5.xyz, r2.y, r5  // Blend::blendColor<0,1,2>

#line 175
                                          add r2.yzw, -r3.xxzy, r3.xzyx

#line 149
                                          cmp r6.xy, r2.w, r3.yxzw, r3
                                          min r4.w, r3.z, r6.x  // ::fmin<0>
                                          max r5.w, r6.y, r3.z  // ::fmax<0>
                                          add r6.x, -r4.w, r5.w  // ::delta<0>
                                          add r4.w, r4.w, r5.w  // ::maxplusmin<0>

#line 167
                                          add r6.y, r4.w, -c5.y
                                          rcp r6.z, r4.w
                                          mul r6.z, r6.z, r6.x  // ::hsl<1>
                                          add r4.w, -r4.w, -c5.z
                                          rcp r4.w, r4.w
                                          mul r4.w, r4.w, r6.x  // ::hsl<1>
                                          cmp r7.x, r6.y, r4.w, r6.z  // ::hsl<1>

#line 174
                                          add r6.yz, r3.xxyw, -r5.w
                                          rcp r4.w, r6.x

#line 177
                                          mul r2.z, r2.z, r4.w  // ::hsl<0>
                                          mad r2.yw, r2, r4.w, c43.xxzy  // ::hsl<0,0>
                                          cmp r2.y, -r6_abs.z, r2.y, r2.w  // ::hsl<0>
                                          cmp r2.y, -r6_abs.y, r2.z, r2.y  // ::hsl<0>
                                          mul r2.z, r2.y, c42.w  // ::hsl<0>

#line 182
                                          mad r2.w, r2.y, c43.z, c43.w  // ::hsl<0>
                                          cmp r7.yzw, r2.y, r2.z, r2.w  // ::hsl<0,0,0>
                                          cmp r6, -r6_abs.x, c3.x, r7  // ::hsl<1,0,0,0>

#line 148
                                          add r2.y, -r5.y, r5.x
                                          cmp r2.yz, r2.y, r5.xyxw, r5.xxyw
                                          min r4.w, r5.z, r2.y  // ::fmin<0>
                                          max r7.x, r2.z, r5.z  // ::fmax<0>
                                          add r2.y, r4.w, r7.x  // ::maxplusmin<0>

#line 154
                                          mul r7.xyz, r2.y, -c3.y  // ::hsl<2,2,2>

#line 192
                                          if_eq r6.x, c3.x

#line 195
                                          else

#line 199
                                            add r2.z, r2.y, -c5.y

#line 126
                                            add r8, r6, c44  // GetHue::temp3<0,0,0>

#line 200
                                            mul r2.w, r7.z, r8.x  // ::temp2<0>
                                            mad r4.w, r2.y, -c3.y, r6.x
                                            mad r4.w, r6.x, -r7.z, r4.w  // ::temp2<0>
                                            cmp r2.z, r2.z, r4.w, r2.w  // ::temp2<0>
                                            add r2.y, -r2.z, r2.y  // ::temp1<0>

#line 125
                                            add r2.w, -r8.y, c5.y
                                            cmp r2.w, r2.w, r8.y, r8.w  // GetHue::temp3<0>
                                            cmp r2.w, r8.y, r2.w, r8.z  // GetHue::temp3<0>

#line 131
                                            add r4.w, -r2.y, r2.z
                                            mul r5.w, r4.w, c45.x
                                            mad r6.x, r5.w, r2.w, r2.y  // ::rgbComponent<0>

#line 134
                                            add r8.xyz, r2.w, c45.yzww
                                            add r2.w, -r2.w, -c45.w
                                            mul r2.w, r2.w, r4.w
                                            mad r2.w, r2.w, c45.x, r2.y  // ::rgbComponent<0>
                                            cmp r2.w, r8.z, r2.y, r2.w  // ::rgbComponent<0>
                                            cmp r2.w, r8.y, r2.w, r2.z  // ::rgbComponent<0>
                                            cmp r7.x, r8.x, r2.w, r6.x  // ::rgbComponent<0>

#line 125
                                            add r2.w, -r6.w, c5.y
                                            add r8, r6.w, c48  // GetHue::temp3<0,0,0,0>
                                            cmp r2.w, r2.w, r6.w, r8.y  // GetHue::temp3<0>
                                            cmp r2.w, r6.w, r2.w, r8.x  // GetHue::temp3<0>

#line 131
                                            mad r6.x, r5.w, r2.w, r2.y  // ::rgbComponent<0>

#line 134
                                            add r9.xyz, r2.w, c45.yzww
                                            add r2.w, -r2.w, -c45.w
                                            mul r2.w, r2.w, r4.w
                                            mad r2.w, r2.w, c45.x, r2.y  // ::rgbComponent<0>
                                            cmp r2.w, r9.z, r2.y, r2.w  // ::rgbComponent<0>
                                            cmp r2.w, r9.y, r2.w, r2.z  // ::rgbComponent<0>
                                            cmp r7.y, r9.x, r2.w, r6.x  // ::rgbComponent<0>

#line 125
                                            add r2.w, -r8.z, c5.y
                                            add r6.x, r6.w, -c44.z  // GetHue::temp3<0>
                                            cmp r2.w, r2.w, r8.z, r6.x  // GetHue::temp3<0>
                                            cmp r2.w, r8.z, r2.w, r8.w  // GetHue::temp3<0>

#line 131
                                            mad r5.w, r5.w, r2.w, r2.y  // ::rgbComponent<0>

#line 134
                                            add r6.xyz, r2.w, c45.yzww
                                            add r2.w, -r2.w, -c45.w
                                            mul r2.w, r2.w, r4.w
                                            mad r2.w, r2.w, c45.x, r2.y  // ::rgbComponent<0>
                                            cmp r2.y, r6.z, r2.y, r2.w  // ::rgbComponent<0>
                                            cmp r2.y, r6.y, r2.y, r2.z  // ::rgbComponent<0>
                                            cmp r7.z, r6.x, r2.y, r5.w  // ::rgbComponent<0>

#line 209
                                          endif

#line 497
                                          lrp r4.xyz, r1.w, r7, r3  // ::result<0,1,2>
                                        else
                                          if_eq r2.x, c51.z

#line 503
                                            rcp r2.y, r1.w
                                            mul_sat r5.xyz, r2.y, r5  // Blend::blendColor<0,1,2>

#line 507
                                            mul r2.yzw, r3.xxyz, r5.xxyz  // ::result<0,1,2>

#line 510
                                            lrp r4.xyz, r1.w, r2.yzww, r3  // ::result<0,1,2>
                                          else
                                            if_eq r2.x, c51.w

#line 516
                                              rcp r2.y, r1.w
                                              mul_sat r5.xyz, r2.y, r5  // Blend::blendColor<0,1,2>

#line 519
                                              add r2.yzw, -r3.xxyz, c5.y
                                              add r2.yzw, -r5.xxyz, r2
                                              add r2.yzw, -r2_abs, c5.y  // ::result<0,1,2>

#line 522
                                              lrp r4.xyz, r1.w, r2.yzww, r3  // ::result<0,1,2>
                                            else
                                              if_eq r2.x, c47.x
                                                add r2.y, -r1.w, c5.y
                                                add r2.z, -r3.w, c5.y
                                                mad r2.z, r2.y, -r2.z, c5.y  // ::result<3>

#line 530
                                                mul r6.xyz, r1.w, r5
                                                rcp r2.z, r2.z
                                                mul r7.xyz, r3.w, r3
                                                mul r7.xyz, r2.y, r7
                                                mul r7.xyz, r2.z, r7
                                                mad r4.xyz, r6, r2.z, r7  // ::result<0,1,2>
                                              else
                                                add r2.x, r2.x, c47.y

#line 536
                                                rcp r2.y, r1.w
                                                mul_sat r2.yzw, r2.y, r5.xxyz  // Blend::blendColor<0,1,2>

#line 554
                                                add r6.xyz, -r3, -c3.y
                                                add r7.xyz, r3, c3.y
                                                mad r7.xyz, r7, -c5_abs.z, c5_abs.y
                                                add r8.xyz, -r2.yzww, c5.y
                                                mad r7.xyz, r7, -r8, c5.y  // ::result<0,1,2>

#line 546
                                                dp2add r3.w, r2.y, r3.x, c3.x  // ::result<0>
                                                cmp r8.x, r6.x, r3.w, r7.x  // ::result<0>

#line 552
                                                dp2add r3.w, r2.z, r3.y, c3.x  // ::result<1>
                                                cmp r8.y, r6.y, r3.w, r7.y  // ::result<1>

#line 558
                                                dp2add r3.w, r2.w, r3.z, c3.x  // ::result<2>
                                                cmp r8.z, r6.z, r3.w, r7.z  // ::result<2>

#line 561
                                                lrp r4.xyz, r1.w, r8, r3  // ::result<0,1,2>
                                                cmp r5.xyz, -r2_abs.x, r2.yzww, r5  // Blend::blendColor<0,1,2>
                                              endif
                                            endif
                                          endif
                                        endif
                                      endif
                                    endif
                                  endif
                                endif
                              endif
                            endif
                          endif
                        endif
                      endif
                    endif
                  endif
                endif
              endif
            endif
          endif
          mov r2.x, c0.x  // ::BlendMode<0>
          if_eq r2.x, c47.z

#line 567
            rcp r2.y, r1.w
            mul_sat r2.yzw, r2.y, r5.xxyz  // Blend::blendColor<0,1,2>

#line 570
            min r6.xyz, r2.yzww, r3
            max r7.xyz, r3, r2.yzww
            add r2.yzw, r6.xxyz, -r7.xxyz
            add r2.yzw, r2, c5.y  // ::result<0,1,2>

#line 573
            lrp r4.xyz, r1.w, r2.yzww, r3  // ::result<0,1,2>
          else
            if_eq r2.x, c47.w

#line 579
              rcp r2.y, r1.w
              mul_sat r2.yzw, r2.y, r5.xxyz  // Blend::blendColor<0,1,2>

#line 596
              add r6.xyz, -r2.yzww, -c3.y
              add r7.xyz, r2.yzww, c3.y
              add r7.xyz, r7, r7
              max r8.xyz, r3, r7  // ::result<0,1,2>
              add r2.yzw, r2, r2
              min r7.xyz, r2.yzww, r3  // ::result<0,1,2>
              cmp r2.yzw, r6.xxyz, r7.xxyz, r8.xxyz  // ::result<0,1,2>

#line 603
              lrp r4.xyz, r1.w, r2.yzww, r3  // ::result<0,1,2>
            else
              if_eq r2.x, c52.x

#line 609
                rcp r2.y, r1.w
                mul_sat r2.yzw, r2.y, r5.xxyz  // Blend::blendColor<0,1,2>

#line 614
                add r6.xyz, r2.yzww, -c5.y
                mul r7.xyz, r3, r3
                add r8.xyz, -r2.yzww, c5.y
                rcp r3.w, r8.x
                mul r3.w, r3.w, r7.x
                min r4.w, r3.w, c5.y
                cmp r9.x, r6.x, r2.y, r4.w  // ::result<0>
                rcp r2.y, r8.y
                mul r2.y, r2.y, r7.y
                min r3.w, r2.y, c5.y
                cmp r9.y, r6.y, r2.z, r3.w  // ::result<1>
                rcp r2.y, r8.z
                mul r2.y, r2.y, r7.z
                min r3.w, r2.y, c5.y
                cmp r9.z, r6.z, r2.w, r3.w  // ::result<2>

#line 617
                lrp r4.xyz, r1.w, r9, r3  // ::result<0,1,2>
              else

#line 623
                if_eq r2.x, c52.y

#line 626
                  rcp r2.y, r1.w
                  mul_sat r2.yzw, r2.y, r5.xxyz  // Blend::blendColor<0,1,2>

#line 148
                  add r3.w, -r3.y, r3.x
                  cmp r6.xy, r3.w, r3.yxzw, r3
                  min r4.w, r3.z, r6.x  // ::fmin<0>
                  max r5.w, r6.y, r3.z  // ::fmax<0>
                  add r6.x, r4.w, r5.w  // ::maxplusmin<0>

#line 154
                  mul r6.yzw, r6.x, -c3.y  // ::hsl<2,2,2>

#line 148
                  add r7.x, -r2.z, r2.y
                  cmp r2.yz, r7.x, r2.xzyw, r2
                  min r7.x, r2.w, r2.y  // ::fmin<0>
                  max r7.y, r2.z, r2.w  // ::fmax<0>
                  add r2.y, -r7.x, r7.y  // ::delta<0>
                  add r2.z, r7.x, r7.y  // ::maxplusmin<0>

#line 167
                  add r2.w, r2.z, -c5.y
                  rcp r7.x, r2.z
                  mul r7.x, r2.y, r7.x  // ::hsl<1>
                  add r2.z, -r2.z, -c5.z
                  rcp r2.z, r2.z
                  mul r2.z, r2.z, r2.y  // ::hsl<1>
                  cmp r2.z, r2.w, r2.z, r7.x  // ::hsl<1>

#line 183
                  cmp r2.y, -r2_abs.y, c3.x, r2.z  // ::hsl<1>

#line 192
                  if_eq r2.y, c3.x

#line 195
                  else

#line 150
                    add r2.z, -r4.w, r5.w  // ::delta<0>

#line 174
                    add r7.xy, r3, -r5.w
                    add r2.w, -r3.z, r3.y
                    rcp r4.w, r2.z
                    mul r2.w, r2.w, r4.w  // ::hsl<0>
                    add r5.w, -r3.x, r3.z
                    mad r5.w, r5.w, r4.w, -c5.z  // ::hsl<0>
                    mad r3.w, r3.w, r4.w, c43.y  // ::hsl<0>
                    cmp r3.w, -r7_abs.y, r5.w, r3.w  // ::hsl<0>
                    cmp r2.w, -r7_abs.x, r2.w, r3.w  // ::hsl<0>
                    mul r3.w, r2.w, c42.w  // ::hsl<0>

#line 182
                    mad r4.w, r2.w, c43.z, c43.w  // ::hsl<0>
                    cmp r2.w, r2.w, r3.w, r4.w  // ::hsl<0>
                    cmp r2.z, -r2_abs.z, c3.x, r2.w  // ::hsl<0>

#line 199
                    add r2.w, r6.x, -c5.y
                    add r3.w, r2.y, c5.y
                    mul r3.w, r3.w, r6.w  // ::temp2<0>
                    mad r4.w, r6.x, -c3.y, r2.y
                    mad r2.y, r2.y, -r6.w, r4.w  // ::temp2<0>
                    cmp r2.y, r2.w, r2.y, r3.w  // ::temp2<0>
                    add r2.w, -r2.y, r6.x  // ::temp1<0>

#line 124
                    add r7, r2.z, c44.yzwx  // GetHue::temp3<0,0,0,0>
                    add r3.w, -r7.x, c5.y
                    cmp r3.w, r3.w, r7.x, r7.z  // GetHue::temp3<0>
                    cmp r3.w, r7.x, r3.w, r7.y  // GetHue::temp3<0>

#line 131
                    add r4.w, -r2.w, r2.y
                    mul r5.w, r4.w, c45.x
                    mad r6.x, r5.w, r3.w, r2.w  // ::rgbComponent<0>

#line 134
                    add r7.xyz, r3.w, c45.yzww
                    add r3.w, -r3.w, -c45.w
                    mul r3.w, r3.w, r4.w
                    mad r3.w, r3.w, c45.x, r2.w  // ::rgbComponent<0>
                    cmp r3.w, r7.z, r2.w, r3.w  // ::rgbComponent<0>
                    cmp r3.w, r7.y, r3.w, r2.y  // ::rgbComponent<0>
                    cmp r6.y, r7.x, r3.w, r6.x  // ::rgbComponent<0>

#line 125
                    add r3.w, -r2.z, c5.y
                    add r8, r2.z, -c44.xywz  // GetHue::temp3<0,0,0,0>
                    cmp r3.w, r3.w, r2.z, r8.x  // GetHue::temp3<0>
                    cmp r2.z, r2.z, r3.w, r7.w  // GetHue::temp3<0>

#line 131
                    mad r3.w, r5.w, r2.z, r2.w  // ::rgbComponent<0>

#line 134
                    add r7.xyz, r2.z, c45.yzww
                    add r2.z, -r2.z, -c45.w
                    mul r2.z, r2.z, r4.w
                    mad r2.z, r2.z, c45.x, r2.w  // ::rgbComponent<0>
                    cmp r2.z, r7.z, r2.w, r2.z  // ::rgbComponent<0>
                    cmp r2.z, r7.y, r2.z, r2.y  // ::rgbComponent<0>
                    cmp r6.z, r7.x, r2.z, r3.w  // ::rgbComponent<0>

#line 125
                    add r2.z, -r8.y, c5.y
                    cmp r2.z, r2.z, r8.y, r8.w  // GetHue::temp3<0>
                    cmp r2.z, r8.y, r2.z, r8.z  // GetHue::temp3<0>

#line 131
                    mad r3.w, r5.w, r2.z, r2.w  // ::rgbComponent<0>

#line 134
                    add r7.xyz, r2.z, c45.yzww
                    add r2.z, -r2.z, -c45.w
                    mul r2.z, r2.z, r4.w
                    mad r2.z, r2.z, c45.x, r2.w  // ::rgbComponent<0>
                    cmp r2.z, r7.z, r2.w, r2.z  // ::rgbComponent<0>
                    cmp r2.y, r7.y, r2.z, r2.y  // ::rgbComponent<0>
                    cmp r6.w, r7.x, r2.y, r3.w  // ::rgbComponent<0>

#line 209
                  endif

#line 633
                  lrp r4.xyz, r1.w, r6.yzww, r3  // ::result<0,1,2>
                else
                  if_eq r2.x, c52.z

#line 639
                    rcp r2.y, r1.w
                    mul_sat r2.yzw, r2.y, r5.xxyz  // Blend::blendColor<0,1,2>

#line 643
                    add r6.xyz, -r3, c5.y
                    add r2.yzw, -r2, c5.y
                    mad r2.yzw, r6.xxyz, -r2, c5.y  // ::result<0,1,2>

#line 646
                    lrp r4.xyz, r1.w, r2.yzww, r3  // ::result<0,1,2>
                  else
                    if_eq r2.x, c52.w

#line 652
                      rcp r2.y, r1.w
                      mul_sat r2.yzw, r2.y, r5.xxyz  // Blend::blendColor<0,1,2>

#line 657
                      add r6.xyz, r2.yzww, c3.y
                      add r7.xyz, r3, r3
                      mul r8.xyz, r3, r3
                      mad r9.xyz, r2.yzww, -c5_abs.z, c5_abs.y
                      mul r8.xyz, r8, r9
                      mad r8.xyz, r7, r2.yzww, r8
                      rsq r3.w, r3.x
                      rcp r3.w, r3.w
                      mad r9.xyz, r2.yzww, -c5.z, -c5.y
                      add r2.yzw, -r2, c5.y
                      mul r2.yzw, r2, r7.xxyz
                      mad r2.y, r3.w, r9.x, r2.y
                      cmp r7.x, r6.x, r2.y, r8.x  // ::result<0>
                      rsq r2.y, r3.y
                      rcp r2.y, r2.y
                      mad r2.y, r2.y, r9.y, r2.z
                      cmp r7.y, r6.y, r2.y, r8.y  // ::result<1>
                      rsq r2.y, r3.z
                      rcp r2.y, r2.y
                      mad r2.y, r2.y, r9.z, r2.w
                      cmp r7.z, r6.z, r2.y, r8.z  // ::result<2>

#line 660
                      lrp r4.xyz, r1.w, r7, r3  // ::result<0,1,2>
                    else
                      if_eq r2.x, c46.x

#line 666
                        rcp r2.x, r1.w
                        mul_sat r2.xyz, r2.x, r5  // Blend::blendColor<0,1,2>

#line 671
                        add r5.xyz, r2, c3.y
                        add r2.xyz, r2, r2
                        add r6.xyz, -r3, c5.y
                        rcp r2.w, r2.x
                        mad r2.w, r6.x, -r2.w, c5.y
                        max r3.w, r2.w, c3.x
                        cmp r2.x, -r2.x, r2.x, r3.w
                        add r7.xyz, r5, r5
                        mad r8.xyz, r5, -c5.z, -c5.y
                        mad r9.xyz, r5, -c5_abs.z, c5_abs.y
                        rcp r2.w, r9.x
                        mul r2.w, r2.w, r3.x
                        min r3.w, r2.w, c5.y
                        cmp r2.w, r8.x, r7.x, r3.w
                        cmp r10.x, r5.x, r2.w, r2.x  // ::result<0>
                        rcp r2.x, r2.y
                        mad r2.x, r6.y, -r2.x, c5.y
                        max r3.w, r2.x, c3.x
                        cmp r2.x, -r2.y, r2.y, r3.w
                        rcp r2.y, r9.y
                        mul r2.y, r2.y, r3.y
                        min r3.w, r2.y, c5.y
                        cmp r2.y, r8.y, r7.y, r3.w
                        cmp r10.y, r5.y, r2.y, r2.x  // ::result<1>
                        rcp r2.x, r2.z
                        mad r2.x, r6.z, -r2.x, c5.y
                        max r3.w, r2.x, c3.x
                        cmp r2.x, -r2.z, r2.z, r3.w
                        rcp r2.y, r9.z
                        mul r2.y, r2.y, r3.z
                        min r3.w, r2.y, c5.y
                        cmp r2.y, r8.z, r7.z, r3.w
                        cmp r10.z, r5.z, r2.y, r2.x  // ::result<2>

#line 674
                        lrp r4.xyz, r1.w, r10, r3  // ::result<0,1,2>
                      endif
                    endif
                  endif
                endif
              endif
            endif
          endif

#line 888
        else
          if_eq c8.x, -r1.z

#line 848
            add r2.xy, -v0, v0.yxzw

#line 855
            add r3, c46.zwzw, -v0.yyxx
            add r2.zw, r3.xyyw, -v0.xyxy
            add r5.xy, v0.yxzw, v0.yxzw  // ::t<0,0>

#line 849
            cmp r2.xy, r2, -c5.y, -c5.x

#line 856
            cmp r2.zw, r2, r2.xyyx, c3.x

#line 842
            cmp r1.w, r2.z, c3.x, r5.x  // ::t<0>

#line 862
            add r3.yw, -r3, v0.xxzy
            add r5.xz, c3.y, v0.yyxw
            mad r5.xz, r5, -c5_abs.z, c5_abs.y  // ::t<0,0>
            cmp r2.xy, r3.ywzw, r2, c3.x

#line 849
            cmp r2.x, r2.x, c3.x, r5.x  // ::t<0>
            cmp r1.w, r3.x, r1.w, r2.x  // ::t<0>

#line 856
            cmp r2.x, r2.w, r1.w, r5.y  // ::t<0>

#line 863
            cmp r1.w, r2.y, r1.w, r5.z  // ::t<0>
            cmp r1.w, r3.z, r2.x, r1.w  // ::t<0>

#line 683
            add r2.x, r1.y, -c7.x

#line 696
            if_eq c41.x, r1.x

#line 703
              mov r3, c3.x  // ::color1<0,1,2,3>
              mov r2.yzw, c3.x  // ::color2<0,1,2>
              mov r5.x, c3.x  // ::offset1<0>
              mov r5.y, c5.y  // ::offset2<0>
            else
              if_eq c41.x, r1.y

#line 711
                mov r3, c9  // ::color1<0,1,2,3>
                mov r2.yzw, c9.xxyz  // ::color2<0,1,2>
                mov r5.x, c3.x  // ::offset1<0>
                mov r5.y, c5.y  // ::offset2<0>
              else
                if_eq c41.x, -r1.z

#line 719
                  mov r3, c9  // ::color1<0,1,2,3>
                  mov r2.yzw, c11.xxyz  // ::color2<0,1,2>
                  mov r5.x, c3.x  // ::offset1<0>
                  mov r5.y, c5.y  // ::offset2<0>
                else

#line 722
                  mad r4.w, r1.w, r2.x, -c10.x
                  mad r5.z, r1.w, r2.x, -c12.x
                  cmp r5.w, r5.z, c5.x, c5.y
                  cmp r4.w, r4.w, r5.w, c3.x
                  if_ne r4.w, -r4.w

#line 726
                    mov r3, c9  // ::color1<0,1,2,3>
                    mov r2.yzw, c11.xxyz  // ::color2<0,1,2>
                    mov r5.x, c10.x  // ::offset1<0>
                    mov r5.y, c12.x  // ::offset2<0>
                  else
                    mad r4.w, r1.w, r2.x, -c14.x
                    cmp r5.w, r4.w, c5.x, c5.y
                    cmp r5.z, r5.z, r5.w, c3.x
                    if_ne r5.z, -r5.z

#line 731
                      mov r3, c11  // ::color1<0,1,2,3>
                      mov r2.yzw, c13.xxyz  // ::color2<0,1,2>
                      mov r5.x, c12.x  // ::offset1<0>
                      mov r5.y, c14.x  // ::offset2<0>
                    else
                      mad r5.z, r1.w, r2.x, -c16.x
                      cmp r5.w, r5.z, c5.x, c5.y
                      cmp r4.w, r4.w, r5.w, c3.x
                      if_ne r4.w, -r4.w

#line 736
                        mov r3, c13  // ::color1<0,1,2,3>
                        mov r2.yzw, c15.xxyz  // ::color2<0,1,2>
                        mov r5.x, c14.x  // ::offset1<0>
                        mov r5.y, c16.x  // ::offset2<0>
                      else
                        mad r4.w, r1.w, r2.x, -c18.x
                        cmp r5.w, r4.w, c5.x, c5.y
                        cmp r5.z, r5.z, r5.w, c3.x
                        if_ne r5.z, -r5.z

#line 741
                          mov r3, c15  // ::color1<0,1,2,3>
                          mov r2.yzw, c17.xxyz  // ::color2<0,1,2>
                          mov r5.x, c16.x  // ::offset1<0>
                          mov r5.y, c18.x  // ::offset2<0>
                        else
                          mad r5.z, r1.w, r2.x, -c20.x
                          cmp r5.w, r5.z, c5.x, c5.y
                          cmp r4.w, r4.w, r5.w, c3.x
                          if_ne r4.w, -r4.w

#line 746
                            mov r3, c17  // ::color1<0,1,2,3>
                            mov r2.yzw, c19.xxyz  // ::color2<0,1,2>
                            mov r5.x, c18.x  // ::offset1<0>
                            mov r5.y, c20.x  // ::offset2<0>
                          else
                            mad r4.w, r1.w, r2.x, -c22.x
                            cmp r5.w, r4.w, c5.x, c5.y
                            cmp r5.z, r5.z, r5.w, c3.x
                            if_ne r5.z, -r5.z

#line 751
                              mov r3, c19  // ::color1<0,1,2,3>
                              mov r2.yzw, c21.xxyz  // ::color2<0,1,2>
                              mov r5.x, c20.x  // ::offset1<0>
                              mov r5.y, c22.x  // ::offset2<0>
                            else
                              mad r5.z, r1.w, r2.x, -c24.x
                              cmp r5.w, r5.z, c5.x, c5.y
                              cmp r4.w, r4.w, r5.w, c3.x
                              if_ne r4.w, -r4.w

#line 756
                                mov r3, c21  // ::color1<0,1,2,3>
                                mov r2.yzw, c23.xxyz  // ::color2<0,1,2>
                                mov r5.x, c22.x  // ::offset1<0>
                                mov r5.y, c24.x  // ::offset2<0>
                              else
                                mad r4.w, r1.w, r2.x, -c26.x

#line 762
                                mad r5.w, r1.w, r2.x, -c28.x

#line 767
                                mad r6.x, r1.w, r2.x, -c30.x

#line 772
                                mad r6.y, r1.w, r2.x, -c32.x

#line 777
                                mad r6.z, r1.w, r2.x, -c34.x

#line 782
                                mad r6.w, r1.w, r2.x, -c36.x

#line 787
                                mad r7.x, r1.w, r2.x, -c38.x

#line 796
                                cmp r7.x, r7.x, -c5.x, -c5.y
                                cmp r7.x, r6.w, r7.x, c3.x
                                mov r8, c37  // ::Color15<0,1,2,3>
                                cmp r9, r7.x, r8, c35  // ::color1<0,1,2,3>
                                cmp r7.yzw, r7.x, c39.xxyz, r8.xxyz  // ::color2<0,1,2>
                                mov r8.y, c40.x
                                mov r8.z, c36.x
                                mov r8.xw, c38.x
                                cmp r8.xy, r7.x, r8, r8.zwzw  // ::offset1<0>, ::offset2<0>
                                cmp r6.w, r6.w, -c5.x, -c5.y
                                cmp r6.w, r6.z, r6.w, c3.x
                                cmp r9, r6.w, r9, c33  // ::color1<0,1,2,3>
                                cmp r7.xyz, r6.w, r7.yzww, c35  // ::color2<0,1,2>
                                mov r10.xw, c34.x
                                mov r10.y, c36.x
                                cmp r8.xy, r6.w, r8, r10  // ::offset1<0>, ::offset2<0>
                                cmp r6.z, r6.z, -c5.x, -c5.y
                                cmp r6.z, r6.y, r6.z, c3.x
                                cmp r9, r6.z, r9, c31  // ::color1<0,1,2,3>
                                cmp r7.xyz, r6.z, r7, c33  // ::color2<0,1,2>
                                mov r10.z, c32.x
                                cmp r6.zw, r6.z, r8.xyxy, r10  // ::offset1<0>, ::offset2<0>
                                cmp r6.y, r6.y, -c5.x, -c5.y
                                cmp r6.y, r6.x, r6.y, c3.x
                                cmp r8, r6.y, r9, c29  // ::color1<0,1,2,3>
                                cmp r7.xyz, r6.y, r7, c31  // ::color2<0,1,2>
                                mov r9.xw, c30.x
                                mov r9.y, c32.x
                                cmp r6.yz, r6.y, r6.xzww, r9.xxyw  // ::offset1<0>, ::offset2<0>
                                cmp r6.x, r6.x, -c5.x, -c5.y
                                cmp r6.x, r5.w, r6.x, c3.x
                                cmp r8, r6.x, r8, c27  // ::color1<0,1,2,3>
                                cmp r7.xyz, r6.x, r7, c29  // ::color2<0,1,2>
                                mov r9.yz, c28.x
                                cmp r6.xy, r6.x, r6.yzzw, r9.zwzw  // ::offset1<0>, ::offset2<0>
                                cmp r5.w, r5.w, -c5.x, -c5.y
                                cmp r5.w, r4.w, r5.w, c3.x
                                cmp r8, r5.w, r8, c25  // ::color1<0,1,2,3>
                                cmp r7.xyz, r5.w, r7, c27  // ::color2<0,1,2>
                                mov r9.xw, c26.x
                                cmp r6.xy, r5.w, r6, r9  // ::offset1<0>, ::offset2<0>
                                cmp r4.w, r4.w, -c5.x, -c5.y
                                cmp r4.w, r5.z, r4.w, c3.x
                                cmp r3, r4.w, r8, c23  // ::color1<0,1,2,3>
                                cmp r2.yzw, r4.w, r7.xxyz, c25.xxyz  // ::color2<0,1,2>
                                mov r9.z, c24.x
                                cmp r5.xy, r4.w, r6, r9.zwzw  // ::offset1<0>, ::offset2<0>
                              endif
                            endif
                          endif
                        endif
                      endif
                    endif
                  endif
                endif
              endif
            endif
            add r4.w, -r5.x, r5.y  // ::q<0>
            mad r1.w, r1.w, r2.x, -r5.x
            rcp r2.x, r4.w
            mul r1.w, r1.w, r2.x
            cmp r1.w, -r4_abs.w, c3.x, r1.w  // ::p<0>

#line 218
            cmp r5.xyz, -r2_abs.yzww, c42.y, r2.yzww  // Blend::blendColor<0,1,2>

#line 226
            if_eq c0.x, r1.x

#line 229
              rcp r2.x, r1.w
              mul_sat r5.xyz, r2.x, r5  // Blend::blendColor<0,1,2>

#line 232
              add r2.xyz, r3, r5
              mul r2.xyz, r1.w, r2

#line 235
              add r2.w, -r1.w, c5.y
              mul r2.xyz, r2, -c3.y
              mad r4.xyz, r2.w, r3, r2  // ::result<0,1,2>
            else
              if_eq c0.x, r1.y

#line 241
                rcp r2.x, r1.w
                mul_sat r5.xyz, r2.x, r5  // Blend::blendColor<0,1,2>

#line 245
                add r2.xyz, -r3, c5.y
                rcp r6.x, r5.x
                rcp r6.y, r5.y
                rcp r6.z, r5.z
                mad_sat r2.xyz, r2, -r6, c5.y  // ::result<0,1,2>

#line 248
                lrp r4.xyz, r1.w, r2, r3  // ::result<0,1,2>
              else
                if_eq c0.x, -r1.z

#line 254
                  rcp r2.x, r1.w
                  mul_sat r5.xyz, r2.x, r5  // Blend::blendColor<0,1,2>

#line 260
                  add r2.xyz, r5, -c5.y
                  add r6.xyz, -r5, c5.y
                  rcp r2.w, r6.x
                  mul r2.w, r2.w, r3.x
                  min r4.w, r2.w, c5.y
                  cmp r7.x, r2.x, r5.x, r4.w  // ::result<0>
                  rcp r2.x, r6.y
                  mul r2.x, r2.x, r3.y
                  min r4.w, r2.x, c5.y
                  cmp r7.y, r2.y, r5.y, r4.w  // ::result<1>
                  rcp r2.x, r6.z
                  mul r2.x, r2.x, r3.z
                  min r4.w, r2.x, c5.y
                  cmp r7.z, r2.z, r5.z, r4.w  // ::result<2>

#line 263
                  lrp r4.xyz, r1.w, r7, r3  // ::result<0,1,2>
                else
                  mov r2.x, c0.x  // ::BlendMode<0>
                  if_eq r2.x, c42.z

#line 269
                    rcp r2.y, r1.w
                    mul_sat r5.xyz, r2.y, r5  // Blend::blendColor<0,1,2>

#line 175
                    add r2.yzw, -r5.xxzy, r5.xzyx

#line 149
                    cmp r6.xy, r2.w, r5.yxzw, r5
                    min r4.w, r5.z, r6.x  // ::fmin<0>
                    max r7.x, r6.y, r5.z  // ::fmax<0>
                    add r5.w, -r4.w, r7.x  // ::delta<0>
                    add r4.w, r4.w, r7.x  // ::maxplusmin<0>

#line 167
                    add r6.x, r4.w, -c5.y
                    rcp r6.y, r4.w
                    mul r6.y, r5.w, r6.y  // ::hsl<1>
                    add r4.w, -r4.w, -c5.z
                    rcp r4.w, r4.w
                    mul r4.w, r4.w, r5.w  // ::hsl<1>
                    cmp r6.x, r6.x, r4.w, r6.y  // ::hsl<1>

#line 174
                    add r7.xy, r5, -r7.x
                    rcp r4.w, r5.w

#line 177
                    mul r2.z, r2.z, r4.w  // ::hsl<0>
                    mad r2.yw, r2, r4.w, c43.xxzy  // ::hsl<0,0>
                    cmp r2.y, -r7_abs.y, r2.y, r2.w  // ::hsl<0>
                    cmp r2.y, -r7_abs.x, r2.z, r2.y  // ::hsl<0>
                    mul r2.z, r2.y, c42.w  // ::hsl<0>

#line 182
                    mad r2.w, r2.y, c43.z, c43.w  // ::hsl<0>
                    cmp r6.yzw, r2.y, r2.z, r2.w  // ::hsl<0,0,0>
                    cmp r6, -r5_abs.w, c3.x, r6  // ::hsl<1,0,0,0>

#line 148
                    add r2.y, -r3.y, r3.x
                    cmp r2.yz, r2.y, r3.xyxw, r3.xxyw
                    min r4.w, r3.z, r2.y  // ::fmin<0>
                    max r5.w, r2.z, r3.z  // ::fmax<0>
                    add r2.y, r4.w, r5.w  // ::maxplusmin<0>

#line 154
                    mul r7.xyz, r2.y, -c3.y  // ::hsl<2,2,2>

#line 192
                    if_eq r6.x, c3.x

#line 195
                    else

#line 199
                      add r2.z, r2.y, -c5.y

#line 126
                      add r8, r6, c44  // GetHue::temp3<0,0,0>

#line 200
                      mul r2.w, r7.z, r8.x  // ::temp2<0>
                      mad r4.w, r2.y, -c3.y, r6.x
                      mad r4.w, r6.x, -r7.z, r4.w  // ::temp2<0>
                      cmp r2.z, r2.z, r4.w, r2.w  // ::temp2<0>
                      add r2.y, -r2.z, r2.y  // ::temp1<0>

#line 125
                      add r2.w, -r8.y, c5.y
                      cmp r2.w, r2.w, r8.y, r8.w  // GetHue::temp3<0>
                      cmp r2.w, r8.y, r2.w, r8.z  // GetHue::temp3<0>

#line 131
                      add r4.w, -r2.y, r2.z
                      mul r5.w, r4.w, c45.x
                      mad r6.x, r5.w, r2.w, r2.y  // ::rgbComponent<0>

#line 134
                      add r8.xyz, r2.w, c45.yzww
                      add r2.w, -r2.w, -c45.w
                      mul r2.w, r2.w, r4.w
                      mad r2.w, r2.w, c45.x, r2.y  // ::rgbComponent<0>
                      cmp r2.w, r8.z, r2.y, r2.w  // ::rgbComponent<0>
                      cmp r2.w, r8.y, r2.w, r2.z  // ::rgbComponent<0>
                      cmp r7.x, r8.x, r2.w, r6.x  // ::rgbComponent<0>

#line 125
                      add r2.w, -r6.w, c5.y
                      add r8, r6.w, c48  // GetHue::temp3<0,0,0,0>
                      cmp r2.w, r2.w, r6.w, r8.y  // GetHue::temp3<0>
                      cmp r2.w, r6.w, r2.w, r8.x  // GetHue::temp3<0>

#line 131
                      mad r6.x, r5.w, r2.w, r2.y  // ::rgbComponent<0>

#line 134
                      add r9.xyz, r2.w, c45.yzww
                      add r2.w, -r2.w, -c45.w
                      mul r2.w, r2.w, r4.w
                      mad r2.w, r2.w, c45.x, r2.y  // ::rgbComponent<0>
                      cmp r2.w, r9.z, r2.y, r2.w  // ::rgbComponent<0>
                      cmp r2.w, r9.y, r2.w, r2.z  // ::rgbComponent<0>
                      cmp r7.y, r9.x, r2.w, r6.x  // ::rgbComponent<0>

#line 125
                      add r2.w, -r8.z, c5.y
                      add r6.x, r6.w, -c44.z  // GetHue::temp3<0>
                      cmp r2.w, r2.w, r8.z, r6.x  // GetHue::temp3<0>
                      cmp r2.w, r8.z, r2.w, r8.w  // GetHue::temp3<0>

#line 131
                      mad r5.w, r5.w, r2.w, r2.y  // ::rgbComponent<0>

#line 134
                      add r6.xyz, r2.w, c45.yzww
                      add r2.w, -r2.w, -c45.w
                      mul r2.w, r2.w, r4.w
                      mad r2.w, r2.w, c45.x, r2.y  // ::rgbComponent<0>
                      cmp r2.y, r6.z, r2.y, r2.w  // ::rgbComponent<0>
                      cmp r2.y, r6.y, r2.y, r2.z  // ::rgbComponent<0>
                      cmp r7.z, r6.x, r2.y, r5.w  // ::rgbComponent<0>

#line 209
                    endif

#line 276
                    lrp r4.xyz, r1.w, r7, r3  // ::result<0,1,2>
                  else
                    if_eq r2.x, c43.y

#line 282
                      rcp r2.y, r1.w
                      mul_sat r5.xyz, r2.y, r5  // Blend::blendColor<0,1,2>

#line 300
                      min r2.yzw, r3.xxyz, r5.xxyz  // ::result<0,1,2>

#line 303
                      lrp r4.xyz, r1.w, r2.yzww, r3  // ::result<0,1,2>
                    else
                      if_eq r2.x, c49.x

#line 309
                        rcp r2.y, r1.w
                        mul_sat r5.xyz, r2.y, r5  // Blend::blendColor<0,1,2>

#line 313
                        add r2.yzw, r3.xxyz, -r5.xxyz

#line 316
                        lrp r4.xyz, r1.w, r2_abs.yzww, r3  // ::result<0,1,2>
                      else
                        if_eq r2.x, c45.x

#line 322
                          rcp r2.y, r1.w
                          mul_sat r5.xyz, r2.y, r5  // Blend::blendColor<0,1,2>

#line 326
                          add r2.yzw, r3.xxyz, c3.y
                          add r2.yzw, r2, r2
                          add r6.xyz, r5, c3.y
                          mad r2.yzw, r2, -r6.xxyz, -c3.y  // ::result<0,1,2>

#line 329
                          lrp r4.xyz, r1.w, r2.yzww, r3  // ::result<0,1,2>
                        else
                          if_eq r2.x, c49.y

#line 335
                            rcp r2.y, r1.w
                            mul_sat r5.xyz, r2.y, r5  // Blend::blendColor<0,1,2>

#line 340
                            add r2.yzw, r3.xxyz, -c5.y
                            mul r6.xyz, r5, r5
                            add r7.xyz, -r3, c5.y
                            rcp r4.w, r7.x
                            mul r4.w, r4.w, r6.x
                            min r5.w, r4.w, c5.y
                            cmp r8.x, -r2_abs.y, r3.x, r5.w  // ::result<0>
                            rcp r2.y, r7.y
                            mul r2.y, r2.y, r6.y
                            min r4.w, r2.y, c5.y
                            cmp r8.y, -r2_abs.z, r3.y, r4.w  // ::result<1>
                            rcp r2.y, r7.z
                            mul r2.y, r2.y, r6.z
                            min r4.w, r2.y, c5.y
                            cmp r8.z, -r2_abs.w, r3.z, r4.w  // ::result<2>

#line 343
                            lrp r4.xyz, r1.w, r8, r3  // ::result<0,1,2>
                          else
                            if_eq r2.x, c49.z

#line 349
                              rcp r2.y, r1.w
                              mul_sat r5.xyz, r2.y, r5  // Blend::blendColor<0,1,2>

#line 366
                              add r2.yzw, -r5.xxyz, -c3.y
                              add r6.xyz, -r3, c5.y
                              add r7.xyz, r5, c3.y
                              mad r7.xyz, r7, -c5_abs.z, c5_abs.y
                              mad r6.xyz, r6, -r7, c5.y  // ::result<0,1,2>

#line 358
                              dp2add r4.w, r3.x, r5.x, c3.x  // ::result<0>
                              cmp r7.x, r2.y, r4.w, r6.x  // ::result<0>

#line 364
                              dp2add r2.y, r3.y, r5.y, c3.x  // ::result<1>
                              cmp r7.y, r2.z, r2.y, r6.y  // ::result<1>

#line 370
                              dp2add r2.y, r3.z, r5.z, c3.x  // ::result<2>
                              cmp r7.z, r2.w, r2.y, r6.z  // ::result<2>

#line 373
                              lrp r4.xyz, r1.w, r7, r3  // ::result<0,1,2>
                            else
                              if_eq r2.x, c49.w

#line 379
                                rcp r2.y, r1.w
                                mul_sat r5.xyz, r2.y, r5  // Blend::blendColor<0,1,2>

#line 384
                                add r2.yzw, r5.xxyz, c3.y
                                add r6.xyz, r5, r5
                                add r7.xyz, -r3, c5.y
                                rcp r4.w, r6.x
                                mad r4.w, r7.x, -r4.w, c5.y
                                max r5.w, r4.w, c3.x
                                cmp r4.w, -r6.x, r6.x, r5.w
                                add r8.xyz, r2.yzww, r2.yzww
                                mad r9.xyz, r2.yzww, -c5.z, -c5.y
                                mad r10.xyz, r2.yzww, -c5_abs.z, c5_abs.y
                                rcp r5.w, r10.x
                                mul r5.w, r3.x, r5.w
                                min r6.x, r5.w, c5.y
                                cmp r5.w, r9.x, r8.x, r6.x
                                cmp r2.y, r2.y, r5.w, r4.w
                                add r2.y, r2.y, c3.y
                                cmp r11.x, r2.y, c5.y, c5.x  // ::result<0>
                                rcp r2.y, r6.y
                                mad r2.y, r7.y, -r2.y, c5.y
                                max r4.w, r2.y, c3.x
                                cmp r2.y, -r6.y, r6.y, r4.w
                                rcp r4.w, r10.y
                                mul r4.w, r3.y, r4.w
                                min r5.w, r4.w, c5.y
                                cmp r4.w, r9.y, r8.y, r5.w
                                cmp r2.y, r2.z, r4.w, r2.y
                                add r2.y, r2.y, c3.y
                                cmp r11.y, r2.y, c5.y, c5.x  // ::result<1>
                                rcp r2.y, r6.z
                                mad r2.y, r7.z, -r2.y, c5.y
                                max r4.w, r2.y, c3.x
                                cmp r2.y, -r6.z, r6.z, r4.w
                                rcp r2.z, r10.z
                                mul r2.z, r2.z, r3.z
                                min r4.w, r2.z, c5.y
                                cmp r2.z, r9.z, r8.z, r4.w
                                cmp r2.y, r2.w, r2.z, r2.y
                                add r2.y, r2.y, c3.y
                                cmp r11.z, r2.y, c5.y, c5.x  // ::result<2>

#line 387
                                lrp r4.xyz, r1.w, r11, r3  // ::result<0,1,2>
                              else
                                if_eq r2.x, c50.x

#line 393
                                  rcp r2.y, r1.w
                                  mul_sat r5.xyz, r2.y, r5  // Blend::blendColor<0,1,2>

#line 148
                                  add r2.y, -r3.y, r3.x
                                  cmp r2.yz, r2.y, r3.xyxw, r3.xxyw
                                  min r4.w, r3.z, r2.y  // ::fmin<0>
                                  max r5.w, r2.z, r3.z  // ::fmax<0>
                                  add r2.y, -r4.w, r5.w  // ::delta<0>
                                  add r2.z, r4.w, r5.w  // ::maxplusmin<0>

#line 154
                                  mul r6.xyz, r2.z, -c3.y  // ::hsl<2,2,2>

#line 167
                                  add r2.w, r2.z, -c5.y
                                  rcp r4.w, r2.z
                                  mul r4.w, r2.y, r4.w  // ::hsl<1>
                                  add r5.w, -r2.z, -c5.z
                                  rcp r5.w, r5.w
                                  mul r5.w, r2.y, r5.w  // ::hsl<1>
                                  cmp r4.w, r2.w, r5.w, r4.w  // ::hsl<1>

#line 183
                                  cmp r2.y, -r2_abs.y, c3.x, r4.w  // ::hsl<1>

#line 192
                                  if_eq r2.y, c3.x

#line 195
                                  else

#line 175
                                    add r7.xyz, -r5.xzyw, r5.zyxw

#line 149
                                    cmp r8.xy, r7.z, r5.yxzw, r5
                                    min r4.w, r5.z, r8.x  // ::fmin<0>
                                    max r6.w, r8.y, r5.z  // ::fmax<0>
                                    add r4.w, -r4.w, r6.w  // ::delta<0>

#line 174
                                    add r8.xy, r5, -r6.w
                                    rcp r5.w, r4.w

#line 177
                                    mul r6.w, r5.w, r7.y  // ::hsl<0>
                                    mad r7.xy, r7.xzzw, r5.w, c43  // ::hsl<0,0>
                                    cmp r5.w, -r8_abs.y, r7.x, r7.y  // ::hsl<0>
                                    cmp r5.w, -r8_abs.x, r6.w, r5.w  // ::hsl<0>
                                    mul r6.w, r5.w, c42.w  // ::hsl<0>

#line 182
                                    mad r7.x, r5.w, c43.z, c43.w  // ::hsl<0>
                                    cmp r5.w, r5.w, r6.w, r7.x  // ::hsl<0>
                                    cmp r4.w, -r4_abs.w, c3.x, r5.w  // ::hsl<0>

#line 200
                                    add r5.w, r2.y, c5.y
                                    mul r5.w, r5.w, r6.z  // ::temp2<0>
                                    mad r6.w, r2.z, -c3.y, r2.y
                                    mad r2.y, r2.y, -r6.z, r6.w  // ::temp2<0>
                                    cmp r2.y, r2.w, r2.y, r5.w  // ::temp2<0>
                                    add r2.z, -r2.y, r2.z  // ::temp1<0>

#line 124
                                    add r7, r4.w, c44.yzwx  // GetHue::temp3<0,0,0,0>
                                    add r2.w, -r7.x, c5.y
                                    cmp r2.w, r2.w, r7.x, r7.z  // GetHue::temp3<0>
                                    cmp r2.w, r7.x, r2.w, r7.y  // GetHue::temp3<0>

#line 131
                                    add r5.w, -r2.z, r2.y
                                    mul r6.w, r5.w, c45.x
                                    mad r7.x, r6.w, r2.w, r2.z  // ::rgbComponent<0>

#line 134
                                    add r8.xyz, r2.w, c45.yzww
                                    add r2.w, -r2.w, -c45.w
                                    mul r2.w, r2.w, r5.w
                                    mad r2.w, r2.w, c45.x, r2.z  // ::rgbComponent<0>
                                    cmp r2.w, r8.z, r2.z, r2.w  // ::rgbComponent<0>
                                    cmp r2.w, r8.y, r2.w, r2.y  // ::rgbComponent<0>
                                    cmp r6.x, r8.x, r2.w, r7.x  // ::rgbComponent<0>

#line 125
                                    add r2.w, -r4.w, c5.y
                                    add r8, r4.w, -c44.xywz  // GetHue::temp3<0,0,0,0>
                                    cmp r2.w, r2.w, r4.w, r8.x  // GetHue::temp3<0>
                                    cmp r2.w, r4.w, r2.w, r7.w  // GetHue::temp3<0>

#line 131
                                    mad r4.w, r6.w, r2.w, r2.z  // ::rgbComponent<0>

#line 134
                                    add r7.xyz, r2.w, c45.yzww
                                    add r2.w, -r2.w, -c45.w
                                    mul r2.w, r2.w, r5.w
                                    mad r2.w, r2.w, c45.x, r2.z  // ::rgbComponent<0>
                                    cmp r2.w, r7.z, r2.z, r2.w  // ::rgbComponent<0>
                                    cmp r2.w, r7.y, r2.w, r2.y  // ::rgbComponent<0>
                                    cmp r6.y, r7.x, r2.w, r4.w  // ::rgbComponent<0>

#line 125
                                    add r2.w, -r8.y, c5.y
                                    cmp r2.w, r2.w, r8.y, r8.w  // GetHue::temp3<0>
                                    cmp r2.w, r8.y, r2.w, r8.z  // GetHue::temp3<0>

#line 131
                                    mad r4.w, r6.w, r2.w, r2.z  // ::rgbComponent<0>

#line 134
                                    add r7.xyz, r2.w, c45.yzww
                                    add r2.w, -r2.w, -c45.w
                                    mul r2.w, r2.w, r5.w
                                    mad r2.w, r2.w, c45.x, r2.z  // ::rgbComponent<0>
                                    cmp r2.z, r7.z, r2.z, r2.w  // ::rgbComponent<0>
                                    cmp r2.y, r7.y, r2.z, r2.y  // ::rgbComponent<0>
                                    cmp r6.z, r7.x, r2.y, r4.w  // ::rgbComponent<0>

#line 209
                                  endif

#line 400
                                  lrp r4.xyz, r1.w, r6, r3  // ::result<0,1,2>
                                else
                                  if_eq r2.x, c50.y

#line 406
                                    rcp r2.y, r1.w
                                    mul_sat r5.xyz, r2.y, r5  // Blend::blendColor<0,1,2>

#line 425
                                    max r2.yzw, r3.xxyz, r5.xxyz  // ::result<0,1,2>

#line 428
                                    lrp r4.xyz, r1.w, r2.yzww, r3  // ::result<0,1,2>
                                  else
                                    if_eq r2.x, c50.z

#line 434
                                      rcp r2.y, r1.w
                                      mul_sat r5.xyz, r2.y, r5  // Blend::blendColor<0,1,2>

#line 438
                                      add r2.yzw, r3.xxyz, r5.xxyz
                                      add_sat r2.yzw, r2, -c5.y  // ::result<0,1,2>

#line 441
                                      lrp r4.xyz, r1.w, r2.yzww, r3  // ::result<0,1,2>
                                    else
                                      if_eq r2.x, c50.w

#line 447
                                        rcp r2.y, r1.w
                                        mul_sat r5.xyz, r2.y, r5  // Blend::blendColor<0,1,2>

#line 451
                                        add r2.yzw, r3.xxyz, r5.xxyz  // ::result<0,1,2>

#line 454
                                        lrp r4.xyz, r1.w, r2.yzww, r3  // ::result<0,1,2>
                                      else
                                        if_eq r2.x, c51.x

#line 460
                                          rcp r2.y, r1.w
                                          mul_sat r5.xyz, r2.y, r5  // Blend::blendColor<0,1,2>

#line 477
                                          add r2.yzw, -r5.xxyz, -c3.y
                                          add r6.xyz, r5, c3.y
                                          mad r6.xyz, r6, -c5.z, r3  // ::result<0,1,2>
                                          mad r7.xyz, r5, -c5.z, r3
                                          add r7.xyz, r7, -c5.y  // ::result<0,1,2>
                                          cmp r2.yzw, r2, r7.xxyz, r6.xxyz  // ::result<0,1,2>

#line 484
                                          lrp r4.xyz, r1.w, r2.yzww, r3  // ::result<0,1,2>
                                        else
                                          if_eq r2.x, c51.y

#line 490
                                            rcp r2.y, r1.w
                                            mul_sat r5.xyz, r2.y, r5  // Blend::blendColor<0,1,2>

#line 175
                                            add r2.yzw, -r3.xxzy, r3.xzyx

#line 149
                                            cmp r6.xy, r2.w, r3.yxzw, r3
                                            min r4.w, r3.z, r6.x  // ::fmin<0>
                                            max r5.w, r6.y, r3.z  // ::fmax<0>
                                            add r6.x, -r4.w, r5.w  // ::delta<0>
                                            add r4.w, r4.w, r5.w  // ::maxplusmin<0>

#line 167
                                            add r6.y, r4.w, -c5.y
                                            rcp r6.z, r4.w
                                            mul r6.z, r6.z, r6.x  // ::hsl<1>
                                            add r4.w, -r4.w, -c5.z
                                            rcp r4.w, r4.w
                                            mul r4.w, r4.w, r6.x  // ::hsl<1>
                                            cmp r7.x, r6.y, r4.w, r6.z  // ::hsl<1>

#line 174
                                            add r6.yz, r3.xxyw, -r5.w
                                            rcp r4.w, r6.x

#line 177
                                            mul r2.z, r2.z, r4.w  // ::hsl<0>
                                            mad r2.yw, r2, r4.w, c43.xxzy  // ::hsl<0,0>
                                            cmp r2.y, -r6_abs.z, r2.y, r2.w  // ::hsl<0>
                                            cmp r2.y, -r6_abs.y, r2.z, r2.y  // ::hsl<0>
                                            mul r2.z, r2.y, c42.w  // ::hsl<0>

#line 182
                                            mad r2.w, r2.y, c43.z, c43.w  // ::hsl<0>
                                            cmp r7.yzw, r2.y, r2.z, r2.w  // ::hsl<0,0,0>
                                            cmp r6, -r6_abs.x, c3.x, r7  // ::hsl<1,0,0,0>

#line 148
                                            add r2.y, -r5.y, r5.x
                                            cmp r2.yz, r2.y, r5.xyxw, r5.xxyw
                                            min r4.w, r5.z, r2.y  // ::fmin<0>
                                            max r7.x, r2.z, r5.z  // ::fmax<0>
                                            add r2.y, r4.w, r7.x  // ::maxplusmin<0>

#line 154
                                            mul r7.xyz, r2.y, -c3.y  // ::hsl<2,2,2>

#line 192
                                            if_eq r6.x, c3.x

#line 195
                                            else

#line 199
                                              add r2.z, r2.y, -c5.y

#line 126
                                              add r8, r6, c44  // GetHue::temp3<0,0,0>

#line 200
                                              mul r2.w, r7.z, r8.x  // ::temp2<0>
                                              mad r4.w, r2.y, -c3.y, r6.x
                                              mad r4.w, r6.x, -r7.z, r4.w  // ::temp2<0>
                                              cmp r2.z, r2.z, r4.w, r2.w  // ::temp2<0>
                                              add r2.y, -r2.z, r2.y  // ::temp1<0>

#line 125
                                              add r2.w, -r8.y, c5.y
                                              cmp r2.w, r2.w, r8.y, r8.w  // GetHue::temp3<0>
                                              cmp r2.w, r8.y, r2.w, r8.z  // GetHue::temp3<0>

#line 131
                                              add r4.w, -r2.y, r2.z
                                              mul r5.w, r4.w, c45.x
                                              mad r6.x, r5.w, r2.w, r2.y  // ::rgbComponent<0>

#line 134
                                              add r8.xyz, r2.w, c45.yzww
                                              add r2.w, -r2.w, -c45.w
                                              mul r2.w, r2.w, r4.w
                                              mad r2.w, r2.w, c45.x, r2.y  // ::rgbComponent<0>
                                              cmp r2.w, r8.z, r2.y, r2.w  // ::rgbComponent<0>
                                              cmp r2.w, r8.y, r2.w, r2.z  // ::rgbComponent<0>
                                              cmp r7.x, r8.x, r2.w, r6.x  // ::rgbComponent<0>

#line 125
                                              add r2.w, -r6.w, c5.y
                                              add r8, r6.w, c48  // GetHue::temp3<0,0,0,0>
                                              cmp r2.w, r2.w, r6.w, r8.y  // GetHue::temp3<0>
                                              cmp r2.w, r6.w, r2.w, r8.x  // GetHue::temp3<0>

#line 131
                                              mad r6.x, r5.w, r2.w, r2.y  // ::rgbComponent<0>

#line 134
                                              add r9.xyz, r2.w, c45.yzww
                                              add r2.w, -r2.w, -c45.w
                                              mul r2.w, r2.w, r4.w
                                              mad r2.w, r2.w, c45.x, r2.y  // ::rgbComponent<0>
                                              cmp r2.w, r9.z, r2.y, r2.w  // ::rgbComponent<0>
                                              cmp r2.w, r9.y, r2.w, r2.z  // ::rgbComponent<0>
                                              cmp r7.y, r9.x, r2.w, r6.x  // ::rgbComponent<0>

#line 125
                                              add r2.w, -r8.z, c5.y
                                              add r6.x, r6.w, -c44.z  // GetHue::temp3<0>
                                              cmp r2.w, r2.w, r8.z, r6.x  // GetHue::temp3<0>
                                              cmp r2.w, r8.z, r2.w, r8.w  // GetHue::temp3<0>

#line 131
                                              mad r5.w, r5.w, r2.w, r2.y  // ::rgbComponent<0>

#line 134
                                              add r6.xyz, r2.w, c45.yzww
                                              add r2.w, -r2.w, -c45.w
                                              mul r2.w, r2.w, r4.w
                                              mad r2.w, r2.w, c45.x, r2.y  // ::rgbComponent<0>
                                              cmp r2.y, r6.z, r2.y, r2.w  // ::rgbComponent<0>
                                              cmp r2.y, r6.y, r2.y, r2.z  // ::rgbComponent<0>
                                              cmp r7.z, r6.x, r2.y, r5.w  // ::rgbComponent<0>

#line 209
                                            endif

#line 497
                                            lrp r4.xyz, r1.w, r7, r3  // ::result<0,1,2>
                                          else
                                            if_eq r2.x, c51.z

#line 503
                                              rcp r2.y, r1.w
                                              mul_sat r5.xyz, r2.y, r5  // Blend::blendColor<0,1,2>

#line 507
                                              mul r2.yzw, r3.xxyz, r5.xxyz  // ::result<0,1,2>

#line 510
                                              lrp r4.xyz, r1.w, r2.yzww, r3  // ::result<0,1,2>
                                            else
                                              if_eq r2.x, c51.w

#line 516
                                                rcp r2.y, r1.w
                                                mul_sat r5.xyz, r2.y, r5  // Blend::blendColor<0,1,2>

#line 519
                                                add r2.yzw, -r3.xxyz, c5.y
                                                add r2.yzw, -r5.xxyz, r2
                                                add r2.yzw, -r2_abs, c5.y  // ::result<0,1,2>

#line 522
                                                lrp r4.xyz, r1.w, r2.yzww, r3  // ::result<0,1,2>
                                              else
                                                if_eq r2.x, c47.x
                                                  add r2.y, -r1.w, c5.y
                                                  add r2.z, -r3.w, c5.y
                                                  mad r2.z, r2.y, -r2.z, c5.y  // ::result<3>

#line 530
                                                  mul r6.xyz, r1.w, r5
                                                  rcp r2.z, r2.z
                                                  mul r7.xyz, r3.w, r3
                                                  mul r7.xyz, r2.y, r7
                                                  mul r7.xyz, r2.z, r7
                                                  mad r4.xyz, r6, r2.z, r7  // ::result<0,1,2>
                                                else
                                                  add r2.x, r2.x, c47.y

#line 536
                                                  rcp r2.y, r1.w
                                                  mul_sat r2.yzw, r2.y, r5.xxyz  // Blend::blendColor<0,1,2>

#line 554
                                                  add r6.xyz, -r3, -c3.y
                                                  add r7.xyz, r3, c3.y
                                                  mad r7.xyz, r7, -c5_abs.z, c5_abs.y
                                                  add r8.xyz, -r2.yzww, c5.y
                                                  mad r7.xyz, r7, -r8, c5.y  // ::result<0,1,2>

#line 546
                                                  dp2add r3.w, r2.y, r3.x, c3.x  // ::result<0>
                                                  cmp r8.x, r6.x, r3.w, r7.x  // ::result<0>

#line 552
                                                  dp2add r3.w, r2.z, r3.y, c3.x  // ::result<1>
                                                  cmp r8.y, r6.y, r3.w, r7.y  // ::result<1>

#line 558
                                                  dp2add r3.w, r2.w, r3.z, c3.x  // ::result<2>
                                                  cmp r8.z, r6.z, r3.w, r7.z  // ::result<2>

#line 561
                                                  lrp r4.xyz, r1.w, r8, r3  // ::result<0,1,2>
                                                  cmp r5.xyz, -r2_abs.x, r2.yzww, r5  // Blend::blendColor<0,1,2>
                                                endif
                                              endif
                                            endif
                                          endif
                                        endif
                                      endif
                                    endif
                                  endif
                                endif
                              endif
                            endif
                          endif
                        endif
                      endif
                    endif
                  endif
                endif
              endif
            endif
            mov r2.x, c0.x  // ::BlendMode<0>
            if_eq r2.x, c47.z

#line 567
              rcp r2.y, r1.w
              mul_sat r2.yzw, r2.y, r5.xxyz  // Blend::blendColor<0,1,2>

#line 570
              min r6.xyz, r2.yzww, r3
              max r7.xyz, r3, r2.yzww
              add r2.yzw, r6.xxyz, -r7.xxyz
              add r2.yzw, r2, c5.y  // ::result<0,1,2>

#line 573
              lrp r4.xyz, r1.w, r2.yzww, r3  // ::result<0,1,2>
            else
              if_eq r2.x, c47.w

#line 579
                rcp r2.y, r1.w
                mul_sat r2.yzw, r2.y, r5.xxyz  // Blend::blendColor<0,1,2>

#line 596
                add r6.xyz, -r2.yzww, -c3.y
                add r7.xyz, r2.yzww, c3.y
                add r7.xyz, r7, r7
                max r8.xyz, r3, r7  // ::result<0,1,2>
                add r2.yzw, r2, r2
                min r7.xyz, r2.yzww, r3  // ::result<0,1,2>
                cmp r2.yzw, r6.xxyz, r7.xxyz, r8.xxyz  // ::result<0,1,2>

#line 603
                lrp r4.xyz, r1.w, r2.yzww, r3  // ::result<0,1,2>
              else
                if_eq r2.x, c52.x

#line 609
                  rcp r2.y, r1.w
                  mul_sat r2.yzw, r2.y, r5.xxyz  // Blend::blendColor<0,1,2>

#line 614
                  add r6.xyz, r2.yzww, -c5.y
                  mul r7.xyz, r3, r3
                  add r8.xyz, -r2.yzww, c5.y
                  rcp r3.w, r8.x
                  mul r3.w, r3.w, r7.x
                  min r4.w, r3.w, c5.y
                  cmp r9.x, r6.x, r2.y, r4.w  // ::result<0>
                  rcp r2.y, r8.y
                  mul r2.y, r2.y, r7.y
                  min r3.w, r2.y, c5.y
                  cmp r9.y, r6.y, r2.z, r3.w  // ::result<1>
                  rcp r2.y, r8.z
                  mul r2.y, r2.y, r7.z
                  min r3.w, r2.y, c5.y
                  cmp r9.z, r6.z, r2.w, r3.w  // ::result<2>

#line 617
                  lrp r4.xyz, r1.w, r9, r3  // ::result<0,1,2>
                else

#line 623
                  if_eq r2.x, c52.y

#line 626
                    rcp r2.y, r1.w
                    mul_sat r2.yzw, r2.y, r5.xxyz  // Blend::blendColor<0,1,2>

#line 148
                    add r3.w, -r3.y, r3.x
                    cmp r6.xy, r3.w, r3.yxzw, r3
                    min r4.w, r3.z, r6.x  // ::fmin<0>
                    max r5.w, r6.y, r3.z  // ::fmax<0>
                    add r6.x, r4.w, r5.w  // ::maxplusmin<0>

#line 154
                    mul r6.yzw, r6.x, -c3.y  // ::hsl<2,2,2>

#line 148
                    add r7.x, -r2.z, r2.y
                    cmp r2.yz, r7.x, r2.xzyw, r2
                    min r7.x, r2.w, r2.y  // ::fmin<0>
                    max r7.y, r2.z, r2.w  // ::fmax<0>
                    add r2.y, -r7.x, r7.y  // ::delta<0>
                    add r2.z, r7.x, r7.y  // ::maxplusmin<0>

#line 167
                    add r2.w, r2.z, -c5.y
                    rcp r7.x, r2.z
                    mul r7.x, r2.y, r7.x  // ::hsl<1>
                    add r2.z, -r2.z, -c5.z
                    rcp r2.z, r2.z
                    mul r2.z, r2.z, r2.y  // ::hsl<1>
                    cmp r2.z, r2.w, r2.z, r7.x  // ::hsl<1>

#line 183
                    cmp r2.y, -r2_abs.y, c3.x, r2.z  // ::hsl<1>

#line 192
                    if_eq r2.y, c3.x

#line 195
                    else

#line 150
                      add r2.z, -r4.w, r5.w  // ::delta<0>

#line 174
                      add r7.xy, r3, -r5.w
                      add r2.w, -r3.z, r3.y
                      rcp r4.w, r2.z
                      mul r2.w, r2.w, r4.w  // ::hsl<0>
                      add r5.w, -r3.x, r3.z
                      mad r5.w, r5.w, r4.w, -c5.z  // ::hsl<0>
                      mad r3.w, r3.w, r4.w, c43.y  // ::hsl<0>
                      cmp r3.w, -r7_abs.y, r5.w, r3.w  // ::hsl<0>
                      cmp r2.w, -r7_abs.x, r2.w, r3.w  // ::hsl<0>
                      mul r3.w, r2.w, c42.w  // ::hsl<0>

#line 182
                      mad r4.w, r2.w, c43.z, c43.w  // ::hsl<0>
                      cmp r2.w, r2.w, r3.w, r4.w  // ::hsl<0>
                      cmp r2.z, -r2_abs.z, c3.x, r2.w  // ::hsl<0>

#line 199
                      add r2.w, r6.x, -c5.y
                      add r3.w, r2.y, c5.y
                      mul r3.w, r3.w, r6.w  // ::temp2<0>
                      mad r4.w, r6.x, -c3.y, r2.y
                      mad r2.y, r2.y, -r6.w, r4.w  // ::temp2<0>
                      cmp r2.y, r2.w, r2.y, r3.w  // ::temp2<0>
                      add r2.w, -r2.y, r6.x  // ::temp1<0>

#line 124
                      add r7, r2.z, c44.yzwx  // GetHue::temp3<0,0,0,0>
                      add r3.w, -r7.x, c5.y
                      cmp r3.w, r3.w, r7.x, r7.z  // GetHue::temp3<0>
                      cmp r3.w, r7.x, r3.w, r7.y  // GetHue::temp3<0>

#line 131
                      add r4.w, -r2.w, r2.y
                      mul r5.w, r4.w, c45.x
                      mad r6.x, r5.w, r3.w, r2.w  // ::rgbComponent<0>

#line 134
                      add r7.xyz, r3.w, c45.yzww
                      add r3.w, -r3.w, -c45.w
                      mul r3.w, r3.w, r4.w
                      mad r3.w, r3.w, c45.x, r2.w  // ::rgbComponent<0>
                      cmp r3.w, r7.z, r2.w, r3.w  // ::rgbComponent<0>
                      cmp r3.w, r7.y, r3.w, r2.y  // ::rgbComponent<0>
                      cmp r6.y, r7.x, r3.w, r6.x  // ::rgbComponent<0>

#line 125
                      add r3.w, -r2.z, c5.y
                      add r8, r2.z, -c44.xywz  // GetHue::temp3<0,0,0,0>
                      cmp r3.w, r3.w, r2.z, r8.x  // GetHue::temp3<0>
                      cmp r2.z, r2.z, r3.w, r7.w  // GetHue::temp3<0>

#line 131
                      mad r3.w, r5.w, r2.z, r2.w  // ::rgbComponent<0>

#line 134
                      add r7.xyz, r2.z, c45.yzww
                      add r2.z, -r2.z, -c45.w
                      mul r2.z, r2.z, r4.w
                      mad r2.z, r2.z, c45.x, r2.w  // ::rgbComponent<0>
                      cmp r2.z, r7.z, r2.w, r2.z  // ::rgbComponent<0>
                      cmp r2.z, r7.y, r2.z, r2.y  // ::rgbComponent<0>
                      cmp r6.z, r7.x, r2.z, r3.w  // ::rgbComponent<0>

#line 125
                      add r2.z, -r8.y, c5.y
                      cmp r2.z, r2.z, r8.y, r8.w  // GetHue::temp3<0>
                      cmp r2.z, r8.y, r2.z, r8.z  // GetHue::temp3<0>

#line 131
                      mad r3.w, r5.w, r2.z, r2.w  // ::rgbComponent<0>

#line 134
                      add r7.xyz, r2.z, c45.yzww
                      add r2.z, -r2.z, -c45.w
                      mul r2.z, r2.z, r4.w
                      mad r2.z, r2.z, c45.x, r2.w  // ::rgbComponent<0>
                      cmp r2.z, r7.z, r2.w, r2.z  // ::rgbComponent<0>
                      cmp r2.y, r7.y, r2.z, r2.y  // ::rgbComponent<0>
                      cmp r6.w, r7.x, r2.y, r3.w  // ::rgbComponent<0>

#line 209
                    endif

#line 633
                    lrp r4.xyz, r1.w, r6.yzww, r3  // ::result<0,1,2>
                  else
                    if_eq r2.x, c52.z

#line 639
                      rcp r2.y, r1.w
                      mul_sat r2.yzw, r2.y, r5.xxyz  // Blend::blendColor<0,1,2>

#line 643
                      add r6.xyz, -r3, c5.y
                      add r2.yzw, -r2, c5.y
                      mad r2.yzw, r6.xxyz, -r2, c5.y  // ::result<0,1,2>

#line 646
                      lrp r4.xyz, r1.w, r2.yzww, r3  // ::result<0,1,2>
                    else
                      if_eq r2.x, c52.w

#line 652
                        rcp r2.y, r1.w
                        mul_sat r2.yzw, r2.y, r5.xxyz  // Blend::blendColor<0,1,2>

#line 657
                        add r6.xyz, r2.yzww, c3.y
                        add r7.xyz, r3, r3
                        mul r8.xyz, r3, r3
                        mad r9.xyz, r2.yzww, -c5_abs.z, c5_abs.y
                        mul r8.xyz, r8, r9
                        mad r8.xyz, r7, r2.yzww, r8
                        rsq r3.w, r3.x
                        rcp r3.w, r3.w
                        mad r9.xyz, r2.yzww, -c5.z, -c5.y
                        add r2.yzw, -r2, c5.y
                        mul r2.yzw, r2, r7.xxyz
                        mad r2.y, r3.w, r9.x, r2.y
                        cmp r7.x, r6.x, r2.y, r8.x  // ::result<0>
                        rsq r2.y, r3.y
                        rcp r2.y, r2.y
                        mad r2.y, r2.y, r9.y, r2.z
                        cmp r7.y, r6.y, r2.y, r8.y  // ::result<1>
                        rsq r2.y, r3.z
                        rcp r2.y, r2.y
                        mad r2.y, r2.y, r9.z, r2.w
                        cmp r7.z, r6.z, r2.y, r8.z  // ::result<2>

#line 660
                        lrp r4.xyz, r1.w, r7, r3  // ::result<0,1,2>
                      else
                        if_eq r2.x, c46.x

#line 666
                          rcp r2.x, r1.w
                          mul_sat r2.xyz, r2.x, r5  // Blend::blendColor<0,1,2>

#line 671
                          add r5.xyz, r2, c3.y
                          add r2.xyz, r2, r2
                          add r6.xyz, -r3, c5.y
                          rcp r2.w, r2.x
                          mad r2.w, r6.x, -r2.w, c5.y
                          max r3.w, r2.w, c3.x
                          cmp r2.x, -r2.x, r2.x, r3.w
                          add r7.xyz, r5, r5
                          mad r8.xyz, r5, -c5.z, -c5.y
                          mad r9.xyz, r5, -c5_abs.z, c5_abs.y
                          rcp r2.w, r9.x
                          mul r2.w, r2.w, r3.x
                          min r3.w, r2.w, c5.y
                          cmp r2.w, r8.x, r7.x, r3.w
                          cmp r10.x, r5.x, r2.w, r2.x  // ::result<0>
                          rcp r2.x, r2.y
                          mad r2.x, r6.y, -r2.x, c5.y
                          max r3.w, r2.x, c3.x
                          cmp r2.x, -r2.y, r2.y, r3.w
                          rcp r2.y, r9.y
                          mul r2.y, r2.y, r3.y
                          min r3.w, r2.y, c5.y
                          cmp r2.y, r8.y, r7.y, r3.w
                          cmp r10.y, r5.y, r2.y, r2.x  // ::result<1>
                          rcp r2.x, r2.z
                          mad r2.x, r6.z, -r2.x, c5.y
                          max r3.w, r2.x, c3.x
                          cmp r2.x, -r2.z, r2.z, r3.w
                          rcp r2.y, r9.z
                          mul r2.y, r2.y, r3.z
                          min r3.w, r2.y, c5.y
                          cmp r2.y, r8.z, r7.z, r3.w
                          cmp r10.z, r5.z, r2.y, r2.x  // ::result<2>

#line 674
                          lrp r4.xyz, r1.w, r10, r3  // ::result<0,1,2>
                        endif
                      endif
                    endif
                  endif
                endif
              endif
            endif

#line 891
          else

#line 683
            add r1.w, r1.y, -c7.x

#line 696
            if_eq c41.x, r1.x

#line 703
              mov r2, c3.x  // ::color1<0,1,2,3>
              mov r3.xyz, c3.x  // ::color2<0,1,2>
              mov r5.x, c3.x  // ::offset1<0>
              mov r5.y, c5.y  // ::offset2<0>
            else
              if_eq c41.x, r1.y

#line 711
                mov r2, c9  // ::color1<0,1,2,3>
                mov r3.xyz, c9  // ::color2<0,1,2>
                mov r5.x, c3.x  // ::offset1<0>
                mov r5.y, c5.y  // ::offset2<0>
              else
                if_eq c41.x, -r1.z

#line 719
                  mov r2, c9  // ::color1<0,1,2,3>
                  mov r3.xyz, c11  // ::color2<0,1,2>
                  mov r5.x, c3.x  // ::offset1<0>
                  mov r5.y, c5.y  // ::offset2<0>
                else

#line 722
                  mad r3.w, v0.x, r1.w, -c10.x
                  mad r4.w, v0.x, r1.w, -c12.x
                  cmp r5.z, r4.w, c5.x, c5.y
                  cmp r3.w, r3.w, r5.z, c3.x
                  if_ne r3.w, -r3.w

#line 726
                    mov r2, c9  // ::color1<0,1,2,3>
                    mov r3.xyz, c11  // ::color2<0,1,2>
                    mov r5.x, c10.x  // ::offset1<0>
                    mov r5.y, c12.x  // ::offset2<0>
                  else
                    mad r3.w, v0.x, r1.w, -c14.x
                    cmp r5.z, r3.w, c5.x, c5.y
                    cmp r4.w, r4.w, r5.z, c3.x
                    if_ne r4.w, -r4.w

#line 731
                      mov r2, c11  // ::color1<0,1,2,3>
                      mov r3.xyz, c13  // ::color2<0,1,2>
                      mov r5.x, c12.x  // ::offset1<0>
                      mov r5.y, c14.x  // ::offset2<0>
                    else
                      mad r4.w, v0.x, r1.w, -c16.x
                      cmp r5.z, r4.w, c5.x, c5.y
                      cmp r3.w, r3.w, r5.z, c3.x
                      if_ne r3.w, -r3.w

#line 736
                        mov r2, c13  // ::color1<0,1,2,3>
                        mov r3.xyz, c15  // ::color2<0,1,2>
                        mov r5.x, c14.x  // ::offset1<0>
                        mov r5.y, c16.x  // ::offset2<0>
                      else
                        mad r3.w, v0.x, r1.w, -c18.x
                        cmp r5.z, r3.w, c5.x, c5.y
                        cmp r4.w, r4.w, r5.z, c3.x
                        if_ne r4.w, -r4.w

#line 741
                          mov r2, c15  // ::color1<0,1,2,3>
                          mov r3.xyz, c17  // ::color2<0,1,2>
                          mov r5.x, c16.x  // ::offset1<0>
                          mov r5.y, c18.x  // ::offset2<0>
                        else
                          mad r4.w, v0.x, r1.w, -c20.x
                          cmp r5.z, r4.w, c5.x, c5.y
                          cmp r3.w, r3.w, r5.z, c3.x
                          if_ne r3.w, -r3.w

#line 746
                            mov r2, c17  // ::color1<0,1,2,3>
                            mov r3.xyz, c19  // ::color2<0,1,2>
                            mov r5.x, c18.x  // ::offset1<0>
                            mov r5.y, c20.x  // ::offset2<0>
                          else
                            mad r3.w, v0.x, r1.w, -c22.x
                            cmp r5.z, r3.w, c5.x, c5.y
                            cmp r4.w, r4.w, r5.z, c3.x
                            if_ne r4.w, -r4.w

#line 751
                              mov r2, c19  // ::color1<0,1,2,3>
                              mov r3.xyz, c21  // ::color2<0,1,2>
                              mov r5.x, c20.x  // ::offset1<0>
                              mov r5.y, c22.x  // ::offset2<0>
                            else
                              mad r4.w, v0.x, r1.w, -c24.x
                              cmp r5.z, r4.w, c5.x, c5.y
                              cmp r3.w, r3.w, r5.z, c3.x
                              if_ne r3.w, -r3.w

#line 756
                                mov r2, c21  // ::color1<0,1,2,3>
                                mov r3.xyz, c23  // ::color2<0,1,2>
                                mov r5.x, c22.x  // ::offset1<0>
                                mov r5.y, c24.x  // ::offset2<0>
                              else
                                mad r3.w, v0.x, r1.w, -c26.x

#line 762
                                mad r5.z, v0.x, r1.w, -c28.x

#line 767
                                mad r5.w, v0.x, r1.w, -c30.x

#line 772
                                mad r6.x, v0.x, r1.w, -c32.x

#line 777
                                mad r6.y, v0.x, r1.w, -c34.x

#line 782
                                mad r6.z, v0.x, r1.w, -c36.x

#line 787
                                mad r6.w, v0.x, r1.w, -c38.x

#line 796
                                cmp r6.w, r6.w, -c5.x, -c5.y
                                cmp r6.w, r6.z, r6.w, c3.x
                                mov r7, c37  // ::Color15<0,1,2,3>
                                cmp r8, r6.w, r7, c35  // ::color1<0,1,2,3>
                                cmp r7.xyz, r6.w, c39, r7  // ::color2<0,1,2>
                                mov r9.y, c40.x
                                mov r9.z, c36.x
                                mov r9.xw, c38.x
                                cmp r9.xy, r6.w, r9, r9.zwzw  // ::offset1<0>, ::offset2<0>
                                cmp r6.z, r6.z, -c5.x, -c5.y
                                cmp r6.z, r6.y, r6.z, c3.x
                                cmp r8, r6.z, r8, c33  // ::color1<0,1,2,3>
                                cmp r7.xyz, r6.z, r7, c35  // ::color2<0,1,2>
                                mov r10.xw, c34.x
                                mov r10.y, c36.x
                                cmp r6.zw, r6.z, r9.xyxy, r10.xyxy  // ::offset1<0>, ::offset2<0>
                                cmp r6.y, r6.y, -c5.x, -c5.y
                                cmp r6.y, r6.x, r6.y, c3.x
                                cmp r8, r6.y, r8, c31  // ::color1<0,1,2,3>
                                cmp r7.xyz, r6.y, r7, c33  // ::color2<0,1,2>
                                mov r10.z, c32.x
                                cmp r6.yz, r6.y, r6.xzww, r10.xzww  // ::offset1<0>, ::offset2<0>
                                cmp r6.x, r6.x, -c5.x, -c5.y
                                cmp r6.x, r5.w, r6.x, c3.x
                                cmp r8, r6.x, r8, c29  // ::color1<0,1,2,3>
                                cmp r7.xyz, r6.x, r7, c31  // ::color2<0,1,2>
                                mov r9.xw, c30.x
                                mov r9.y, c32.x
                                cmp r6.xy, r6.x, r6.yzzw, r9  // ::offset1<0>, ::offset2<0>
                                cmp r5.w, r5.w, -c5.x, -c5.y
                                cmp r5.w, r5.z, r5.w, c3.x
                                cmp r8, r5.w, r8, c27  // ::color1<0,1,2,3>
                                cmp r7.xyz, r5.w, r7, c29  // ::color2<0,1,2>
                                mov r9.yz, c28.x
                                cmp r6.xy, r5.w, r6, r9.zwzw  // ::offset1<0>, ::offset2<0>
                                cmp r5.z, r5.z, -c5.x, -c5.y
                                cmp r5.z, r3.w, r5.z, c3.x
                                cmp r8, r5.z, r8, c25  // ::color1<0,1,2,3>
                                cmp r7.xyz, r5.z, r7, c27  // ::color2<0,1,2>
                                mov r9.xw, c26.x
                                cmp r5.zw, r5.z, r6.xyxy, r9.xyxy  // ::offset1<0>, ::offset2<0>
                                cmp r3.w, r3.w, -c5.x, -c5.y
                                cmp r3.w, r4.w, r3.w, c3.x
                                cmp r2, r3.w, r8, c23  // ::color1<0,1,2,3>
                                cmp r3.xyz, r3.w, r7, c25  // ::color2<0,1,2>
                                mov r9.z, c24.x
                                cmp r5.xy, r3.w, r5.zwzw, r9.zwzw  // ::offset1<0>, ::offset2<0>
                              endif
                            endif
                          endif
                        endif
                      endif
                    endif
                  endif
                endif
              endif
            endif
            add r3.w, -r5.x, r5.y  // ::q<0>
            mad r1.w, v0.x, r1.w, -r5.x
            rcp r4.w, r3.w
            mul r1.w, r1.w, r4.w
            cmp r1.w, -r3_abs.w, c3.x, r1.w  // ::p<0>

#line 218
            cmp r5.xyz, -r3_abs, c42.y, r3  // Blend::blendColor<0,1,2>

#line 226
            if_eq c0.x, r1.x

#line 229
              rcp r3.x, r1.w
              mul_sat r5.xyz, r3.x, r5  // Blend::blendColor<0,1,2>

#line 232
              add r3.xyz, r2, r5
              mul r3.xyz, r1.w, r3

#line 235
              add r3.w, -r1.w, c5.y
              mul r3.xyz, r3, -c3.y
              mad r4.xyz, r3.w, r2, r3  // ::result<0,1,2>
            else
              if_eq c0.x, r1.y

#line 241
                rcp r1.y, r1.w
                mul_sat r5.xyz, r1.y, r5  // Blend::blendColor<0,1,2>

#line 245
                add r3.xyz, -r2, c5.y
                rcp r6.x, r5.x
                rcp r6.y, r5.y
                rcp r6.z, r5.z
                mad_sat r3.xyz, r3, -r6, c5.y  // ::result<0,1,2>

#line 248
                lrp r4.xyz, r1.w, r3, r2  // ::result<0,1,2>
              else
                if_eq c0.x, -r1.z

#line 254
                  rcp r1.y, r1.w
                  mul_sat r5.xyz, r1.y, r5  // Blend::blendColor<0,1,2>

#line 260
                  add r3.xyz, r5, -c5.y
                  add r6.xyz, -r5, c5.y
                  rcp r1.y, r6.x
                  mul r1.y, r1.y, r2.x
                  min r3.w, r1.y, c5.y
                  cmp r7.x, r3.x, r5.x, r3.w  // ::result<0>
                  rcp r1.y, r6.y
                  mul r1.y, r1.y, r2.y
                  min r3.x, r1.y, c5.y
                  cmp r7.y, r3.y, r5.y, r3.x  // ::result<1>
                  rcp r1.y, r6.z
                  mul r1.y, r1.y, r2.z
                  min r3.x, r1.y, c5.y
                  cmp r7.z, r3.z, r5.z, r3.x  // ::result<2>

#line 263
                  lrp r4.xyz, r1.w, r7, r2  // ::result<0,1,2>
                else
                  mov r3.x, c0.x  // ::BlendMode<0>
                  if_eq r3.x, c42.z

#line 269
                    rcp r1.y, r1.w
                    mul_sat r5.xyz, r1.y, r5  // Blend::blendColor<0,1,2>

#line 175
                    add r3.yzw, -r5.xxzy, r5.xzyx

#line 149
                    cmp r1.yz, r3.w, r5.xyxw, r5.xxyw
                    min r4.w, r5.z, r1.y  // ::fmin<0>
                    max r6.x, r1.z, r5.z  // ::fmax<0>
                    add r1.y, -r4.w, r6.x  // ::delta<0>
                    add r1.z, r4.w, r6.x  // ::maxplusmin<0>

#line 167
                    add r4.w, r1.z, -c5.y
                    rcp r5.w, r1.z
                    mul r5.w, r1.y, r5.w  // ::hsl<1>
                    add r1.z, -r1.z, -c5.z
                    rcp r1.z, r1.z
                    mul r1.z, r1.z, r1.y  // ::hsl<1>
                    cmp r7.x, r4.w, r1.z, r5.w  // ::hsl<1>

#line 174
                    add r6.xy, r5, -r6.x
                    rcp r1.z, r1.y

#line 177
                    mul r3.z, r1.z, r3.z  // ::hsl<0>
                    mad r3.yw, r3, r1.z, c43.xxzy  // ::hsl<0,0>
                    cmp r1.z, -r6_abs.y, r3.y, r3.w  // ::hsl<0>
                    cmp r1.z, -r6_abs.x, r3.z, r1.z  // ::hsl<0>
                    mul r3.y, r1.z, c42.w  // ::hsl<0>

#line 182
                    mad r3.z, r1.z, c43.z, c43.w  // ::hsl<0>
                    cmp r7.yzw, r1.z, r3.y, r3.z  // ::hsl<0,0,0>
                    cmp r6, -r1_abs.y, c3.x, r7  // ::hsl<1,0,0,0>

#line 148
                    add r1.y, -r2.y, r2.x
                    cmp r1.yz, r1.y, r2.xyxw, r2.xxyw
                    min r3.y, r2.z, r1.y  // ::fmin<0>
                    max r3.z, r1.z, r2.z  // ::fmax<0>
                    add r1.y, r3.y, r3.z  // ::maxplusmin<0>

#line 154
                    mul r3.yzw, r1.y, -c3.y  // ::hsl<2,2,2>

#line 192
                    if_eq r6.x, c3.x

#line 195
                    else

#line 199
                      add r1.z, r1.y, -c5.y

#line 126
                      add r7, r6, c44  // GetHue::temp3<0,0,0>

#line 200
                      mul r4.w, r3.w, r7.x  // ::temp2<0>
                      mad r5.w, r1.y, -c3.y, r6.x
                      mad r5.w, r6.x, -r3.w, r5.w  // ::temp2<0>
                      cmp r1.z, r1.z, r5.w, r4.w  // ::temp2<0>
                      add r1.y, -r1.z, r1.y  // ::temp1<0>

#line 125
                      add r4.w, -r7.y, c5.y
                      cmp r4.w, r4.w, r7.y, r7.w  // GetHue::temp3<0>
                      cmp r4.w, r7.y, r4.w, r7.z  // GetHue::temp3<0>

#line 131
                      add r5.w, -r1.y, r1.z
                      mul r6.x, r5.w, c45.x
                      mad r6.y, r6.x, r4.w, r1.y  // ::rgbComponent<0>

#line 134
                      add r7.xyz, r4.w, c45.yzww
                      add r4.w, -r4.w, -c45.w
                      mul r4.w, r4.w, r5.w
                      mad r4.w, r4.w, c45.x, r1.y  // ::rgbComponent<0>
                      cmp r4.w, r7.z, r1.y, r4.w  // ::rgbComponent<0>
                      cmp r4.w, r7.y, r4.w, r1.z  // ::rgbComponent<0>
                      cmp r3.y, r7.x, r4.w, r6.y  // ::rgbComponent<0>

#line 125
                      add r4.w, -r6.w, c5.y
                      add r7, r6.w, c48  // GetHue::temp3<0,0,0,0>
                      cmp r4.w, r4.w, r6.w, r7.y  // GetHue::temp3<0>
                      cmp r4.w, r6.w, r4.w, r7.x  // GetHue::temp3<0>

#line 131
                      mad r6.y, r6.x, r4.w, r1.y  // ::rgbComponent<0>

#line 134
                      add r8.xyz, r4.w, c45.yzww
                      add r4.w, -r4.w, -c45.w
                      mul r4.w, r4.w, r5.w
                      mad r4.w, r4.w, c45.x, r1.y  // ::rgbComponent<0>
                      cmp r4.w, r8.z, r1.y, r4.w  // ::rgbComponent<0>
                      cmp r4.w, r8.y, r4.w, r1.z  // ::rgbComponent<0>
                      cmp r3.z, r8.x, r4.w, r6.y  // ::rgbComponent<0>

#line 125
                      add r4.w, -r7.z, c5.y
                      add r6.y, r6.w, -c44.z  // GetHue::temp3<0>
                      cmp r4.w, r4.w, r7.z, r6.y  // GetHue::temp3<0>
                      cmp r4.w, r7.z, r4.w, r7.w  // GetHue::temp3<0>

#line 131
                      mad r6.x, r6.x, r4.w, r1.y  // ::rgbComponent<0>

#line 134
                      add r6.yzw, r4.w, c45
                      add r4.w, -r4.w, -c45.w
                      mul r4.w, r4.w, r5.w
                      mad r4.w, r4.w, c45.x, r1.y  // ::rgbComponent<0>
                      cmp r1.y, r6.w, r1.y, r4.w  // ::rgbComponent<0>
                      cmp r1.y, r6.z, r1.y, r1.z  // ::rgbComponent<0>
                      cmp r3.w, r6.y, r1.y, r6.x  // ::rgbComponent<0>

#line 209
                    endif

#line 276
                    lrp r4.xyz, r1.w, r3.yzww, r2  // ::result<0,1,2>
                  else
                    if_eq r3.x, c43.y

#line 282
                      rcp r1.y, r1.w
                      mul_sat r5.xyz, r1.y, r5  // Blend::blendColor<0,1,2>

#line 300
                      min r3.yzw, r2.xxyz, r5.xxyz  // ::result<0,1,2>

#line 303
                      lrp r4.xyz, r1.w, r3.yzww, r2  // ::result<0,1,2>
                    else
                      if_eq r3.x, c49.x

#line 309
                        rcp r1.y, r1.w
                        mul_sat r5.xyz, r1.y, r5  // Blend::blendColor<0,1,2>

#line 313
                        add r3.yzw, r2.xxyz, -r5.xxyz

#line 316
                        lrp r4.xyz, r1.w, r3_abs.yzww, r2  // ::result<0,1,2>
                      else
                        if_eq r3.x, c45.x

#line 322
                          rcp r1.y, r1.w
                          mul_sat r5.xyz, r1.y, r5  // Blend::blendColor<0,1,2>

#line 326
                          add r3.yzw, r2.xxyz, c3.y
                          add r3.yzw, r3, r3
                          add r6.xyz, r5, c3.y
                          mad r3.yzw, r3, -r6.xxyz, -c3.y  // ::result<0,1,2>

#line 329
                          lrp r4.xyz, r1.w, r3.yzww, r2  // ::result<0,1,2>
                        else
                          if_eq r3.x, c49.y

#line 335
                            rcp r1.y, r1.w
                            mul_sat r5.xyz, r1.y, r5  // Blend::blendColor<0,1,2>

#line 340
                            add r3.yzw, r2.xxyz, -c5.y
                            mul r6.xyz, r5, r5
                            add r7.xyz, -r2, c5.y
                            rcp r1.y, r7.x
                            mul r1.y, r1.y, r6.x
                            min r4.w, r1.y, c5.y
                            cmp r8.x, -r3_abs.y, r2.x, r4.w  // ::result<0>
                            rcp r1.y, r7.y
                            mul r1.y, r1.y, r6.y
                            min r3.y, r1.y, c5.y
                            cmp r8.y, -r3_abs.z, r2.y, r3.y  // ::result<1>
                            rcp r1.y, r7.z
                            mul r1.y, r1.y, r6.z
                            min r3.y, r1.y, c5.y
                            cmp r8.z, -r3_abs.w, r2.z, r3.y  // ::result<2>

#line 343
                            lrp r4.xyz, r1.w, r8, r2  // ::result<0,1,2>
                          else
                            if_eq r3.x, c49.z

#line 349
                              rcp r1.y, r1.w
                              mul_sat r5.xyz, r1.y, r5  // Blend::blendColor<0,1,2>

#line 366
                              add r3.yzw, -r5.xxyz, -c3.y
                              add r6.xyz, -r2, c5.y
                              add r7.xyz, r5, c3.y
                              mad r7.xyz, r7, -c5_abs.z, c5_abs.y
                              mad r6.xyz, r6, -r7, c5.y  // ::result<0,1,2>

#line 358
                              dp2add r1.y, r2.x, r5.x, c3.x  // ::result<0>
                              cmp r7.x, r3.y, r1.y, r6.x  // ::result<0>

#line 364
                              dp2add r1.y, r2.y, r5.y, c3.x  // ::result<1>
                              cmp r7.y, r3.z, r1.y, r6.y  // ::result<1>

#line 370
                              dp2add r1.y, r2.z, r5.z, c3.x  // ::result<2>
                              cmp r7.z, r3.w, r1.y, r6.z  // ::result<2>

#line 373
                              lrp r4.xyz, r1.w, r7, r2  // ::result<0,1,2>
                            else
                              if_eq r3.x, c49.w

#line 379
                                rcp r1.y, r1.w
                                mul_sat r5.xyz, r1.y, r5  // Blend::blendColor<0,1,2>

#line 384
                                add r3.yzw, r5.xxyz, c3.y
                                add r6.xyz, r5, r5
                                add r7.xyz, -r2, c5.y
                                rcp r1.y, r6.x
                                mad r1.y, r7.x, -r1.y, c5.y
                                max r4.w, r1.y, c3.x
                                cmp r1.y, -r6.x, r6.x, r4.w
                                add r8.xyz, r3.yzww, r3.yzww
                                mad r9.xyz, r3.yzww, -c5.z, -c5.y
                                mad r10.xyz, r3.yzww, -c5_abs.z, c5_abs.y
                                rcp r1.z, r10.x
                                mul r1.z, r1.z, r2.x
                                min r4.w, r1.z, c5.y
                                cmp r1.z, r9.x, r8.x, r4.w
                                cmp r1.y, r3.y, r1.z, r1.y
                                add r1.y, r1.y, c3.y
                                cmp r11.x, r1.y, c5.y, c5.x  // ::result<0>
                                rcp r1.y, r6.y
                                mad r1.y, r7.y, -r1.y, c5.y
                                max r3.y, r1.y, c3.x
                                cmp r1.y, -r6.y, r6.y, r3.y
                                rcp r1.z, r10.y
                                mul r1.z, r1.z, r2.y
                                min r3.y, r1.z, c5.y
                                cmp r1.z, r9.y, r8.y, r3.y
                                cmp r1.y, r3.z, r1.z, r1.y
                                add r1.y, r1.y, c3.y
                                cmp r11.y, r1.y, c5.y, c5.x  // ::result<1>
                                rcp r1.y, r6.z
                                mad r1.y, r7.z, -r1.y, c5.y
                                max r3.y, r1.y, c3.x
                                cmp r1.y, -r6.z, r6.z, r3.y
                                rcp r1.z, r10.z
                                mul r1.z, r1.z, r2.z
                                min r3.y, r1.z, c5.y
                                cmp r1.z, r9.z, r8.z, r3.y
                                cmp r1.y, r3.w, r1.z, r1.y
                                add r1.y, r1.y, c3.y
                                cmp r11.z, r1.y, c5.y, c5.x  // ::result<2>

#line 387
                                lrp r4.xyz, r1.w, r11, r2  // ::result<0,1,2>
                              else
                                if_eq r3.x, c50.x

#line 393
                                  rcp r1.y, r1.w
                                  mul_sat r5.xyz, r1.y, r5  // Blend::blendColor<0,1,2>

#line 148
                                  add r1.y, -r2.y, r2.x
                                  cmp r1.yz, r1.y, r2.xyxw, r2.xxyw
                                  min r3.y, r2.z, r1.y  // ::fmin<0>
                                  max r3.z, r1.z, r2.z  // ::fmax<0>
                                  add r1.y, -r3.y, r3.z  // ::delta<0>
                                  add r1.z, r3.y, r3.z  // ::maxplusmin<0>

#line 154
                                  mul r3.yzw, r1.z, -c3.y  // ::hsl<2,2,2>

#line 167
                                  add r4.w, r1.z, -c5.y
                                  rcp r5.w, r1.z
                                  mul r5.w, r1.y, r5.w  // ::hsl<1>
                                  add r6.x, -r1.z, -c5.z
                                  rcp r6.x, r6.x
                                  mul r6.x, r1.y, r6.x  // ::hsl<1>
                                  cmp r5.w, r4.w, r6.x, r5.w  // ::hsl<1>

#line 183
                                  cmp r1.y, -r1_abs.y, c3.x, r5.w  // ::hsl<1>

#line 192
                                  if_eq r1.y, c3.x

#line 195
                                  else

#line 175
                                    add r6.xyz, -r5.xzyw, r5.zyxw

#line 149
                                    cmp r7.xy, r6.z, r5.yxzw, r5
                                    min r6.w, r5.z, r7.x  // ::fmin<0>
                                    max r8.x, r7.y, r5.z  // ::fmax<0>
                                    add r5.w, -r6.w, r8.x  // ::delta<0>

#line 174
                                    add r7.xy, r5, -r8.x
                                    rcp r6.w, r5.w

#line 177
                                    mul r6.y, r6.w, r6.y  // ::hsl<0>
                                    mad r6.xz, r6, r6.w, c43.xyyw  // ::hsl<0,0>
                                    cmp r6.x, -r7_abs.y, r6.x, r6.z  // ::hsl<0>
                                    cmp r6.x, -r7_abs.x, r6.y, r6.x  // ::hsl<0>
                                    mul r6.y, r6.x, c42.w  // ::hsl<0>

#line 182
                                    mad r6.z, r6.x, c43.z, c43.w  // ::hsl<0>
                                    cmp r6.x, r6.x, r6.y, r6.z  // ::hsl<0>
                                    cmp r5.w, -r5_abs.w, c3.x, r6.x  // ::hsl<0>

#line 200
                                    add r6.x, r1.y, c5.y
                                    mul r6.x, r3.w, r6.x  // ::temp2<0>
                                    mad r6.y, r1.z, -c3.y, r1.y
                                    mad r1.y, r1.y, -r3.w, r6.y  // ::temp2<0>
                                    cmp r1.y, r4.w, r1.y, r6.x  // ::temp2<0>
                                    add r1.z, -r1.y, r1.z  // ::temp1<0>

#line 124
                                    add r6, r5.w, c44.yzwx  // GetHue::temp3<0,0,0,0>
                                    add r4.w, -r6.x, c5.y
                                    cmp r4.w, r4.w, r6.x, r6.z  // GetHue::temp3<0>
                                    cmp r4.w, r6.x, r4.w, r6.y  // GetHue::temp3<0>

#line 131
                                    add r6.x, -r1.z, r1.y
                                    mul r6.y, r6.x, c45.x
                                    mad r6.z, r6.y, r4.w, r1.z  // ::rgbComponent<0>

#line 134
                                    add r7.xyz, r4.w, c45.yzww
                                    add r4.w, -r4.w, -c45.w
                                    mul r4.w, r4.w, r6.x
                                    mad r4.w, r4.w, c45.x, r1.z  // ::rgbComponent<0>
                                    cmp r4.w, r7.z, r1.z, r4.w  // ::rgbComponent<0>
                                    cmp r4.w, r7.y, r4.w, r1.y  // ::rgbComponent<0>
                                    cmp r3.y, r7.x, r4.w, r6.z  // ::rgbComponent<0>

#line 125
                                    add r4.w, -r5.w, c5.y
                                    add r7, r5.w, -c44.xywz  // GetHue::temp3<0,0,0,0>
                                    cmp r4.w, r4.w, r5.w, r7.x  // GetHue::temp3<0>
                                    cmp r4.w, r5.w, r4.w, r6.w  // GetHue::temp3<0>

#line 131
                                    mad r5.w, r6.y, r4.w, r1.z  // ::rgbComponent<0>

#line 134
                                    add r8.xyz, r4.w, c45.yzww
                                    add r4.w, -r4.w, -c45.w
                                    mul r4.w, r4.w, r6.x
                                    mad r4.w, r4.w, c45.x, r1.z  // ::rgbComponent<0>
                                    cmp r4.w, r8.z, r1.z, r4.w  // ::rgbComponent<0>
                                    cmp r4.w, r8.y, r4.w, r1.y  // ::rgbComponent<0>
                                    cmp r3.z, r8.x, r4.w, r5.w  // ::rgbComponent<0>

#line 125
                                    add r4.w, -r7.y, c5.y
                                    cmp r4.w, r4.w, r7.y, r7.w  // GetHue::temp3<0>
                                    cmp r4.w, r7.y, r4.w, r7.z  // GetHue::temp3<0>

#line 131
                                    mad r5.w, r6.y, r4.w, r1.z  // ::rgbComponent<0>

#line 134
                                    add r6.yzw, r4.w, c45
                                    add r4.w, -r4.w, -c45.w
                                    mul r4.w, r4.w, r6.x
                                    mad r4.w, r4.w, c45.x, r1.z  // ::rgbComponent<0>
                                    cmp r1.z, r6.w, r1.z, r4.w  // ::rgbComponent<0>
                                    cmp r1.y, r6.z, r1.z, r1.y  // ::rgbComponent<0>
                                    cmp r3.w, r6.y, r1.y, r5.w  // ::rgbComponent<0>

#line 209
                                  endif

#line 400
                                  lrp r4.xyz, r1.w, r3.yzww, r2  // ::result<0,1,2>
                                else
                                  if_eq r3.x, c50.y

#line 406
                                    rcp r1.y, r1.w
                                    mul_sat r5.xyz, r1.y, r5  // Blend::blendColor<0,1,2>

#line 425
                                    max r3.yzw, r2.xxyz, r5.xxyz  // ::result<0,1,2>

#line 428
                                    lrp r4.xyz, r1.w, r3.yzww, r2  // ::result<0,1,2>
                                  else
                                    if_eq r3.x, c50.z

#line 434
                                      rcp r1.y, r1.w
                                      mul_sat r5.xyz, r1.y, r5  // Blend::blendColor<0,1,2>

#line 438
                                      add r3.yzw, r2.xxyz, r5.xxyz
                                      add_sat r3.yzw, r3, -c5.y  // ::result<0,1,2>

#line 441
                                      lrp r4.xyz, r1.w, r3.yzww, r2  // ::result<0,1,2>
                                    else
                                      if_eq r3.x, c50.w

#line 447
                                        rcp r1.y, r1.w
                                        mul_sat r5.xyz, r1.y, r5  // Blend::blendColor<0,1,2>

#line 451
                                        add r3.yzw, r2.xxyz, r5.xxyz  // ::result<0,1,2>

#line 454
                                        lrp r4.xyz, r1.w, r3.yzww, r2  // ::result<0,1,2>
                                      else
                                        if_eq r3.x, c51.x

#line 460
                                          rcp r1.y, r1.w
                                          mul_sat r5.xyz, r1.y, r5  // Blend::blendColor<0,1,2>

#line 477
                                          add r3.yzw, -r5.xxyz, -c3.y
                                          add r6.xyz, r5, c3.y
                                          mad r6.xyz, r6, -c5.z, r2  // ::result<0,1,2>
                                          mad r7.xyz, r5, -c5.z, r2
                                          add r7.xyz, r7, -c5.y  // ::result<0,1,2>
                                          cmp r3.yzw, r3, r7.xxyz, r6.xxyz  // ::result<0,1,2>

#line 484
                                          lrp r4.xyz, r1.w, r3.yzww, r2  // ::result<0,1,2>
                                        else
                                          if_eq r3.x, c51.y

#line 490
                                            rcp r1.y, r1.w
                                            mul_sat r5.xyz, r1.y, r5  // Blend::blendColor<0,1,2>

#line 175
                                            add r3.yzw, -r2.xxzy, r2.xzyx

#line 149
                                            cmp r1.yz, r3.w, r2.xyxw, r2.xxyw
                                            min r4.w, r2.z, r1.y  // ::fmin<0>
                                            max r5.w, r1.z, r2.z  // ::fmax<0>
                                            add r1.y, -r4.w, r5.w  // ::delta<0>
                                            add r1.z, r4.w, r5.w  // ::maxplusmin<0>

#line 167
                                            add r4.w, r1.z, -c5.y
                                            rcp r6.x, r1.z
                                            mul r6.x, r1.y, r6.x  // ::hsl<1>
                                            add r1.z, -r1.z, -c5.z
                                            rcp r1.z, r1.z
                                            mul r1.z, r1.z, r1.y  // ::hsl<1>
                                            cmp r6.x, r4.w, r1.z, r6.x  // ::hsl<1>

#line 174
                                            add r7.xy, r2, -r5.w
                                            rcp r1.z, r1.y

#line 177
                                            mul r3.z, r1.z, r3.z  // ::hsl<0>
                                            mad r3.yw, r3, r1.z, c43.xxzy  // ::hsl<0,0>
                                            cmp r1.z, -r7_abs.y, r3.y, r3.w  // ::hsl<0>
                                            cmp r1.z, -r7_abs.x, r3.z, r1.z  // ::hsl<0>
                                            mul r3.y, r1.z, c42.w  // ::hsl<0>

#line 182
                                            mad r3.z, r1.z, c43.z, c43.w  // ::hsl<0>
                                            cmp r6.yzw, r1.z, r3.y, r3.z  // ::hsl<0,0,0>
                                            cmp r6, -r1_abs.y, c3.x, r6  // ::hsl<1,0,0,0>

#line 148
                                            add r1.y, -r5.y, r5.x
                                            cmp r1.yz, r1.y, r5.xyxw, r5.xxyw
                                            min r3.y, r5.z, r1.y  // ::fmin<0>
                                            max r3.z, r1.z, r5.z  // ::fmax<0>
                                            add r1.y, r3.y, r3.z  // ::maxplusmin<0>

#line 154
                                            mul r3.yzw, r1.y, -c3.y  // ::hsl<2,2,2>

#line 192
                                            if_eq r6.x, c3.x

#line 195
                                            else

#line 199
                                              add r1.z, r1.y, -c5.y

#line 126
                                              add r7, r6, c44  // GetHue::temp3<0,0,0>

#line 200
                                              mul r4.w, r3.w, r7.x  // ::temp2<0>
                                              mad r5.w, r1.y, -c3.y, r6.x
                                              mad r5.w, r6.x, -r3.w, r5.w  // ::temp2<0>
                                              cmp r1.z, r1.z, r5.w, r4.w  // ::temp2<0>
                                              add r1.y, -r1.z, r1.y  // ::temp1<0>

#line 125
                                              add r4.w, -r7.y, c5.y
                                              cmp r4.w, r4.w, r7.y, r7.w  // GetHue::temp3<0>
                                              cmp r4.w, r7.y, r4.w, r7.z  // GetHue::temp3<0>

#line 131
                                              add r5.w, -r1.y, r1.z
                                              mul r6.x, r5.w, c45.x
                                              mad r6.y, r6.x, r4.w, r1.y  // ::rgbComponent<0>

#line 134
                                              add r7.xyz, r4.w, c45.yzww
                                              add r4.w, -r4.w, -c45.w
                                              mul r4.w, r4.w, r5.w
                                              mad r4.w, r4.w, c45.x, r1.y  // ::rgbComponent<0>
                                              cmp r4.w, r7.z, r1.y, r4.w  // ::rgbComponent<0>
                                              cmp r4.w, r7.y, r4.w, r1.z  // ::rgbComponent<0>
                                              cmp r3.y, r7.x, r4.w, r6.y  // ::rgbComponent<0>

#line 125
                                              add r4.w, -r6.w, c5.y
                                              add r7, r6.w, c48  // GetHue::temp3<0,0,0,0>
                                              cmp r4.w, r4.w, r6.w, r7.y  // GetHue::temp3<0>
                                              cmp r4.w, r6.w, r4.w, r7.x  // GetHue::temp3<0>

#line 131
                                              mad r6.y, r6.x, r4.w, r1.y  // ::rgbComponent<0>

#line 134
                                              add r8.xyz, r4.w, c45.yzww
                                              add r4.w, -r4.w, -c45.w
                                              mul r4.w, r4.w, r5.w
                                              mad r4.w, r4.w, c45.x, r1.y  // ::rgbComponent<0>
                                              cmp r4.w, r8.z, r1.y, r4.w  // ::rgbComponent<0>
                                              cmp r4.w, r8.y, r4.w, r1.z  // ::rgbComponent<0>
                                              cmp r3.z, r8.x, r4.w, r6.y  // ::rgbComponent<0>

#line 125
                                              add r4.w, -r7.z, c5.y
                                              add r6.y, r6.w, -c44.z  // GetHue::temp3<0>
                                              cmp r4.w, r4.w, r7.z, r6.y  // GetHue::temp3<0>
                                              cmp r4.w, r7.z, r4.w, r7.w  // GetHue::temp3<0>

#line 131
                                              mad r6.x, r6.x, r4.w, r1.y  // ::rgbComponent<0>

#line 134
                                              add r6.yzw, r4.w, c45
                                              add r4.w, -r4.w, -c45.w
                                              mul r4.w, r4.w, r5.w
                                              mad r4.w, r4.w, c45.x, r1.y  // ::rgbComponent<0>
                                              cmp r1.y, r6.w, r1.y, r4.w  // ::rgbComponent<0>
                                              cmp r1.y, r6.z, r1.y, r1.z  // ::rgbComponent<0>
                                              cmp r3.w, r6.y, r1.y, r6.x  // ::rgbComponent<0>

#line 209
                                            endif

#line 497
                                            lrp r4.xyz, r1.w, r3.yzww, r2  // ::result<0,1,2>
                                          else
                                            if_eq r3.x, c51.z

#line 503
                                              rcp r1.y, r1.w
                                              mul_sat r5.xyz, r1.y, r5  // Blend::blendColor<0,1,2>

#line 507
                                              mul r3.yzw, r2.xxyz, r5.xxyz  // ::result<0,1,2>

#line 510
                                              lrp r4.xyz, r1.w, r3.yzww, r2  // ::result<0,1,2>
                                            else
                                              if_eq r3.x, c51.w

#line 516
                                                rcp r1.y, r1.w
                                                mul_sat r5.xyz, r1.y, r5  // Blend::blendColor<0,1,2>

#line 519
                                                add r3.yzw, -r2.xxyz, c5.y
                                                add r3.yzw, -r5.xxyz, r3
                                                add r3.yzw, -r3_abs, c5.y  // ::result<0,1,2>

#line 522
                                                lrp r4.xyz, r1.w, r3.yzww, r2  // ::result<0,1,2>
                                              else
                                                if_eq r3.x, c47.x
                                                  add r1.y, -r1.w, c5.y
                                                  add r1.z, -r2.w, c5.y
                                                  mad r1.z, r1.y, -r1.z, c5.y  // ::result<3>

#line 530
                                                  mul r3.yzw, r1.w, r5.xxyz
                                                  rcp r1.z, r1.z
                                                  mul r6.xyz, r2.w, r2
                                                  mul r6.xyz, r1.y, r6
                                                  mul r6.xyz, r1.z, r6
                                                  mad r4.xyz, r3.yzww, r1.z, r6  // ::result<0,1,2>
                                                else
                                                  add r1.y, r3.x, c47.y

#line 536
                                                  rcp r1.z, r1.w
                                                  mul_sat r3.xyz, r1.z, r5  // Blend::blendColor<0,1,2>

#line 554
                                                  add r6.xyz, -r2, -c3.y
                                                  add r7.xyz, r2, c3.y
                                                  mad r7.xyz, r7, -c5_abs.z, c5_abs.y
                                                  add r8.xyz, -r3, c5.y
                                                  mad r7.xyz, r7, -r8, c5.y  // ::result<0,1,2>

#line 546
                                                  dp2add r1.z, r3.x, r2.x, c3.x  // ::result<0>
                                                  cmp r8.x, r6.x, r1.z, r7.x  // ::result<0>

#line 552
                                                  dp2add r1.z, r3.y, r2.y, c3.x  // ::result<1>
                                                  cmp r8.y, r6.y, r1.z, r7.y  // ::result<1>

#line 558
                                                  dp2add r1.z, r3.z, r2.z, c3.x  // ::result<2>
                                                  cmp r8.z, r6.z, r1.z, r7.z  // ::result<2>

#line 561
                                                  lrp r4.xyz, r1.w, r8, r2  // ::result<0,1,2>
                                                  cmp r5.xyz, -r1_abs.y, r3, r5  // Blend::blendColor<0,1,2>
                                                endif
                                              endif
                                            endif
                                          endif
                                        endif
                                      endif
                                    endif
                                  endif
                                endif
                              endif
                            endif
                          endif
                        endif
                      endif
                    endif
                  endif
                endif
              endif
            endif
            mov r3.x, c0.x  // ::BlendMode<0>
            if_eq r3.x, c47.z

#line 567
              rcp r1.y, r1.w
              mul_sat r3.yzw, r1.y, r5.xxyz  // Blend::blendColor<0,1,2>

#line 570
              min r6.xyz, r3.yzww, r2
              max r7.xyz, r2, r3.yzww
              add r3.yzw, r6.xxyz, -r7.xxyz
              add r3.yzw, r3, c5.y  // ::result<0,1,2>

#line 573
              lrp r4.xyz, r1.w, r3.yzww, r2  // ::result<0,1,2>
            else
              if_eq r3.x, c47.w

#line 579
                rcp r1.y, r1.w
                mul_sat r3.yzw, r1.y, r5.xxyz  // Blend::blendColor<0,1,2>

#line 596
                add r6.xyz, -r3.yzww, -c3.y
                add r7.xyz, r3.yzww, c3.y
                add r7.xyz, r7, r7
                max r8.xyz, r2, r7  // ::result<0,1,2>
                add r3.yzw, r3, r3
                min r7.xyz, r3.yzww, r2  // ::result<0,1,2>
                cmp r3.yzw, r6.xxyz, r7.xxyz, r8.xxyz  // ::result<0,1,2>

#line 603
                lrp r4.xyz, r1.w, r3.yzww, r2  // ::result<0,1,2>
              else
                if_eq r3.x, c52.x

#line 609
                  rcp r1.y, r1.w
                  mul_sat r3.yzw, r1.y, r5.xxyz  // Blend::blendColor<0,1,2>

#line 614
                  add r6.xyz, r3.yzww, -c5.y
                  mul r7.xyz, r2, r2
                  add r8.xyz, -r3.yzww, c5.y
                  rcp r1.y, r8.x
                  mul r1.y, r1.y, r7.x
                  min r2.w, r1.y, c5.y
                  cmp r9.x, r6.x, r3.y, r2.w  // ::result<0>
                  rcp r1.y, r8.y
                  mul r1.y, r1.y, r7.y
                  min r2.w, r1.y, c5.y
                  cmp r9.y, r6.y, r3.z, r2.w  // ::result<1>
                  rcp r1.y, r8.z
                  mul r1.y, r1.y, r7.z
                  min r2.w, r1.y, c5.y
                  cmp r9.z, r6.z, r3.w, r2.w  // ::result<2>

#line 617
                  lrp r4.xyz, r1.w, r9, r2  // ::result<0,1,2>
                else

#line 623
                  if_eq r3.x, c52.y

#line 626
                    rcp r1.y, r1.w
                    mul_sat r3.yzw, r1.y, r5.xxyz  // Blend::blendColor<0,1,2>

#line 148
                    add r1.y, -r2.y, r2.x
                    cmp r6.xy, r1.y, r2.yxzw, r2
                    min r1.z, r2.z, r6.x  // ::fmin<0>
                    max r4.w, r6.y, r2.z  // ::fmax<0>
                    add r2.w, r1.z, r4.w  // ::maxplusmin<0>

#line 154
                    mul r6.xyz, r2.w, -c3.y  // ::hsl<2,2,2>

#line 148
                    add r5.w, -r3.z, r3.y
                    cmp r3.yz, r5.w, r3.xzyw, r3
                    min r5.w, r3.w, r3.y  // ::fmin<0>
                    max r6.w, r3.z, r3.w  // ::fmax<0>
                    add r3.y, -r5.w, r6.w  // ::delta<0>
                    add r3.z, r5.w, r6.w  // ::maxplusmin<0>

#line 167
                    add r3.w, r3.z, -c5.y
                    rcp r5.w, r3.z
                    mul r5.w, r3.y, r5.w  // ::hsl<1>
                    add r3.z, -r3.z, -c5.z
                    rcp r3.z, r3.z
                    mul r3.z, r3.z, r3.y  // ::hsl<1>
                    cmp r3.z, r3.w, r3.z, r5.w  // ::hsl<1>

#line 183
                    cmp r3.y, -r3_abs.y, c3.x, r3.z  // ::hsl<1>

#line 192
                    if_eq r3.y, c3.x

#line 195
                    else

#line 150
                      add r1.z, -r1.z, r4.w  // ::delta<0>

#line 174
                      add r3.zw, r2.xyxy, -r4.w
                      add r4.w, -r2.z, r2.y
                      rcp r5.w, r1.z
                      mul r4.w, r4.w, r5.w  // ::hsl<0>
                      add r6.w, -r2.x, r2.z
                      mad r6.w, r6.w, r5.w, -c5.z  // ::hsl<0>
                      mad r1.y, r1.y, r5.w, c43.y  // ::hsl<0>
                      cmp r1.y, -r3_abs.w, r6.w, r1.y  // ::hsl<0>
                      cmp r1.y, -r3_abs.z, r4.w, r1.y  // ::hsl<0>
                      mul r3.z, r1.y, c42.w  // ::hsl<0>

#line 182
                      mad r3.w, r1.y, c43.z, c43.w  // ::hsl<0>
                      cmp r1.y, r1.y, r3.z, r3.w  // ::hsl<0>
                      cmp r1.y, -r1_abs.z, c3.x, r1.y  // ::hsl<0>

#line 199
                      add r1.z, r2.w, -c5.y
                      add r3.z, r3.y, c5.y
                      mul r3.z, r3.z, r6.z  // ::temp2<0>
                      mad r3.w, r2.w, -c3.y, r3.y
                      mad r3.y, r3.y, -r6.z, r3.w  // ::temp2<0>
                      cmp r1.z, r1.z, r3.y, r3.z  // ::temp2<0>
                      add r2.w, -r1.z, r2.w  // ::temp1<0>

#line 124
                      add r7, r1.y, c44.yzwx  // GetHue::temp3<0,0,0,0>
                      add r3.y, -r7.x, c5.y
                      cmp r3.y, r3.y, r7.x, r7.z  // GetHue::temp3<0>
                      cmp r3.y, r7.x, r3.y, r7.y  // GetHue::temp3<0>

#line 131
                      add r3.z, r1.z, -r2.w
                      mul r3.w, r3.z, c45.x
                      mad r4.w, r3.w, r3.y, r2.w  // ::rgbComponent<0>

#line 134
                      add r7.xyz, r3.y, c45.yzww
                      add r3.y, -r3.y, -c45.w
                      mul r3.y, r3.y, r3.z
                      mad r3.y, r3.y, c45.x, r2.w  // ::rgbComponent<0>
                      cmp r3.y, r7.z, r2.w, r3.y  // ::rgbComponent<0>
                      cmp r3.y, r7.y, r3.y, r1.z  // ::rgbComponent<0>
                      cmp r6.x, r7.x, r3.y, r4.w  // ::rgbComponent<0>

#line 125
                      add r3.y, -r1.y, c5.y
                      add r8, r1.y, -c44.xywz  // GetHue::temp3<0,0,0,0>
                      cmp r3.y, r3.y, r1.y, r8.x  // GetHue::temp3<0>
                      cmp r1.y, r1.y, r3.y, r7.w  // GetHue::temp3<0>

#line 131
                      mad r3.y, r3.w, r1.y, r2.w  // ::rgbComponent<0>

#line 134
                      add r7.xyz, r1.y, c45.yzww
                      add r1.y, -r1.y, -c45.w
                      mul r1.y, r1.y, r3.z
                      mad r1.y, r1.y, c45.x, r2.w  // ::rgbComponent<0>
                      cmp r1.y, r7.z, r2.w, r1.y  // ::rgbComponent<0>
                      cmp r1.y, r7.y, r1.y, r1.z  // ::rgbComponent<0>
                      cmp r6.y, r7.x, r1.y, r3.y  // ::rgbComponent<0>

#line 125
                      add r1.y, -r8.y, c5.y
                      cmp r1.y, r1.y, r8.y, r8.w  // GetHue::temp3<0>
                      cmp r1.y, r8.y, r1.y, r8.z  // GetHue::temp3<0>

#line 131
                      mad r3.y, r3.w, r1.y, r2.w  // ::rgbComponent<0>

#line 134
                      add r7.xyz, r1.y, c45.yzww
                      add r1.y, -r1.y, -c45.w
                      mul r1.y, r1.y, r3.z
                      mad r1.y, r1.y, c45.x, r2.w  // ::rgbComponent<0>
                      cmp r1.y, r7.z, r2.w, r1.y  // ::rgbComponent<0>
                      cmp r1.y, r7.y, r1.y, r1.z  // ::rgbComponent<0>
                      cmp r6.z, r7.x, r1.y, r3.y  // ::rgbComponent<0>

#line 209
                    endif

#line 633
                    lrp r4.xyz, r1.w, r6, r2  // ::result<0,1,2>
                  else
                    if_eq r3.x, c52.z

#line 639
                      rcp r1.y, r1.w
                      mul_sat r3.yzw, r1.y, r5.xxyz  // Blend::blendColor<0,1,2>

#line 643
                      add r6.xyz, -r2, c5.y
                      add r3.yzw, -r3, c5.y
                      mad r3.yzw, r6.xxyz, -r3, c5.y  // ::result<0,1,2>

#line 646
                      lrp r4.xyz, r1.w, r3.yzww, r2  // ::result<0,1,2>
                    else
                      if_eq r3.x, c52.w

#line 652
                        rcp r1.y, r1.w
                        mul_sat r3.yzw, r1.y, r5.xxyz  // Blend::blendColor<0,1,2>

#line 657
                        add r6.xyz, r3.yzww, c3.y
                        add r7.xyz, r2, r2
                        mul r8.xyz, r2, r2
                        mad r9.xyz, r3.yzww, -c5_abs.z, c5_abs.y
                        mul r8.xyz, r8, r9
                        mad r8.xyz, r7, r3.yzww, r8
                        rsq r1.y, r2.x
                        rcp r1.y, r1.y
                        mad r9.xyz, r3.yzww, -c5.z, -c5.y
                        add r3.yzw, -r3, c5.y
                        mul r3.yzw, r3, r7.xxyz
                        mad r1.y, r1.y, r9.x, r3.y
                        cmp r7.x, r6.x, r1.y, r8.x  // ::result<0>
                        rsq r1.y, r2.y
                        rcp r1.y, r1.y
                        mad r1.y, r1.y, r9.y, r3.z
                        cmp r7.y, r6.y, r1.y, r8.y  // ::result<1>
                        rsq r1.y, r2.z
                        rcp r1.y, r1.y
                        mad r1.y, r1.y, r9.z, r3.w
                        cmp r7.z, r6.z, r1.y, r8.z  // ::result<2>

#line 660
                        lrp r4.xyz, r1.w, r7, r2  // ::result<0,1,2>
                      else
                        if_eq r3.x, c46.x

#line 666
                          rcp r1.y, r1.w
                          mul_sat r3.xyz, r1.y, r5  // Blend::blendColor<0,1,2>

#line 671
                          add r5.xyz, r3, c3.y
                          add r3.xyz, r3, r3
                          add r6.xyz, -r2, c5.y
                          rcp r1.y, r3.x
                          mad r1.y, r6.x, -r1.y, c5.y
                          max r2.w, r1.y, c3.x
                          cmp r1.y, -r3.x, r3.x, r2.w
                          add r7.xyz, r5, r5
                          mad r8.xyz, r5, -c5.z, -c5.y
                          mad r9.xyz, r5, -c5_abs.z, c5_abs.y
                          rcp r1.z, r9.x
                          mul r1.z, r1.z, r2.x
                          min r2.w, r1.z, c5.y
                          cmp r1.z, r8.x, r7.x, r2.w
                          cmp r10.x, r5.x, r1.z, r1.y  // ::result<0>
                          rcp r1.y, r3.y
                          mad r1.y, r6.y, -r1.y, c5.y
                          max r2.w, r1.y, c3.x
                          cmp r1.y, -r3.y, r3.y, r2.w
                          rcp r1.z, r9.y
                          mul r1.z, r1.z, r2.y
                          min r2.w, r1.z, c5.y
                          cmp r1.z, r8.y, r7.y, r2.w
                          cmp r10.y, r5.y, r1.z, r1.y  // ::result<1>
                          rcp r1.y, r3.z
                          mad r1.y, r6.z, -r1.y, c5.y
                          max r2.w, r1.y, c3.x
                          cmp r1.y, -r3.z, r3.z, r2.w
                          rcp r1.z, r9.z
                          mul r1.z, r1.z, r2.z
                          min r2.w, r1.z, c5.y
                          cmp r1.z, r8.z, r7.z, r2.w
                          cmp r10.z, r5.z, r1.z, r1.y  // ::result<2>

#line 674
                          lrp r4.xyz, r1.w, r10, r2  // ::result<0,1,2>
                        endif
                      endif
                    endif
                  endif
                endif
              endif
            endif

#line 893
          endif
        endif
      endif

#line 218
      cmp r2.xyz, -r4_abs, c42.y, r4  // Blend::blendColor<0,1,2>

#line 226
      if_eq c0.x, r1.x

#line 229
        rcp r1.x, c1.x
        mul_sat r2.xyz, r1.x, r2  // Blend::blendColor<0,1,2>

#line 232
        add r1.xyz, r0, r2
        mul r1.xyz, r1, c1.x

#line 235
        mov r3.y, c5.y
        add r1.w, r3.y, -c1.x
        mul r1.xyz, r1, -c3.y
        mad r1.xyz, r1.w, r0, r1  // ::result<0,1,2>
        mov r1.w, r0.w  // ::result<3>
      else
        mov r3.yz, c5
        if_eq c0.x, r3.y

#line 241
          rcp r2.w, c1.x
          mul_sat r2.xyz, r2.w, r2  // Blend::blendColor<0,1,2>

#line 245
          add r4.xyz, -r0, c5.y
          rcp r5.x, r2.x
          rcp r5.y, r2.y
          rcp r5.z, r2.z
          mad_sat r4.xyz, r4, -r5, c5.y  // ::result<0,1,2>

#line 248
          lrp r1.xyz, c1.x, r4, r0  // ::result<0,1,2>
          mov r1.w, r0.w  // ::result<3>
        else
          if_eq c0.x, -r3.z

#line 254
            rcp r2.w, c1.x
            mul_sat r2.xyz, r2.w, r2  // Blend::blendColor<0,1,2>

#line 260
            add r3.xzw, r2.xyyz, -c5.y
            add r4.xyz, -r2, c5.y
            rcp r2.w, r4.x
            mul r2.w, r0.x, r2.w
            min r4.x, r2.w, c5.y
            cmp r5.x, r3.x, r2.x, r4.x  // ::result<0>
            rcp r2.w, r4.y
            mul r2.w, r0.y, r2.w
            min r3.x, r2.w, c5.y
            cmp r5.y, r3.z, r2.y, r3.x  // ::result<1>
            rcp r2.w, r4.z
            mul r2.w, r0.z, r2.w
            min r3.x, r2.w, c5.y
            cmp r5.z, r3.w, r2.z, r3.x  // ::result<2>

#line 263
            lrp r1.xyz, c1.x, r5, r0  // ::result<0,1,2>
            mov r1.w, r0.w  // ::result<3>
          else
            mov r3.x, c0.x  // ::BlendMode<0>
            if_eq r3.x, c42.z

#line 269
              rcp r2.w, c1.x
              mul_sat r2.xyz, r2.w, r2  // Blend::blendColor<0,1,2>

#line 175
              add r4.xyz, -r2.xzyw, r2.zyxw

#line 149
              cmp r3.zw, r4.z, r2.xyyx, r2.xyxy
              min r4.w, r2.z, r3.z  // ::fmin<0>
              max r5.x, r3.w, r2.z  // ::fmax<0>
              add r2.w, -r4.w, r5.x  // ::delta<0>
              add r3.z, r4.w, r5.x  // ::maxplusmin<0>

#line 167
              add r3.w, r3.z, -c5.y
              rcp r4.w, r3.z
              mul r4.w, r2.w, r4.w  // ::hsl<1>
              add r3.z, -r3.z, -c5.z
              rcp r3.z, r3.z
              mul r3.z, r2.w, r3.z  // ::hsl<1>
              cmp r6.x, r3.w, r3.z, r4.w  // ::hsl<1>

#line 174
              add r3.zw, r2.xyxy, -r5.x
              rcp r4.w, r2.w

#line 177
              mul r4.y, r4.w, r4.y  // ::hsl<0>
              mad r4.xz, r4, r4.w, c43.xyyw  // ::hsl<0,0>
              cmp r3.w, -r3_abs.w, r4.x, r4.z  // ::hsl<0>
              cmp r3.z, -r3_abs.z, r4.y, r3.w  // ::hsl<0>
              mul r3.w, r3.z, c42.w  // ::hsl<0>

#line 182
              mad r4.x, r3.z, c43.z, c43.w  // ::hsl<0>
              cmp r6.yzw, r3.z, r3.w, r4.x  // ::hsl<0,0,0>
              cmp r4, -r2_abs.w, c3.x, r6  // ::hsl<1,0,0,0>

#line 148
              add r2.w, -r0.y, r0.x
              cmp r3.zw, r2.w, r0.xyyx, r0.xyxy
              min r2.w, r0.z, r3.z  // ::fmin<0>
              max r5.x, r3.w, r0.z  // ::fmax<0>
              add r2.w, r2.w, r5.x  // ::maxplusmin<0>

#line 154
              mul r5.xyz, r2.w, -c3.y  // ::hsl<2,2,2>

#line 192
              if_eq r4.x, c3.x

#line 195
              else

#line 199
                add r3.z, r2.w, -c5.y

#line 126
                add r6, r4, c44  // GetHue::temp3<0,0,0>

#line 200
                mul r3.w, r5.z, r6.x  // ::temp2<0>
                mad r4.y, r2.w, -c3.y, r4.x
                mad r4.x, r4.x, -r5.z, r4.y  // ::temp2<0>
                cmp r3.z, r3.z, r4.x, r3.w  // ::temp2<0>
                add r2.w, r2.w, -r3.z  // ::temp1<0>

#line 125
                add r3.w, -r6.y, c5.y
                cmp r3.w, r3.w, r6.y, r6.w  // GetHue::temp3<0>
                cmp r3.w, r6.y, r3.w, r6.z  // GetHue::temp3<0>

#line 131
                add r4.x, -r2.w, r3.z
                mul r4.y, r4.x, c45.x
                mad r4.z, r4.y, r3.w, r2.w  // ::rgbComponent<0>

#line 134
                add r6.xyz, r3.w, c45.yzww
                add r3.w, -r3.w, -c45.w
                mul r3.w, r3.w, r4.x
                mad r3.w, r3.w, c45.x, r2.w  // ::rgbComponent<0>
                cmp r3.w, r6.z, r2.w, r3.w  // ::rgbComponent<0>
                cmp r3.w, r6.y, r3.w, r3.z  // ::rgbComponent<0>
                cmp r5.x, r6.x, r3.w, r4.z  // ::rgbComponent<0>

#line 125
                add r3.w, -r4.w, c5.y
                add r6, r4.w, c48  // GetHue::temp3<0,0,0,0>
                cmp r3.w, r3.w, r4.w, r6.y  // GetHue::temp3<0>
                cmp r3.w, r4.w, r3.w, r6.x  // GetHue::temp3<0>

#line 131
                mad r4.z, r4.y, r3.w, r2.w  // ::rgbComponent<0>

#line 134
                add r7.xyz, r3.w, c45.yzww
                add r3.w, -r3.w, -c45.w
                mul r3.w, r3.w, r4.x
                mad r3.w, r3.w, c45.x, r2.w  // ::rgbComponent<0>
                cmp r3.w, r7.z, r2.w, r3.w  // ::rgbComponent<0>
                cmp r3.w, r7.y, r3.w, r3.z  // ::rgbComponent<0>
                cmp r5.y, r7.x, r3.w, r4.z  // ::rgbComponent<0>

#line 125
                add r3.w, -r6.z, c5.y
                add r4.z, r4.w, -c44.z  // GetHue::temp3<0>
                cmp r3.w, r3.w, r6.z, r4.z  // GetHue::temp3<0>
                cmp r3.w, r6.z, r3.w, r6.w  // GetHue::temp3<0>

#line 131
                mad r4.y, r4.y, r3.w, r2.w  // ::rgbComponent<0>

#line 134
                add r6.xyz, r3.w, c45.yzww
                add r3.w, -r3.w, -c45.w
                mul r3.w, r3.w, r4.x
                mad r3.w, r3.w, c45.x, r2.w  // ::rgbComponent<0>
                cmp r2.w, r6.z, r2.w, r3.w  // ::rgbComponent<0>
                cmp r2.w, r6.y, r2.w, r3.z  // ::rgbComponent<0>
                cmp r5.z, r6.x, r2.w, r4.y  // ::rgbComponent<0>

#line 209
              endif

#line 276
              lrp r1.xyz, c1.x, r5, r0  // ::result<0,1,2>
              mov r1.w, r0.w  // ::result<3>
            else
              if_eq r3.x, c43.y

#line 282
                rcp r2.w, c1.x
                mul_sat r2.xyz, r2.w, r2  // Blend::blendColor<0,1,2>

#line 300
                min r4.xyz, r0, r2  // ::result<0,1,2>

#line 303
                lrp r1.xyz, c1.x, r4, r0  // ::result<0,1,2>
                mov r1.w, r0.w  // ::result<3>
              else
                if_eq r3.x, c49.x

#line 309
                  rcp r2.w, c1.x
                  mul_sat r2.xyz, r2.w, r2  // Blend::blendColor<0,1,2>

#line 313
                  add r4.xyz, r0, -r2

#line 316
                  lrp r1.xyz, c1.x, r4_abs, r0  // ::result<0,1,2>
                  mov r1.w, r0.w  // ::result<3>
                else
                  if_eq r3.x, c45.x

#line 322
                    rcp r2.w, c1.x
                    mul_sat r2.xyz, r2.w, r2  // Blend::blendColor<0,1,2>

#line 326
                    add r4.xyz, r0, c3.y
                    add r4.xyz, r4, r4
                    add r5.xyz, r2, c3.y
                    mad r4.xyz, r4, -r5, -c3.y  // ::result<0,1,2>

#line 329
                    lrp r1.xyz, c1.x, r4, r0  // ::result<0,1,2>
                    mov r1.w, r0.w  // ::result<3>
                  else
                    if_eq r3.x, c49.y

#line 335
                      rcp r2.w, c1.x
                      mul_sat r2.xyz, r2.w, r2  // Blend::blendColor<0,1,2>

#line 340
                      add r4.xyz, r0, -c5.y
                      mul r5.xyz, r2, r2
                      add r6.xyz, -r0, c5.y
                      rcp r2.w, r6.x
                      mul r2.w, r2.w, r5.x
                      min r3.z, r2.w, c5.y
                      cmp r7.x, -r4_abs.x, r0.x, r3.z  // ::result<0>
                      rcp r2.w, r6.y
                      mul r2.w, r2.w, r5.y
                      min r3.z, r2.w, c5.y
                      cmp r7.y, -r4_abs.y, r0.y, r3.z  // ::result<1>
                      rcp r2.w, r6.z
                      mul r2.w, r2.w, r5.z
                      min r3.z, r2.w, c5.y
                      cmp r7.z, -r4_abs.z, r0.z, r3.z  // ::result<2>

#line 343
                      lrp r1.xyz, c1.x, r7, r0  // ::result<0,1,2>
                      mov r1.w, r0.w  // ::result<3>
                    else
                      if_eq r3.x, c49.z

#line 349
                        rcp r2.w, c1.x
                        mul_sat r2.xyz, r2.w, r2  // Blend::blendColor<0,1,2>

#line 366
                        add r4.xyz, -r2, -c3.y
                        add r5.xyz, -r0, c5.y
                        add r6.xyz, r2, c3.y
                        mad r6.xyz, r6, -c5_abs.z, c5_abs.y
                        mad r5.xyz, r5, -r6, c5.y  // ::result<0,1,2>

#line 358
                        dp2add r2.w, r0.x, r2.x, c3.x  // ::result<0>
                        cmp r6.x, r4.x, r2.w, r5.x  // ::result<0>

#line 364
                        dp2add r2.w, r0.y, r2.y, c3.x  // ::result<1>
                        cmp r6.y, r4.y, r2.w, r5.y  // ::result<1>

#line 370
                        dp2add r2.w, r0.z, r2.z, c3.x  // ::result<2>
                        cmp r6.z, r4.z, r2.w, r5.z  // ::result<2>

#line 373
                        lrp r1.xyz, c1.x, r6, r0  // ::result<0,1,2>
                        mov r1.w, r0.w  // ::result<3>
                      else
                        if_eq r3.x, c49.w

#line 379
                          rcp r2.w, c1.x
                          mul_sat r2.xyz, r2.w, r2  // Blend::blendColor<0,1,2>

#line 384
                          add r4.xyz, r2, c3.y
                          add r5.xyz, r2, r2
                          add r6.xyz, -r0, c5.y
                          rcp r2.w, r5.x
                          mad r2.w, r6.x, -r2.w, c5.y
                          max r3.z, r2.w, c3.x
                          cmp r2.w, -r5.x, r5.x, r3.z
                          add r7.xyz, r4, r4
                          mad r8.xyz, r4, -c5.z, -c5.y
                          mad r9.xyz, r4, -c5_abs.z, c5_abs.y
                          rcp r3.z, r9.x
                          mul r3.z, r0.x, r3.z
                          min r4.w, r3.z, c5.y
                          cmp r3.z, r8.x, r7.x, r4.w
                          cmp r2.w, r4.x, r3.z, r2.w
                          add r2.w, r2.w, c3.y
                          cmp r10.x, r2.w, c5.y, c5.x  // ::result<0>
                          rcp r2.w, r5.y
                          mad r2.w, r6.y, -r2.w, c5.y
                          max r3.z, r2.w, c3.x
                          cmp r2.w, -r5.y, r5.y, r3.z
                          rcp r3.z, r9.y
                          mul r3.z, r0.y, r3.z
                          min r4.x, r3.z, c5.y
                          cmp r3.z, r8.y, r7.y, r4.x
                          cmp r2.w, r4.y, r3.z, r2.w
                          add r2.w, r2.w, c3.y
                          cmp r10.y, r2.w, c5.y, c5.x  // ::result<1>
                          rcp r2.w, r5.z
                          mad r2.w, r6.z, -r2.w, c5.y
                          max r3.z, r2.w, c3.x
                          cmp r2.w, -r5.z, r5.z, r3.z
                          rcp r3.z, r9.z
                          mul r3.z, r0.z, r3.z
                          min r4.x, r3.z, c5.y
                          cmp r3.z, r8.z, r7.z, r4.x
                          cmp r2.w, r4.z, r3.z, r2.w
                          add r2.w, r2.w, c3.y
                          cmp r10.z, r2.w, c5.y, c5.x  // ::result<2>

#line 387
                          lrp r1.xyz, c1.x, r10, r0  // ::result<0,1,2>
                          mov r1.w, r0.w  // ::result<3>
                        else
                          if_eq r3.x, c50.x

#line 393
                            rcp r2.w, c1.x
                            mul_sat r2.xyz, r2.w, r2  // Blend::blendColor<0,1,2>

#line 148
                            add r2.w, -r0.y, r0.x
                            cmp r3.zw, r2.w, r0.xyyx, r0.xyxy
                            min r2.w, r0.z, r3.z  // ::fmin<0>
                            max r4.x, r3.w, r0.z  // ::fmax<0>
                            add r3.z, -r2.w, r4.x  // ::delta<0>
                            add r2.w, r2.w, r4.x  // ::maxplusmin<0>

#line 154
                            mul r4.xyz, r2.w, -c3.y  // ::hsl<2,2,2>

#line 167
                            add r3.w, r2.w, -c5.y
                            rcp r4.w, r2.w
                            mul r4.w, r3.z, r4.w  // ::hsl<1>
                            add r5.x, -r2.w, -c5.z
                            rcp r5.x, r5.x
                            mul r5.x, r3.z, r5.x  // ::hsl<1>
                            cmp r4.w, r3.w, r5.x, r4.w  // ::hsl<1>

#line 183
                            cmp r3.z, -r3_abs.z, c3.x, r4.w  // ::hsl<1>

#line 192
                            if_eq r3.z, c3.x

#line 195
                            else

#line 175
                              add r5.xyz, -r2.xzyw, r2.zyxw

#line 149
                              cmp r6.xy, r5.z, r2.yxzw, r2
                              min r4.w, r2.z, r6.x  // ::fmin<0>
                              max r5.w, r6.y, r2.z  // ::fmax<0>
                              add r4.w, -r4.w, r5.w  // ::delta<0>

#line 174
                              add r6.xy, r2, -r5.w
                              rcp r5.w, r4.w

#line 177
                              mul r5.y, r5.w, r5.y  // ::hsl<0>
                              mad r5.xz, r5, r5.w, c43.xyyw  // ::hsl<0,0>
                              cmp r5.x, -r6_abs.y, r5.x, r5.z  // ::hsl<0>
                              cmp r5.x, -r6_abs.x, r5.y, r5.x  // ::hsl<0>
                              mul r5.y, r5.x, c42.w  // ::hsl<0>

#line 182
                              mad r5.z, r5.x, c43.z, c43.w  // ::hsl<0>
                              cmp r5.x, r5.x, r5.y, r5.z  // ::hsl<0>
                              cmp r4.w, -r4_abs.w, c3.x, r5.x  // ::hsl<0>

#line 200
                              add r5.x, r3.z, c5.y
                              mul r5.x, r4.z, r5.x  // ::temp2<0>
                              mad r5.y, r2.w, -c3.y, r3.z
                              mad r3.z, r3.z, -r4.z, r5.y  // ::temp2<0>
                              cmp r3.z, r3.w, r3.z, r5.x  // ::temp2<0>
                              add r2.w, r2.w, -r3.z  // ::temp1<0>

#line 124
                              add r5, r4.w, c44.yzwx  // GetHue::temp3<0,0,0,0>
                              add r3.w, -r5.x, c5.y
                              cmp r3.w, r3.w, r5.x, r5.z  // GetHue::temp3<0>
                              cmp r3.w, r5.x, r3.w, r5.y  // GetHue::temp3<0>

#line 131
                              add r5.x, -r2.w, r3.z
                              mul r5.y, r5.x, c45.x
                              mad r5.z, r5.y, r3.w, r2.w  // ::rgbComponent<0>

#line 134
                              add r6.xyz, r3.w, c45.yzww
                              add r3.w, -r3.w, -c45.w
                              mul r3.w, r3.w, r5.x
                              mad r3.w, r3.w, c45.x, r2.w  // ::rgbComponent<0>
                              cmp r3.w, r6.z, r2.w, r3.w  // ::rgbComponent<0>
                              cmp r3.w, r6.y, r3.w, r3.z  // ::rgbComponent<0>
                              cmp r4.x, r6.x, r3.w, r5.z  // ::rgbComponent<0>

#line 125
                              add r3.w, -r4.w, c5.y
                              add r6, r4.w, -c44.xywz  // GetHue::temp3<0,0,0,0>
                              cmp r3.w, r3.w, r4.w, r6.x  // GetHue::temp3<0>
                              cmp r3.w, r4.w, r3.w, r5.w  // GetHue::temp3<0>

#line 131
                              mad r4.w, r5.y, r3.w, r2.w  // ::rgbComponent<0>

#line 134
                              add r7.xyz, r3.w, c45.yzww
                              add r3.w, -r3.w, -c45.w
                              mul r3.w, r3.w, r5.x
                              mad r3.w, r3.w, c45.x, r2.w  // ::rgbComponent<0>
                              cmp r3.w, r7.z, r2.w, r3.w  // ::rgbComponent<0>
                              cmp r3.w, r7.y, r3.w, r3.z  // ::rgbComponent<0>
                              cmp r4.y, r7.x, r3.w, r4.w  // ::rgbComponent<0>

#line 125
                              add r3.w, -r6.y, c5.y
                              cmp r3.w, r3.w, r6.y, r6.w  // GetHue::temp3<0>
                              cmp r3.w, r6.y, r3.w, r6.z  // GetHue::temp3<0>

#line 131
                              mad r4.w, r5.y, r3.w, r2.w  // ::rgbComponent<0>

#line 134
                              add r5.yzw, r3.w, c45
                              add r3.w, -r3.w, -c45.w
                              mul r3.w, r3.w, r5.x
                              mad r3.w, r3.w, c45.x, r2.w  // ::rgbComponent<0>
                              cmp r2.w, r5.w, r2.w, r3.w  // ::rgbComponent<0>
                              cmp r2.w, r5.z, r2.w, r3.z  // ::rgbComponent<0>
                              cmp r4.z, r5.y, r2.w, r4.w  // ::rgbComponent<0>

#line 209
                            endif

#line 400
                            lrp r1.xyz, c1.x, r4, r0  // ::result<0,1,2>
                            mov r1.w, r0.w  // ::result<3>
                          else
                            if_eq r3.x, c50.y

#line 406
                              rcp r2.w, c1.x
                              mul_sat r2.xyz, r2.w, r2  // Blend::blendColor<0,1,2>

#line 425
                              max r4.xyz, r0, r2  // ::result<0,1,2>

#line 428
                              lrp r1.xyz, c1.x, r4, r0  // ::result<0,1,2>
                              mov r1.w, r0.w  // ::result<3>
                            else
                              if_eq r3.x, c50.z

#line 434
                                rcp r2.w, c1.x
                                mul_sat r2.xyz, r2.w, r2  // Blend::blendColor<0,1,2>

#line 438
                                add r4.xyz, r0, r2
                                add_sat r4.xyz, r4, -c5.y  // ::result<0,1,2>

#line 441
                                lrp r1.xyz, c1.x, r4, r0  // ::result<0,1,2>
                                mov r1.w, r0.w  // ::result<3>
                              else
                                if_eq r3.x, c50.w

#line 447
                                  rcp r2.w, c1.x
                                  mul_sat r2.xyz, r2.w, r2  // Blend::blendColor<0,1,2>

#line 451
                                  add r4.xyz, r0, r2  // ::result<0,1,2>

#line 454
                                  lrp r1.xyz, c1.x, r4, r0  // ::result<0,1,2>
                                  mov r1.w, r0.w  // ::result<3>
                                else
                                  if_eq r3.x, c51.x

#line 460
                                    rcp r2.w, c1.x
                                    mul_sat r2.xyz, r2.w, r2  // Blend::blendColor<0,1,2>

#line 477
                                    add r4.xyz, -r2, -c3.y
                                    add r5.xyz, r2, c3.y
                                    mad r5.xyz, r5, -c5.z, r0  // ::result<0,1,2>
                                    mad r6.xyz, r2, -c5.z, r0
                                    add r6.xyz, r6, -c5.y  // ::result<0,1,2>
                                    cmp r4.xyz, r4, r6, r5  // ::result<0,1,2>

#line 484
                                    lrp r1.xyz, c1.x, r4, r0  // ::result<0,1,2>
                                    mov r1.w, r0.w  // ::result<3>
                                  else
                                    if_eq r3.x, c51.y

#line 490
                                      rcp r2.w, c1.x
                                      mul_sat r2.xyz, r2.w, r2  // Blend::blendColor<0,1,2>

#line 175
                                      add r4.xyz, -r0.xzyw, r0.zyxw

#line 149
                                      cmp r3.zw, r4.z, r0.xyyx, r0.xyxy
                                      min r2.w, r0.z, r3.z  // ::fmin<0>
                                      max r4.w, r3.w, r0.z  // ::fmax<0>
                                      add r3.z, -r2.w, r4.w  // ::delta<0>
                                      add r2.w, r2.w, r4.w  // ::maxplusmin<0>

#line 167
                                      add r3.w, r2.w, -c5.y
                                      rcp r5.x, r2.w
                                      mul r5.x, r3.z, r5.x  // ::hsl<1>
                                      add r2.w, -r2.w, -c5.z
                                      rcp r2.w, r2.w
                                      mul r2.w, r2.w, r3.z  // ::hsl<1>
                                      cmp r5.x, r3.w, r2.w, r5.x  // ::hsl<1>

#line 174
                                      add r6.xy, r0, -r4.w
                                      rcp r2.w, r3.z

#line 177
                                      mul r3.w, r2.w, r4.y  // ::hsl<0>
                                      mad r4.xy, r4.xzzw, r2.w, c43  // ::hsl<0,0>
                                      cmp r2.w, -r6_abs.y, r4.x, r4.y  // ::hsl<0>
                                      cmp r2.w, -r6_abs.x, r3.w, r2.w  // ::hsl<0>
                                      mul r3.w, r2.w, c42.w  // ::hsl<0>

#line 182
                                      mad r4.x, r2.w, c43.z, c43.w  // ::hsl<0>
                                      cmp r5.yzw, r2.w, r3.w, r4.x  // ::hsl<0,0,0>
                                      cmp r4, -r3_abs.z, c3.x, r5  // ::hsl<1,0,0,0>

#line 148
                                      add r2.w, -r2.y, r2.x
                                      cmp r3.zw, r2.w, r2.xyyx, r2.xyxy
                                      min r5.x, r2.z, r3.z  // ::fmin<0>
                                      max r5.y, r3.w, r2.z  // ::fmax<0>
                                      add r2.w, r5.x, r5.y  // ::maxplusmin<0>

#line 154
                                      mul r5.xyz, r2.w, -c3.y  // ::hsl<2,2,2>

#line 192
                                      if_eq r4.x, c3.x

#line 195
                                      else

#line 199
                                        add r3.z, r2.w, -c5.y

#line 126
                                        add r6, r4, c44  // GetHue::temp3<0,0,0>

#line 200
                                        mul r3.w, r5.z, r6.x  // ::temp2<0>
                                        mad r4.y, r2.w, -c3.y, r4.x
                                        mad r4.x, r4.x, -r5.z, r4.y  // ::temp2<0>
                                        cmp r3.z, r3.z, r4.x, r3.w  // ::temp2<0>
                                        add r2.w, r2.w, -r3.z  // ::temp1<0>

#line 125
                                        add r3.w, -r6.y, c5.y
                                        cmp r3.w, r3.w, r6.y, r6.w  // GetHue::temp3<0>
                                        cmp r3.w, r6.y, r3.w, r6.z  // GetHue::temp3<0>

#line 131
                                        add r4.x, -r2.w, r3.z
                                        mul r4.y, r4.x, c45.x
                                        mad r4.z, r4.y, r3.w, r2.w  // ::rgbComponent<0>

#line 134
                                        add r6.xyz, r3.w, c45.yzww
                                        add r3.w, -r3.w, -c45.w
                                        mul r3.w, r3.w, r4.x
                                        mad r3.w, r3.w, c45.x, r2.w  // ::rgbComponent<0>
                                        cmp r3.w, r6.z, r2.w, r3.w  // ::rgbComponent<0>
                                        cmp r3.w, r6.y, r3.w, r3.z  // ::rgbComponent<0>
                                        cmp r5.x, r6.x, r3.w, r4.z  // ::rgbComponent<0>

#line 125
                                        add r3.w, -r4.w, c5.y
                                        add r6, r4.w, c48  // GetHue::temp3<0,0,0,0>
                                        cmp r3.w, r3.w, r4.w, r6.y  // GetHue::temp3<0>
                                        cmp r3.w, r4.w, r3.w, r6.x  // GetHue::temp3<0>

#line 131
                                        mad r4.z, r4.y, r3.w, r2.w  // ::rgbComponent<0>

#line 134
                                        add r7.xyz, r3.w, c45.yzww
                                        add r3.w, -r3.w, -c45.w
                                        mul r3.w, r3.w, r4.x
                                        mad r3.w, r3.w, c45.x, r2.w  // ::rgbComponent<0>
                                        cmp r3.w, r7.z, r2.w, r3.w  // ::rgbComponent<0>
                                        cmp r3.w, r7.y, r3.w, r3.z  // ::rgbComponent<0>
                                        cmp r5.y, r7.x, r3.w, r4.z  // ::rgbComponent<0>

#line 125
                                        add r3.w, -r6.z, c5.y
                                        add r4.z, r4.w, -c44.z  // GetHue::temp3<0>
                                        cmp r3.w, r3.w, r6.z, r4.z  // GetHue::temp3<0>
                                        cmp r3.w, r6.z, r3.w, r6.w  // GetHue::temp3<0>

#line 131
                                        mad r4.y, r4.y, r3.w, r2.w  // ::rgbComponent<0>

#line 134
                                        add r6.xyz, r3.w, c45.yzww
                                        add r3.w, -r3.w, -c45.w
                                        mul r3.w, r3.w, r4.x
                                        mad r3.w, r3.w, c45.x, r2.w  // ::rgbComponent<0>
                                        cmp r2.w, r6.z, r2.w, r3.w  // ::rgbComponent<0>
                                        cmp r2.w, r6.y, r2.w, r3.z  // ::rgbComponent<0>
                                        cmp r5.z, r6.x, r2.w, r4.y  // ::rgbComponent<0>

#line 209
                                      endif

#line 497
                                      lrp r1.xyz, c1.x, r5, r0  // ::result<0,1,2>
                                      mov r1.w, r0.w  // ::result<3>
                                    else
                                      if_eq r3.x, c51.z

#line 503
                                        rcp r2.w, c1.x
                                        mul_sat r2.xyz, r2.w, r2  // Blend::blendColor<0,1,2>

#line 507
                                        mul r4.xyz, r0, r2  // ::result<0,1,2>

#line 510
                                        lrp r1.xyz, c1.x, r4, r0  // ::result<0,1,2>
                                        mov r1.w, r0.w  // ::result<3>
                                      else
                                        if_eq r3.x, c51.w

#line 516
                                          rcp r2.w, c1.x
                                          mul_sat r2.xyz, r2.w, r2  // Blend::blendColor<0,1,2>

#line 519
                                          add r4.xyz, -r0, c5.y
                                          add r4.xyz, -r2, r4
                                          add r4.xyz, -r4_abs, c5.y  // ::result<0,1,2>

#line 522
                                          lrp r1.xyz, c1.x, r4, r0  // ::result<0,1,2>
                                          mov r1.w, r0.w  // ::result<3>
                                        else
                                          if_eq r3.x, c47.x
                                            add r2.w, r3.y, -c1.x
                                            add r3.y, -r0.w, c5.y
                                            mad r1.w, r2.w, -r3.y, c5.y  // ::result<3>

#line 530
                                            mul r3.yzw, r2.xxyz, c1.x
                                            rcp r4.x, r1.w
                                            mul r4.yzw, r0.w, r0.xxyz
                                            mul r4.yzw, r2.w, r4
                                            mul r4.yzw, r4.x, r4
                                            mad r1.xyz, r3.yzww, r4.x, r4.yzww  // ::result<0,1,2>
                                          else
                                            add r2.w, r3.x, c47.y

#line 536
                                            rcp r3.x, c1.x
                                            mul_sat r3.xyz, r2, r3.x  // Blend::blendColor<0,1,2>

#line 554
                                            add r4.xyz, -r0, -c3.y
                                            add r5.xyz, r0, c3.y
                                            mad r5.xyz, r5, -c5_abs.z, c5_abs.y
                                            add r6.xyz, -r3, c5.y
                                            mad r5.xyz, r5, -r6, c5.y  // ::result<0,1,2>

#line 546
                                            dp2add r3.w, r3.x, r0.x, c3.x  // ::result<0>
                                            cmp r6.x, r4.x, r3.w, r5.x  // ::result<0>

#line 552
                                            dp2add r3.w, r3.y, r0.y, c3.x  // ::result<1>
                                            cmp r6.y, r4.y, r3.w, r5.y  // ::result<1>

#line 558
                                            dp2add r3.w, r3.z, r0.z, c3.x  // ::result<2>
                                            cmp r6.z, r4.z, r3.w, r5.z  // ::result<2>

#line 561
                                            lrp r1.xyz, c1.x, r6, r0  // ::result<0,1,2>
                                            cmp r2.xyz, -r2_abs.w, r3, r2  // Blend::blendColor<0,1,2>
                                            mov r1.w, r0.w  // ::result<3>
                                          endif
                                        endif
                                      endif
                                    endif
                                  endif
                                endif
                              endif
                            endif
                          endif
                        endif
                      endif
                    endif
                  endif
                endif
              endif
            endif
          endif
        endif
      endif
      mov r3.x, c0.x  // ::BlendMode<0>
      if_eq r3.x, c47.z

#line 567
        rcp r2.w, c1.x
        mul_sat r3.yzw, r2.w, r2.xxyz  // Blend::blendColor<0,1,2>

#line 570
        min r4.xyz, r3.yzww, r0
        max r5.xyz, r0, r3.yzww
        add r3.yzw, r4.xxyz, -r5.xxyz
        add r3.yzw, r3, c5.y  // ::result<0,1,2>

#line 573
        lrp r1.xyz, c1.x, r3.yzww, r0  // ::result<0,1,2>
      else
        if_eq r3.x, c47.w

#line 579
          rcp r2.w, c1.x
          mul_sat r3.yzw, r2.w, r2.xxyz  // Blend::blendColor<0,1,2>

#line 596
          add r4.xyz, -r3.yzww, -c3.y
          add r5.xyz, r3.yzww, c3.y
          add r5.xyz, r5, r5
          max r6.xyz, r0, r5  // ::result<0,1,2>
          add r3.yzw, r3, r3
          min r5.xyz, r3.yzww, r0  // ::result<0,1,2>
          cmp r3.yzw, r4.xxyz, r5.xxyz, r6.xxyz  // ::result<0,1,2>

#line 603
          lrp r1.xyz, c1.x, r3.yzww, r0  // ::result<0,1,2>
        else
          if_eq r3.x, c52.x

#line 609
            rcp r2.w, c1.x
            mul_sat r3.yzw, r2.w, r2.xxyz  // Blend::blendColor<0,1,2>

#line 614
            add r4.xyz, r3.yzww, -c5.y
            mul r5.xyz, r0, r0
            add r6.xyz, -r3.yzww, c5.y
            rcp r2.w, r6.x
            mul r2.w, r2.w, r5.x
            min r4.w, r2.w, c5.y
            cmp r7.x, r4.x, r3.y, r4.w  // ::result<0>
            rcp r2.w, r6.y
            mul r2.w, r2.w, r5.y
            min r3.y, r2.w, c5.y
            cmp r7.y, r4.y, r3.z, r3.y  // ::result<1>
            rcp r2.w, r6.z
            mul r2.w, r2.w, r5.z
            min r3.y, r2.w, c5.y
            cmp r7.z, r4.z, r3.w, r3.y  // ::result<2>

#line 617
            lrp r1.xyz, c1.x, r7, r0  // ::result<0,1,2>
          else

#line 623
            if_eq r3.x, c52.y

#line 626
              rcp r2.w, c1.x
              mul_sat r3.yzw, r2.w, r2.xxyz  // Blend::blendColor<0,1,2>

#line 148
              add r2.w, -r0.y, r0.x
              cmp r4.xy, r2.w, r0.yxzw, r0
              min r5.x, r0.z, r4.x  // ::fmin<0>
              max r5.y, r4.y, r0.z  // ::fmax<0>
              add r4.x, r5.x, r5.y  // ::maxplusmin<0>

#line 154
              mul r4.yzw, r4.x, -c3.y  // ::hsl<2,2,2>

#line 148
              add r5.z, -r3.z, r3.y
              cmp r3.yz, r5.z, r3.xzyw, r3
              min r5.z, r3.w, r3.y  // ::fmin<0>
              max r5.w, r3.z, r3.w  // ::fmax<0>
              add r3.y, -r5.z, r5.w  // ::delta<0>
              add r3.z, r5.z, r5.w  // ::maxplusmin<0>

#line 167
              add r3.w, r3.z, -c5.y
              rcp r5.z, r3.z
              mul r5.z, r3.y, r5.z  // ::hsl<1>
              add r3.z, -r3.z, -c5.z
              rcp r3.z, r3.z
              mul r3.z, r3.z, r3.y  // ::hsl<1>
              cmp r3.z, r3.w, r3.z, r5.z  // ::hsl<1>

#line 183
              cmp r3.y, -r3_abs.y, c3.x, r3.z  // ::hsl<1>

#line 192
              if_eq r3.y, c3.x

#line 195
              else

#line 150
                add r3.z, -r5.x, r5.y  // ::delta<0>

#line 174
                add r5.xy, r0, -r5.y
                add r3.w, -r0.z, r0.y
                rcp r5.z, r3.z
                mul r3.w, r3.w, r5.z  // ::hsl<0>
                add r5.w, -r0.x, r0.z
                mad r5.w, r5.w, r5.z, -c5.z  // ::hsl<0>
                mad r2.w, r2.w, r5.z, c43.y  // ::hsl<0>
                cmp r2.w, -r5_abs.y, r5.w, r2.w  // ::hsl<0>
                cmp r2.w, -r5_abs.x, r3.w, r2.w  // ::hsl<0>
                mul r3.w, r2.w, c42.w  // ::hsl<0>

#line 182
                mad r5.x, r2.w, c43.z, c43.w  // ::hsl<0>
                cmp r2.w, r2.w, r3.w, r5.x  // ::hsl<0>
                cmp r2.w, -r3_abs.z, c3.x, r2.w  // ::hsl<0>

#line 199
                add r3.z, r4.x, -c5.y
                add r3.w, r3.y, c5.y
                mul r3.w, r3.w, r4.w  // ::temp2<0>
                mad r5.x, r4.x, -c3.y, r3.y
                mad r3.y, r3.y, -r4.w, r5.x  // ::temp2<0>
                cmp r3.y, r3.z, r3.y, r3.w  // ::temp2<0>
                add r3.z, -r3.y, r4.x  // ::temp1<0>

#line 124
                add r5, r2.w, c44.yzwx  // GetHue::temp3<0,0,0,0>
                add r3.w, -r5.x, c5.y
                cmp r3.w, r3.w, r5.x, r5.z  // GetHue::temp3<0>
                cmp r3.w, r5.x, r3.w, r5.y  // GetHue::temp3<0>

#line 131
                add r4.x, -r3.z, r3.y
                mul r5.x, r4.x, c45.x
                mad r5.y, r5.x, r3.w, r3.z  // ::rgbComponent<0>

#line 134
                add r6.xyz, r3.w, c45.yzww
                add r3.w, -r3.w, -c45.w
                mul r3.w, r3.w, r4.x
                mad r3.w, r3.w, c45.x, r3.z  // ::rgbComponent<0>
                cmp r3.w, r6.z, r3.z, r3.w  // ::rgbComponent<0>
                cmp r3.w, r6.y, r3.w, r3.y  // ::rgbComponent<0>
                cmp r4.y, r6.x, r3.w, r5.y  // ::rgbComponent<0>

#line 125
                add r3.w, -r2.w, c5.y
                add r6, r2.w, -c44.xywz  // GetHue::temp3<0,0,0,0>
                cmp r3.w, r3.w, r2.w, r6.x  // GetHue::temp3<0>
                cmp r2.w, r2.w, r3.w, r5.w  // GetHue::temp3<0>

#line 131
                mad r3.w, r5.x, r2.w, r3.z  // ::rgbComponent<0>

#line 134
                add r5.yzw, r2.w, c45
                add r2.w, -r2.w, -c45.w
                mul r2.w, r2.w, r4.x
                mad r2.w, r2.w, c45.x, r3.z  // ::rgbComponent<0>
                cmp r2.w, r5.w, r3.z, r2.w  // ::rgbComponent<0>
                cmp r2.w, r5.z, r2.w, r3.y  // ::rgbComponent<0>
                cmp r4.z, r5.y, r2.w, r3.w  // ::rgbComponent<0>

#line 125
                add r2.w, -r6.y, c5.y
                cmp r2.w, r2.w, r6.y, r6.w  // GetHue::temp3<0>
                cmp r2.w, r6.y, r2.w, r6.z  // GetHue::temp3<0>

#line 131
                mad r3.w, r5.x, r2.w, r3.z  // ::rgbComponent<0>

#line 134
                add r5.xyz, r2.w, c45.yzww
                add r2.w, -r2.w, -c45.w
                mul r2.w, r2.w, r4.x
                mad r2.w, r2.w, c45.x, r3.z  // ::rgbComponent<0>
                cmp r2.w, r5.z, r3.z, r2.w  // ::rgbComponent<0>
                cmp r2.w, r5.y, r2.w, r3.y  // ::rgbComponent<0>
                cmp r4.w, r5.x, r2.w, r3.w  // ::rgbComponent<0>

#line 209
              endif

#line 633
              lrp r1.xyz, c1.x, r4.yzww, r0  // ::result<0,1,2>
            else
              if_eq r3.x, c52.z

#line 639
                rcp r2.w, c1.x
                mul_sat r3.yzw, r2.w, r2.xxyz  // Blend::blendColor<0,1,2>

#line 643
                add r4.xyz, -r0, c5.y
                add r3.yzw, -r3, c5.y
                mad r3.yzw, r4.xxyz, -r3, c5.y  // ::result<0,1,2>

#line 646
                lrp r1.xyz, c1.x, r3.yzww, r0  // ::result<0,1,2>
              else
                if_eq r3.x, c52.w

#line 652
                  rcp r2.w, c1.x
                  mul_sat r3.yzw, r2.w, r2.xxyz  // Blend::blendColor<0,1,2>

#line 657
                  add r4.xyz, r3.yzww, c3.y
                  add r5.xyz, r0, r0
                  mul r6.xyz, r0, r0
                  mad r7.xyz, r3.yzww, -c5_abs.z, c5_abs.y
                  mul r6.xyz, r6, r7
                  mad r6.xyz, r5, r3.yzww, r6
                  rsq r2.w, r0.x
                  rcp r2.w, r2.w
                  mad r7.xyz, r3.yzww, -c5.z, -c5.y
                  add r3.yzw, -r3, c5.y
                  mul r3.yzw, r3, r5.xxyz
                  mad r2.w, r2.w, r7.x, r3.y
                  cmp r5.x, r4.x, r2.w, r6.x  // ::result<0>
                  rsq r2.w, r0.y
                  rcp r2.w, r2.w
                  mad r2.w, r2.w, r7.y, r3.z
                  cmp r5.y, r4.y, r2.w, r6.y  // ::result<1>
                  rsq r2.w, r0.z
                  rcp r2.w, r2.w
                  mad r2.w, r2.w, r7.z, r3.w
                  cmp r5.z, r4.z, r2.w, r6.z  // ::result<2>

#line 660
                  lrp r1.xyz, c1.x, r5, r0  // ::result<0,1,2>
                else
                  if_eq r3.x, c46.x

#line 666
                    rcp r2.w, c1.x
                    mul_sat r2.xyz, r2.w, r2  // Blend::blendColor<0,1,2>

#line 671
                    add r3.xyz, r2, c3.y
                    add r2.xyz, r2, r2
                    add r4.xyz, -r0, c5.y
                    rcp r2.w, r2.x
                    mad r2.w, r4.x, -r2.w, c5.y
                    max r3.w, r2.w, c3.x
                    cmp r2.x, -r2.x, r2.x, r3.w
                    add r5.xyz, r3, r3
                    mad r6.xyz, r3, -c5.z, -c5.y
                    mad r7.xyz, r3, -c5_abs.z, c5_abs.y
                    rcp r2.w, r7.x
                    mul r2.w, r0.x, r2.w
                    min r3.w, r2.w, c5.y
                    cmp r2.w, r6.x, r5.x, r3.w
                    cmp r8.x, r3.x, r2.w, r2.x  // ::result<0>
                    rcp r2.x, r2.y
                    mad r2.x, r4.y, -r2.x, c5.y
                    max r3.x, r2.x, c3.x
                    cmp r2.x, -r2.y, r2.y, r3.x
                    rcp r2.y, r7.y
                    mul r2.y, r0.y, r2.y
                    min r3.x, r2.y, c5.y
                    cmp r2.y, r6.y, r5.y, r3.x
                    cmp r8.y, r3.y, r2.y, r2.x  // ::result<1>
                    rcp r2.x, r2.z
                    mad r2.x, r4.z, -r2.x, c5.y
                    max r3.x, r2.x, c3.x
                    cmp r2.x, -r2.z, r2.z, r3.x
                    rcp r2.y, r7.z
                    mul r2.y, r0.z, r2.y
                    min r3.x, r2.y, c5.y
                    cmp r2.y, r6.z, r5.z, r3.x
                    cmp r8.z, r3.z, r2.y, r2.x  // ::result<2>

#line 674
                    lrp r1.xyz, c1.x, r8, r0  // ::result<0,1,2>
                  endif
                endif
              endif
            endif
          endif
        endif
      endif

#line 897
    else
      mov r1, c3.x
    endif
    cmp oC0, -r0.w, r0, r1  // ::main<0,1,2,3>

// approximately 4515 instruction slots used (1 texture, 4514 arithmetic)
